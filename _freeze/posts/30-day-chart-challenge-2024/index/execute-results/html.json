{
  "hash": "799edda6a09296d25129a9b82dd61917",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"30 Day Chart Challenge 2024\"\ndescription: \"Let's make some charts!\"\nauthor: \"gregers kjerulf dubrow\"\ndate: \"today\"\ncategories: [post, rstats, ggplot, dataviz, chartchallenge, tidytuesday, eurostat]\nimage: \"prompts.png\"\ntoc: false\nlightbox: true\neditor: \n  mode: source\n---\n\n\n\n\n![](prompts.png){width=\"75%\" fig-align=\"left\" fig-alt=\"image listing the prompts for the 30 day chart challenge 2024.\"}\n\n## My Plan for the Challenge {#plan}\n\nIf you regularly scroll through dataviz social media you probably see lots of posts in April where people show off their work for the [30 Day Chart Challenge](https://github.com/30DayChartChallenge/Edition2024). I never participate in these chart or map challenges because usually they take me by surprise and it's alreayd a week in before I notice and then I figure I'm too late.\n\nWell not this year. Even though I'm (checks calendar) *three weeks* late to the party, I'm going to try and add a few charts to the challenge. I figure it's a good way to keep me consistently creating new visualisations, using the prompts to spur me to think about different data sources and dataviz approaches. My plan is to:\n\n-   Produce charts for as many prompts as possible, working in prompt-day order.\n-   Post them to social media on my [Bluesky](https://bsky.app/profile/gregerskjerulf.bsky.social), [Mastodon](https://fosstodon.org/@Greg_Dubrow), [Twitter](https://twitter.com/greg_dubrow), and [LinkedIn](https://www.linkedin.com/in/dubrowg/) accounts.\n-   Add them to this post, meaning the posting date will refresh to the date I've added the chart.So If I get to alot or even all of them, this will be a long post.\n\nI may not get to every prompt, but I'll do what I can. So let's get going.\n\n## Prompt #1 - Part-to-Whole {#prompt1}\n\nI chose to interpret this prompt by doing a stacked bar chart displaying educational attainment as a proportion of populations by regions in the UK. It doubles as a late-to-the-party entry for the [January 23, 2024 Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2024/2024-01-23) challenge.\n\nThe original data is from the UK Office of National Statistics, in a report they produced looking at [educational attainment by socio-economic factors](https://www.ons.gov.uk/peoplepopulationandcommunity/educationandchildcare/articles/whydochildrenandyoungpeopleinsmallertownsdobetteracademicallythanthoseinlargertowns/2023-07-25).\n\nMy plan for this was to knock out the chart in about an hour, but I needed up having to do a bit more data transformation than I thought. I also had to read up a bit on UK education [levels](https://www.gov.uk/what-different-qualification-levels-mean/list-of-qualification-levels) and [stages](https://www.gov.uk/national-curriculum). In the end, it took a few hours to get it as I wanted.\n\nFirst we'll get and clean the data...\n\n\n::: {.cell ECHO='true'}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidytuesdayR) #to get data from tidy tuesday repo\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(ggtext) # to help make ggplot text look good\n\n# load tidy tuesday data\nukeduc1 <- tt_load(\"2024-01-23\")\n#> \n#> \tDownloading file 1 of 1: `english_education.csv`\n\n# create tibble from csv, clean data, add some fields for the chart\nukeduc <- as_tibble(ukeduc1$english_education) %>%\n\tmutate(town11nm = ifelse(town11nm == \"Outer london BUAs\", \"Outer London BUAs\", town11nm)) %>%\n\tmutate(ttwa_classification = ifelse(\n\t\ttown11nm %in% c(\"Inner London BUAs\", \"Outer London BUAs\"), \n\t\t\"Majority conurbation\", ttwa_classification)) %>%\n\tmutate(ttwa11nm = ifelse(\n\t\ttown11nm %in% c(\"Inner London BUAs\", \"Outer London BUAs\"), \"London\", ttwa11nm)) %>%\n\tmutate(ttwa11cd = ifelse(\n\t\ttown11nm %in% c(\"Inner London BUAs\", \"Outer London BUAs\"), \"E30000234\", ttwa11cd)) %>%\n\tmutate(across(26:29, ~ifelse(is.na(.),0,.))) %>%\n\tmutate(level_sum = rowSums(.[c(26:29)])) %>%\n\t# to get the number of students in the achievement groups we need to multiply the cohort\n\t# by the percentage and divide by 100 as in the original data they were displayed as \n\t# full numbers, eg 17.2 instead of 0.172.\n\tmutate(highest_level_qualification_achieved_by_age_22_na = 100 - level_sum) %>%\n\tmutate(n_lesslev1_age22 =\n\t\t\tround(highest_level_qualification_achieved_by_age_22_less_than_level_1 * (ks4_2012_2013_counts/100) ,0)) %>%\n\tmutate(n_lev1to2_age22 =\n\t\t\tround(highest_level_qualification_achieved_by_age_22_level_1_to_level_2 * (ks4_2012_2013_counts/100) ,0)) %>%\n\tmutate(n_lev3to5_age22 =\n\t\t\tround(highest_level_qualification_achieved_by_age_22_level_3_to_level_5 * (ks4_2012_2013_counts/100) ,0)) %>%\n\tmutate(n_lev6plus_age22 =\n\t\t\tround(highest_level_qualification_achieved_by_age_22_level_6_or_above * (ks4_2012_2013_counts/100) ,0)) %>%\n\tmutate(n_lev_na_age22 =\n\t\t\tround(highest_level_qualification_achieved_by_age_22_na * (ks4_2012_2013_counts/100) ,0))\n```\n:::\n\n\nOk, so we have data, let's make the chart. It's a horizontal bar chart showing the eudcational attainment at age 22 of a cohort of 15-16 year old students who sat for college qualifying exams (GCSEs) in the 2012-13 school year. Meaning the ending time point here is 2018-19. Attainment is plotted by level and by region. Because the original data is by town, we have to group by region to get what we want.\n\n\n::: {.cell ECHO='true'}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the chart\"}\n# need to create cohort population by region\nukeduc %>%\n\trename(region =rgn11nm ) %>%\n\t# group by regions and create region totals \n\tgroup_by(region) %>%\n\tsummarise(region_cohort = sum(ks4_2012_2013_counts),\n\t\t\t\t\tregion_levless1_age22 = sum(n_lesslev1_age22),\n\t\t\t\t\tregion_lev1to2_age22 = sum(n_lev1to2_age22),\n\t\t\t\t\tregion_lev3to5_age22 = sum(n_lev3to5_age22),\n\t\t\t\t\tregion_lev6plus_age22 = sum(n_lev6plus_age22),\n\t\t\t\t\tregion_lev_na_age22 = sum(n_lev_na_age22)) %>%\n\t# pivot longer and make the education attainment field into factors. \n\t# factor labels for the chart\n\tpivot_longer(cols = ends_with(\"age22\"), \n\t\t\t\t\t\tnames_to = \"ed_ettain_age22\", \n\t\t\t\t\t\tvalues_to = \"ed_attain_n\") %>%\n\tmutate(\n\t\ted_ettain_age22 = \n\t\t\tfactor(ed_ettain_age22, \n\t\t\t\t\tlevels = c(\"region_lev_na_age22\", \"region_levless1_age22\", \"region_lev1to2_age22\", \n\t\t\t\t\t\t\t\"region_lev3to5_age22\",  \"region_lev6plus_age22\"), \n\t\t\t\t\tlabels = c(\"No data\", \"Level <1\", \"Level = 1-2\", \"Level = 3-5\", \"Level = 6+\"))) %>%\n\tmutate(ed_attain_pct = ed_attain_n / region_cohort) %>%\n\tmutate(ed_attain_pct2 = round(ed_attain_pct*100, 1)) %>%\n\tungroup() %>%\n\tmutate(region = factor(region)) %>%\n\tfilter(!is.na(region)) %>%\n\t# pass this temporary set thru to the ggplot call\n\t{. ->> tmp} %>%\n\tggplot(aes(ed_attain_pct, fct_rev(region), fill = fct_rev(ed_ettain_age22))) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_x_continuous(\n\t\texpand = c(0,0), \n\t\tbreaks = c(0, 0.25, 0.50, 0.75, 1), \n\t\tlabels = c(\"0\", \"25%\", \"50%\", \"75%\", \"100%\")) +\n\tgeom_text(data = subset(tmp, ed_attain_pct >0.025),\n\t\taes(label = scales::percent(round(ed_attain_pct , 2))),\n\t\t\t\t\tposition = position_stack(vjust = 0.5),\n\t\t\t\t\tcolor= \"white\", vjust = 0.5, size = 5) +\n\tlabs(title = \"Students in London most likely to have at least 4-year degree by Age 22\",\n\t\tsubtitle = \"Sixth Year Educational Outcomes for Level 4 2012-13 Cohort by UK Region\",\n\t\tcaption = \"*Tidy Tuesday data 01/23/2024, from UK Office of National Statistics*\",\n\t\tx = \"\", y = \"Region\") +\n\tscale_fill_brewer(palette = \"Set2\") +\n\ttheme_minimal() +\n\ttheme(legend.position = \"bottom\", legend.spacing.x = unit(0, 'cm'), \n\t\t\tlegend.key.width = unit(1.5, 'cm'), legend.margin=margin(-10, 0, 0, 0),\n\t\t\tplot.title = element_text(hjust = 1), \n\t\t\tplot.caption = element_markdown(),\n\t\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank()) +\n\tguides(fill = guide_legend(\n\t\tlabel.position = \"bottom\", reverse = TRUE, \n\t\ttitle = \"Cohort at Age 22\", title.position = \"top\"))\n```\n\n::: {.cell-output-display}\n![](images/prompt1_2-1.png){width=100%}\n:::\n:::\n\n\nWe see from this chart that most in regions the rate of 4-year college degree completion (level 6+) was in the mid-high 20s, with students from the London region having the highest rate at 36%.\n\n*created and posted April 21, 2024*\n\n## Prompt #2 - Neo {#prompt2}\n\nThe way I chose to interpret \"neo\" was by using births by country, or new people by country. The data come from [EuroStat](https://ec.europa.eu/eurostat), via the [`eurostat`](https://github.com/rOpenGov/eurostat) package. I'll use total live births and births per 1000 people for the year 2022 (most recent year available). I'll use [`patchwork`](https://patchwork.data-imaginist.com/) to combine the plots. Unlike prompt 1, this only took a little more than an hour to do.\n\nGetting the data is super simple, and it doesn't need much cleaning, so I'll do all the code in one chunk.\n\n\n::: {.cell ECHO='true'}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting data and making the plots\"}\n# to know the table code \"tps00204\", I had to look up the dataset on-line and copy that value.\n# there is a function in the package to list all available data.\nbirths <- eurostat::get_eurostat(\"tps00204\", type = \"label\", time_format = \"num\") %>%\n\tselect(-freq) %>%\n\trename(year = TIME_PERIOD)\n#> \nindexed 0B in  0s, 0B/s\nindexed 1.00TB in  0s, 2.76PB/s\n                                                                              \n\n# make the plots\ntotal_births <-\nbirths %>%\n\tfilter(year == 2022) %>%\n\tfilter(indic_de == \"Live births - number\") %>%\n\tfilter(!grepl(\"Euro\",geo)) %>%\n\tarrange(desc(values), geo) %>%\n\tmutate(geo = forcats::fct_inorder(geo)) %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(values, fct_rev(geo))) +\n\tgeom_bar(stat = \"identity\", fill = \"#FFCC00\") +\n\tscale_y_discrete(position = \"right\") +\n\t# need to subset data to get highest label to align similar to the rest\n\tgeom_text(data = subset(tmp, values <800000),\n\t\taes(label = format(values, big.mark=\",\")),\n\t\t\t\t\t\tcolor= \"#003399\", size = 4,\n\t\t\t\t\t\thjust = -.25, nudge_x = .25) +\n\tgeom_text(data = subset(tmp, values >800000),\n\t\t\t\t\t\taes(label = format(values, big.mark = \",\")),\n\t\t\t\t\t\tcolor= \"#003399\", size = 4,\n\t\t\t\t\t\thjust = 1, nudge_x = .5) +\n\tlabs(y = \"\", x = \"Total Live Births - 2022\") +\n\ttheme_minimal() +\n\ttheme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\nbirths_per1k <-\nbirths %>%\n\tfilter(year == 2022) %>%\n\tfilter(indic_de == \"Crude birth rate - per thousand persons\") %>%\n\tfilter(!grepl(\"Euro\",geo)) %>%\n\tarrange(desc(values), geo) %>%\n\tmutate(geo = forcats::fct_inorder(geo)) %>%\n\tggplot(aes(values, fct_rev(geo))) +\n\tgeom_bar(stat = \"identity\", fill = \"#003399\") +\n\tgeom_text(aes(label = values),\n\t\t\t\t\t\tposition = position_stack(vjust = 0.5),\n\t\t\t\t\t\tcolor= \"#FFCC00\", vjust = 0.5, size = 4) +\n\tlabs(y = \"\", x = \"Births per 1000 persons - 2022\") +\n\ttheme_minimal() +\n\ttheme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\n\n# put them together with patchwork\nlibrary(patchwork)\ntotal_births + births_per1k + plot_annotation(\n\ttitle = 'Turkey tops in both total births and births / 1000 people',\n\tsubtitle = 'France only other country top 10 in both measures. San Marino bottom in both',\n\tcaption = 'Data from EuroStats using eurostat package')\n```\n\n::: {.cell-output-display}\n![](images/prompt2-1.png){width=100%}\n:::\n:::\n\n\nThere you have it. Turkey is tops in both total number of births and births per 1000 people. France is the only other country in the top 10. Interestingly, Spain is near the top in total number (it's a big country) but towards the bottom in births per 1000. San Marino is last in both total births and rate.\n\nWhat other interesting insights do you see here?\n\n*created and posted April 22, 2024*\n\n## Prompts #3 & 4 - Redo & Waffle {#prompt3&4}\n\nFor this prompt I fulfilled prompt 3 \"redo\" by redoing the chart for prompt 1, and made it a waffle chart to fulfill prompt 4. I'd never done a waffle chart before, so new chart type...hooray! Cheers to Yann Holtz for his [code-through](https://r-graph-gallery.com/web-waffle-for-time-evolution.html) on his \"R Graph Gallery\" website to help me better understand how to set-up the data and plot it.\n\nI'm once again using educational attainment data from the UK, via a Tidy Tuesday set from January 2024. We'll get the data and make the chart in the same code chunk.\n\n\n::: {.cell ECHO='true'}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting data and making the plots\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(tidytuesdayR) #to get data from tidy tuesday repo\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n## ggplot helpers - load if necessary\nlibrary(waffle) # ggplot helper to make a waffle chart\nlibrary(ggtext) # helper functions for ggplot text\n\n# load tidy tuesday data\nukeduc1 <- tt_load(\"2024-01-23\")\n#> \n#> \tDownloading file 1 of 1: `english_education.csv`\n\n# get variable names\nukeduc_names <- as_tibble(names(ukeduc1$english_education))\n\n# create tibble from csv, clean data\nukeduc <- as_tibble(ukeduc1$english_education) %>%\n\tmutate(town11nm = ifelse(town11nm == \"Outer london BUAs\", \"Outer London BUAs\", town11nm)) %>%\n\tmutate(\n\t\tttwa_classification = ifelse(town11nm %in% c(\"Inner London BUAs\", \"Outer London BUAs\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \"Majority conurbation\", ttwa_classification)) %>%\n\tmutate(ttwa11nm = ifelse(town11nm %in% c(\"Inner London BUAs\", \"Outer London BUAs\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"London\", ttwa11nm)) %>%\n\tmutate(ttwa11cd = ifelse(town11nm %in% c(\"Inner London BUAs\", \"Outer London BUAs\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t \"E30000234\", ttwa11cd)) %>%\n\tmutate(across(26:29, ~ifelse(is.na(.),0,.))) %>%\n\tmutate(level_sum = rowSums(.[c(26:29)])) %>%\n\tmutate(highest_level_qualification_achieved_by_age_22_na = 100 - level_sum) %>%\n\tmutate(n_lesslev1_age22 =\n\t\t\t\t \tround(highest_level_qualification_achieved_by_age_22_less_than_level_1 * (ks4_2012_2013_counts/100) ,0)) %>%\n\tmutate(n_lev1to2_age22 =\n\t\t\t\t \tround(highest_level_qualification_achieved_by_age_22_level_1_to_level_2 * (ks4_2012_2013_counts/100) ,0)) %>%\n\tmutate(n_lev3to5_age22 =\n\t\t\t\t \tround(highest_level_qualification_achieved_by_age_22_level_3_to_level_5 * (ks4_2012_2013_counts/100) ,0)) %>%\n\tmutate(n_lev6plus_age22 =\n\t\t\t\t \tround(highest_level_qualification_achieved_by_age_22_level_6_or_above * (ks4_2012_2013_counts/100) ,0)) %>%\n\tmutate(n_lev_na_age22 =\n\t\t\t\t \tround(highest_level_qualification_achieved_by_age_22_na * (ks4_2012_2013_counts/100) ,0))\n\nglimpse(ukeduc)\n#> Rows: 1,104\n#> Columns: 38\n#> $ town11cd                                                          <chr> \"E34…\n#> $ town11nm                                                          <chr> \"Car…\n#> $ population_2011                                                   <dbl> 5456…\n#> $ size_flag                                                         <chr> \"Sma…\n#> $ rgn11nm                                                           <chr> \"Eas…\n#> $ coastal                                                           <chr> \"Non…\n#> $ coastal_detailed                                                  <chr> \"Sma…\n#> $ ttwa11cd                                                          <chr> \"E30…\n#> $ ttwa11nm                                                          <chr> \"Wor…\n#> $ ttwa_classification                                               <chr> \"Maj…\n#> $ job_density_flag                                                  <chr> \"Res…\n#> $ income_flag                                                       <chr> \"Hig…\n#> $ university_flag                                                   <chr> \"No …\n#> $ level4qual_residents35_64_2011                                    <chr> \"Low…\n#> $ ks4_2012_2013_counts                                              <dbl> 65, …\n#> $ key_stage_2_attainment_school_year_2007_to_2008                   <dbl> 65.0…\n#> $ key_stage_4_attainment_school_year_2012_to_2013                   <dbl> 70.7…\n#> $ level_2_at_age_18                                                 <dbl> 72.3…\n#> $ level_3_at_age_18                                                 <dbl> 50.7…\n#> $ activity_at_age_19_full_time_higher_education                     <dbl> 30.7…\n#> $ activity_at_age_19_sustained_further_education                    <dbl> 21.5…\n#> $ activity_at_age_19_appprenticeships                               <dbl> NA, …\n#> $ activity_at_age_19_employment_with_earnings_above_0               <dbl> 52.3…\n#> $ activity_at_age_19_employment_with_earnings_above_10_000          <dbl> 36.9…\n#> $ activity_at_age_19_out_of_work                                    <dbl> NA, …\n#> $ highest_level_qualification_achieved_by_age_22_less_than_level_1  <dbl> 0.0,…\n#> $ highest_level_qualification_achieved_by_age_22_level_1_to_level_2 <dbl> 34.9…\n#> $ highest_level_qualification_achieved_by_age_22_level_3_to_level_5 <dbl> 39.7…\n#> $ highest_level_qualification_achieved_by_age_22_level_6_or_above   <dbl> 0.0,…\n#> $ highest_level_qualification_achieved_b_age_22_average_score       <dbl> 3.32…\n#> $ education_score                                                   <dbl> -0.5…\n#> $ level_sum                                                         <dbl> 74.6…\n#> $ highest_level_qualification_achieved_by_age_22_na                 <dbl> 25.4…\n#> $ n_lesslev1_age22                                                  <dbl> 0, 0…\n#> $ n_lev1to2_age22                                                   <dbl> 23, …\n#> $ n_lev3to5_age22                                                   <dbl> 26, …\n#> $ n_lev6plus_age22                                                  <dbl> 0, 8…\n#> $ n_lev_na_age22                                                    <dbl> 17, …\n\n# cohort ed attainment by region\nukeduc2 <-\n\tukeduc %>%\n\trename(region =rgn11nm ) %>%\n\tgroup_by(region) %>%\n\tsummarise(region_cohort = sum(ks4_2012_2013_counts),\n\t\t\t\t\t\tregion_levless1_age22 = sum(n_lesslev1_age22),\n\t\t\t\t\t\tregion_lev1to2_age22 = sum(n_lev1to2_age22),\n\t\t\t\t\t\tregion_lev3to5_age22 = sum(n_lev3to5_age22),\n\t\t\t\t\t\tregion_lev6plus_age22 = sum(n_lev6plus_age22)) %>%\n\tpivot_longer(cols = ends_with(\"age22\"), names_to = \"ed_attain_age22\", values_to = \"ed_attain_n\") %>%\n\tmutate(ed_attain_pct = ed_attain_n / region_cohort) %>%\n\tmutate(ed_attain_pct2 = round(ed_attain_pct*100)) %>%\n\tmutate(region = factor(region))%>%\n\tfilter(!is.na(region)) %>%\n\tselect(region, region_cohort, ed_attain_age22, ed_attain_pct2) %>%\n\t## the data was a bit messy, so to get the values to sum to 100 to make the waffle\n\t## chart fill the plot area, I had to do a little reshaping after doing the percentages.\n\tpivot_wider(names_from = ed_attain_age22, values_from = ed_attain_pct2) %>%\n\tmutate(region_sum = rowSums(.[c(3:6)])) %>%\n\tmutate(region_lev_na_age22 = ifelse(region_sum < 100, 100 - region_sum, 0)) %>%\n\tselect(-region_sum) %>%\n\tpivot_longer(cols = ends_with(\"age22\"), names_to = \"ed_attain_age22\", values_to = \"ed_attain_pct\") %>%\n\tmutate(ed_attain_age22 =\n\t\t\t \tfactor(ed_attain_age22,\n\t\t\t \t\t\t\t levels = c(\"region_lev_na_age22\", \"region_levless1_age22\", \"region_lev1to2_age22\",\n\t\t\t \t\t\t\t \t\t\t\t\t \"region_lev3to5_age22\", \"region_lev6plus_age22\"),\n\t\t\t \t\t\t\t labels = c(\"No data\", \"Level <1\", \"Level = 1-2\",\n\t\t\t \t\t\t\t \t\t\t\t\t \"Level = 3-5\", \"Level = 6+\")))\nglimpse(ukeduc2)\n#> Rows: 45\n#> Columns: 4\n#> $ region          <fct> East Midlands, East Midlands, East Midlands, East Midl…\n#> $ region_cohort   <dbl> 39811, 39811, 39811, 39811, 39811, 48849, 48849, 48849…\n#> $ ed_attain_age22 <fct> Level <1, Level = 1-2, Level = 3-5, Level = 6+, No dat…\n#> $ ed_attain_pct   <dbl> 2, 30, 41, 25, 2, 2, 27, 43, 27, 1, 2, 19, 43, 36, 0, …\n\n## chart\nukeduc2\t%>%\n\tggplot(aes(fill = ed_attain_age22, values = ed_attain_pct)) +\n\tgeom_waffle(na.rm=TRUE, n_rows=10, flip=TRUE, size = 0.33, colour = \"white\") +\n\tfacet_wrap(~region, nrow=1,strip.position = \"bottom\") +\n\tscale_x_discrete() +\n\tscale_y_continuous(labels = function(x) x * 10, # make this multiplyer the same as n_rows\n\t\t\t\t\t\t\t\t\t\t expand = c(0,0)) +\n\tscale_fill_brewer(palette = \"Set2\") +\n\t\tlabs(title = \"Students in London most likely to have at least 4-year degree by Age 22\",\n\t\t\t\t subtitle = \"Sixth Year Educational Outcomes for Level 4 2012-13 Cohort by UK Region<br>\n\t\t\t\t Each block = 1 %\",\n\t\t\t\t caption = \"*Tidy Tuesday data 01/23/2024, from UK Office of National Statistics*\",\n\t\t\t\t x = \"\", y = \"\") +\n\ttheme_minimal() +\n\t\ttheme(legend.position = \"bottom\", legend.spacing.x = unit(0, 'cm'),\n\t\t\t\t\tlegend.key.width = unit(1.5, 'cm'), legend.margin=margin(-10, 0, 0, 0),\n\t\t\t\t\tplot.title = element_text(hjust = 0), plot.subtitle = element_markdown(),\n\t\t\t\t\tplot.caption = element_markdown(),\n\t\t\t\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank()) +\n\tguides(fill = guide_legend(label.position = \"bottom\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t title = \"Cohort at Age 22\", title.position = \"top\"))\n```\n\n::: {.cell-output-display}\n![](images/prompt3&4-1.png){width=100%}\n:::\n:::\n\n\nSo alright, a waffle chart. Similar insights from the horizontal bar, just visualized a bit differently.\n\n*created and posted April 23, 2024*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}