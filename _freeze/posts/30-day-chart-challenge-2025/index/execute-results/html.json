{
  "hash": "56a178a5956f28acb1188d6d4b12b9a9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"30 Day Chart Challenge 2025\"\ndescription: \"Let's make some charts!\"\nauthor: \"gregers kjerulf dubrow\"\ndate: '2025-04-05'\ncategories: [post, rstats, ggplot, dataviz, chartchallenge, denmark, education, higher education]\nimage: \"prompts_2025.png\"\ntoc: true\nlightbox: true\neditor: \n  mode: source\n---\n\n\n\n\n\n![](prompts_2025.png){width=\"75%\" fig-align=\"left\" fig-alt=\"image listing the prompts for the 30 day chart challenge 2025.\"}\n\n## The Plan for the 2025 Challenge {#plan}\n\n*Quick note - if you're reading this before April 1 it's because due to something I need to do on April 2 that might keep me away from the computer for a day or two, I'm getting ahead of the challenge by doing some charts in late March. I'll have at least 3 done, if not more. To at least play within the spirit of the challenge I won't post them to social media until April 1 and I'm putting the first publish date on blog posts as April 1.*\n\nIt's time again for the [30 Day Chart Challenge](https://github.com/30DayChartChallenge/Edition2025), a social-media-driven data viz challenge to create and share a data visualization on any topic, but somehow corresponding to the daily prompt as suggested by the organizers.\n\nI did participate last year, though started late and did not get to every prompt. Like last year I am going to keep all the prompt posts in one mega-post, adding to it regularly. Perhaps not each day, but I will try to get to every prompt. Like last year:\n\n-   I will post contributions to social media via my [Bluesky](https://bsky.app/profile/gregerskjerulf.bsky.social), and [LinkedIn](https://www.linkedin.com/in/dubrowg/) accounts.\n-   I will add contributions to this post, meaning the posting date will refresh to the date I've added the chart. So If I get to a lot or even all of them, this will be a long post.\n-   Use the table of contents to the right to navigate to a specific chart.\n-   Images are \"lightboxed\", so click on them to enlarge. Click `esc` or outside the image to restore the page.\n\nOne major change is that this year I am going to only pull data from Danmarks Statistik (Statistics Danmark, the national statistics agency) via the [`danstat`](https://github.com/ValeriVoev/danstat) package for r. To the extent possible I'll be focusing on education data. These constraints will help me by not having to figure out which data source to use each day, plus I'll hopefully be telling a story of the coming weeks.\n\nIt may not be a straight linear narrative and not every post will necessarily connect to the whole. I may not even know exactly what I have until I'm done. I have sketched out ideas for many of the prompts, but things may change as I go along. If the daily prompt just doesn't lend itself to Danish education data, or Danish data at all, the subject for that chart will be something else.\n\nAs with all of my posts, I'm offering a tutorial/how-to as much as I am trying to convey insights from the data. If a topic or approach interests you, hopefully there's enough explanation in the writing or the code so that you can do something similar or use it to hone your r skills.\n\nLet's get to the charts.\n\n## Prompt #1 - Fractions {#prompt1}\n\nThe first week of prompts is devoted to comparisons, and the first day is fractions. I cheated a bit and replicated last year's 1st prompt [\"Part-to-Whole\"](https://www.gregdubrow.io/posts/30-day-chart-challenge-2024/#prompt1). But where last year I looked at educational attainment in the UK, this year it's Denmark.\n\nI won't do too much explaining about education levels in Denmark, you can read up on them on the [ministry's page](https://ufm.dk/en/education/the-danish-education-system).\n\nWe'll do a horizontal stacked bar chart displaying the highest education attained by Danes aged 25-69 as of 2023, with this population divided into four age groups.\n\nTo pull data from `danstat`, which accesses the Danmarks Statistik API, you have to know at least the table name and number. So it's necessary to poke around Danmarks Statistik's [StatBank page](https://www.statbank.dk/statbank5a/default.asp?w=1680) and figure out which table has the data you need. The value added of the API and package is not having to download and keep flat files.\n\nThe `table_meta` command produces a nested tibble with values for each field in the table. To get the data you first create a list of fields and values (see the `varaibles_ed` object) then use the `get_data` command to actually fetch the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(ggtext) # enhancements for text in ggplot\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n\n# metadata for table variables, click thru nested tables to find variables and ids for filters\ntable_meta <- danstat::get_table_metadata(table_id = \"hfudd11\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"bopomr\", values = c(\"000\", \"081\", \"082\", \"083\", \"084\", \"085\")),\n\tlist(code = \"hfudd\", values = c(\"H10\", \"H20\", \"H30\", \"H35\",\n\t\t\t\t\t\t\t\t\t\t\"H40\", \"H50\", \"H60\", \"H70\", \"H80\", \"H90\")),\n\tlist(code = \"køn\", values = c(\"TOT\")),\n\tlist(code = \"alder\", values = c(\"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\",\n\t\t\t\t\t\t\t\t\t\t\t\"50-54\", \"55-59\", \"60-64\", \"65-69\")),\n\tlist(code = \"tid\", values = 2023))\n\n# past variable list along with table name.\n# note that in package, table name is lower case, though upper case on statbank page.\nedattain1 <- get_data(\"hfudd11\", variables_ed, language = \"da\") %>%\n\tas_tibble() %>%\n\tselect(region = BOPOMR, age = ALDER, edlevel = HFUDD, n = INDHOLD)\n\n# arrange data for chart\n# collapse age and education levels into groups\nedattain <- edattain1 %>%\n\tmutate(age_group = case_when(age %in% c(\"25-29 år\", \"30-34 år\", \"35-39 år\") ~ \"25-39\",\n\t\t\t\tage %in% c(\"40-44 år\",\"45-49 år\") ~ \"40-49\",\n\t\t\t\tage %in% c(\"50-54 år\",\"55-59 år\") ~ \"50-59\",\n\t\t\t\tage %in% c(\"60-64 år\",\"65-69 år\") ~ \"60-69\")) %>%\n\tmutate(ed_group = case_when(edlevel == \"H10 Grundskole\" ~ \"Grundskole/Primary\",\n\t\t\t\tedlevel %in% c(\"H20 Gymnasiale uddannelser\",\n\t\t\t\t\"H30 Erhvervsfaglige uddannelser\",\n\t\t\t\t\"H35 Adgangsgivende uddannelsesforløb\") ~ \"Secondary\",\n\t\t\t\tedlevel == \"H40 Korte videregående uddannelser, KVU\" ~ \"Tertiary - 2yr\",\n\t\t\t\tedlevel %in% c(\"H50 Mellemlange videregående uddannelser, MVU\",\n\t\t\t\t\"H60 Bacheloruddannelser, BACH\") ~ \"Tertiary - Bachelor\",\n\t\t\t\tedlevel == \"H70 Lange videregående uddannelser, LVU\" ~ \"Tertiary - Masters\",\n\t\t\t\tedlevel == \"H80 Ph.d. og forskeruddannelser\" ~ \"Tertiary - PhD\",\n\t\t\t\tedlevel == \"H90 Uoplyst mv.\" ~ \"Not stated\")) %>%\n\tgroup_by(region, age_group, ed_group) %>%\n\tmutate(n2 = sum(n)) %>%\n\tungroup() %>%\n\tselect(-n, -age) %>%\n\tdistinct(region, age_group, ed_group, .keep_all = T) %>%\n\trename(n = n2) %>%\n\tmutate(ed_group =\n\t\t\t\tfactor(ed_group,\n\t\t\t\tlevels = c(\"Grundskole/Primary\", \"Secondary\", \"Tertiary - 2yr\",\n\t\t\t\t\"Tertiary - Bachelor\", \"Tertiary - Masters\", \n\t\t\t\t\"Tertiary - PhD\", \"Not stated\")))\n\n```\n:::\n\n\n\nNow that we have a nice tidy tibble, let's make a chart. The approach is fairly straight-forward `ggplot`. I used tricks like `fct_rev` to order the age groups on the chart, and the `scales` and `ggtext` packages to make things look nicer.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the chart\"}\n\n## chart - all DK, horizontal bar age groups, percent stacks percent by deg level\nedattain %>%\n\tfilter(region == \"Hele landet\") %>%\n\tgroup_by(age_group) %>%\n\tmutate(age_total = sum(n)) %>%\n\tmutate(age_pct = round(n/age_total, 2)) %>%\n\tselect(age_group, ed_group, age_pct) %>%\n\t# the line below passes temporary changes to the data object through to the chart commands\n\t{. ->> tmp} %>%\n\tggplot(aes(age_pct, fct_rev(age_group), fill = fct_rev(ed_group))) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_x_continuous(expand = c(0,0),\n\t\t\t\tbreaks = c(0, 0.25, 0.50, 0.75, 1),\n\t\t\t\tlabels = c(\"0\", \"25%\", \"50%\", \"75%\", \"100%\")) +\n\tgeom_text(data = subset(tmp, age_pct >0.025),\n\t\t\t\taes(label = scales::percent(round(age_pct , 2))),\n\t\t\t\tposition = position_stack(vjust = 0.5),\n\t\t\t\tcolor= \"white\", vjust = 0.5, size = 12) +\n\tscale_fill_brewer(palette = \"Set3\") +\n\tlabs(title = \"Danes under 40 have a higher rate of post-Bachelor educational attainment than other age groups\",\n\t\t\t subtitle = \"Highest education level attained by age groups\",\n\t\t\t caption = \"*Data from Danmarks Statistik via danstat package*\",\n\t\t\t x = \"\", y = \"Age Group\") +\n\ttheme_minimal() +\n\ttheme(legend.position = \"bottom\", legend.spacing.x = unit(0, 'cm'),\n\t\t\t\tlegend.key.width = unit(4, 'cm'), legend.margin=margin(-10, 0, 0, 0),\n\t\t\t\tlegend.text = element_text(size = 12), legend.title = element_text(size = 16),\n\t\t\t\tplot.title = element_text(hjust = .5, size = 20),\n\t\t\t\tplot.subtitle = element_text(size = 16),\n\t\t\t\tplot.caption = element_markdown(size = 12, face = \"italic\"),\n\t\t\t\taxis.text.x = element_text(size = 14),\n\t\t\t\taxis.text.y = element_text(size = 14),\n\t\t\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank()) +\n\tguides(fill = guide_legend(label.position = \"bottom\", reverse = TRUE, \n\t\t\t\tdirection = \"horizontal\", nrow = 1, \n\t\t\t\ttitle = \"Highest Educational Attainment\", title.position = \"top\")) \nrm(tmp)\n\n```\n:::\n\n\n\n![](images/prompt1_2025.jpg){fig-alt=\"horizontal bar chart showing educational attainment by age group\"}\n\nAs you might expect, younger Danes tend to have higher levels of educational attainment than Danes over 60. That's not uncommmon in countries with post-secondary education policies designed to increase access and attainment. As in the US this is a post-WWII development, though accelerated in the 1960s and after.\n\nIt's been successful public policy in Denmark for many decades to increase access to schooling beyond the Grundskole (primary years...to about grade 9 in a US context). More than 45% of Danes between 25-40 have at least a Bachelor's degree, and 20% have a Master's. There would of course be more nuance in disaggregated age groups, but I wanted to keep this first story a bit more simple.\n\n*created and posted March 24, 2025*\n\n## Prompt #2 - Slope {#prompt2}\n\nBuilding on what we saw in [Prompt 1](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt1) for educational attainment by age group in 2023, let's use the slope prompt to compare 2023 to 2005, the furthest back we can get educational attainment by age statistics via Danmarks Statistik's StatBank.\n\nThe process for getting data is more or less the same as in Prompt 1, so I won't repeat the code here. The only thing I did differently was collapse the 2-year and Bachelor's degrees into one \"college\" category and collapsed Master's and PhD into one post-bacc group.\n\nFor this chart I want to see if there are differences in highest educational attainment level by age group in two distinct years. Instead of one chart with too many lines, essentially a spaghetti graph, I made four charts and used the [`patchwork`](https://patchwork.data-imaginist.com/) package (created by a [Dane!](https://www.data-imaginist.com/)) to facet out the individual charts into a (hopefully) coherent whole.\n\nKeep in mind that while of course many people will be represented in both 2005 and 2023, this is not a longitudinal study. It's a snapshot of the Danish population by age groups at two distinct points in time.\n\nWe have the data, and it's time to build the charts. But instead of copy-pasting the ggplot code to build each charts, let's create a function and use that four times.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for the chart function\"}\n# plotdf is the placeholder name in the function for the data you pass to run it\nslope_graph <- function(plotdf) {\n\tplotdf %>%\n\tggplot(aes(x = year, y = age_ed_pct, group = age_group, color = age_group)) +\n\t\tgeom_line(size = 1) +\n\t\tgeom_point(size = .2) +\n\t\tscale_x_continuous(\n\t\t\tbreaks = c(2005, 2023),\n\t\t\tlabels = c(\"2005\", \"2023\")) +\n\t\tscale_y_continuous(limits = c(0, .5),\n\t\t\tlabels = scales::label_percent()) +\n\t\tscale_color_brewer(palette = \"Set2\") +\n\t\tlabs(x = \"\", y = \"\") +\n\t\ttheme_minimal() +\n\t\ttheme(legend.position = \"bottom\", legend.spacing.x = unit(0, 'cm'),\n\t\t\tlegend.key.width = unit(3, 'cm'), legend.margin=margin(-10, 0, 0, 0),\n\t\t\tlegend.text = element_text(size = 10), legend.title = element_text(size = 12),\n\t\t\tplot.title = element_text(hjust = .5, size = 16),\n\t\t\tplot.subtitle = element_markdown(size = 14, vjust = -.5),\n\t\t\tplot.caption = element_markdown(size = 12, face = \"italic\"),\n\t\t\taxis.text.x = element_text(size = 11),\n\t\t\taxis.text.y = element_text(size = 11),\n\t\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n\t\t\tstrip.background = element_blank()) +\n\t\tguides(color = guide_legend(label.position = \"bottom\", reverse = FALSE, \n\t\t\tdirection = \"horizontal\", nrow = 1,\n\t\t\ttitle = \"Age Group\", title.position = \"top\"))\n}\n```\n:::\n\n\n\nNow let's put the function to use. We'll create four plots, then stitch them together. Each plot will have its own descriptive title and subtitle, and the final chart will have one as well. Notice that we're using the titles to tell a quick story or share an insight, not to dryly name what the chart is doing. The `ggtext` package gives us markdown enhancements for chart elements like the title and subtitle.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the final chart\"}\n# create individual plots with titles and annotations\nplot_grundsk <-\n\tedattain2 %>%\n\tfilter(ed_group2 == \"Grundskole/Primary\") %>%\n\tslope_graph() +\n\tlabs(title = \"Primary school (thru grade 10)\",\n\t\t\t subtitle = \"*In 2023 Danes of all ages were much less likely to have stopped their education at<br>primary school\n\t\t\t than they were in 2005.<br>*\")\n\nplot_hs <-\n\tedattain2 %>%\n\tfilter(ed_group2 == \"Secondary\") %>%\n\tslope_graph() +\n\tlabs(title = \"Gymnasium & Vocational (High School)\",\n\t\t\t subtitle = \"*From 2005 to 2023, there was a steep decline in the percentage of Danes<br>\n\t\t\t aged 25-49 who were finished with education at the high school level, especially<br>\n\t\t\t Danes under 40. For Danes older than 50 there was a very slight increase.*\")\n\nplot_colldegs <-\n\tedattain2 %>%\n\tfilter(ed_group2 == \"Tertiary - 2yr/Bach\") %>%\n\tslope_graph() +\n\tlabs(title = \"2-year & Bachelor's Degrees\",\n\t\t\t subtitle = \"*For Danes of all age groups, but especially those under 50, there was a<br>\n\t\t\t noticable increase in the percentage earning 2 or 4 year degrees.*\")\n\nplot_masters <-\n\tedattain2 %>%\n\tfilter(ed_group2 == \"Tertiary - Masters+\") %>%\n\tslope_graph() +\n\tlabs(title = \"Master's & PhD Degrees\",\n\t\t\t subtitle = \"*The percentage of Danes earning a Master's or PhD increased across all age groups between 2005 and 2025;<br>\n\t\t\t the increase was strongest among Danes under 50.*\")\n\nplot_grundsk + plot_hs + plot_colldegs + plot_masters +\n\tplot_annotation(\n\t\ttitle = \"Danes of all ages have become more likely to continue their education beyond primary level. Danes under 50 have over time become likely to earn a Master's.\",\n\t\tsubtitle = \"*Highest level of education earned by age groups, in 2005 and 2023.*\",\n\t\tcaption = \"*Data from Danmarks Statistik via danstat package. Groups are not longitudinal - age is for the person in the year of data collection.*\") &\n\ttheme(plot.title = element_text(size = 16), plot.subtitle = element_markdown(),\n\t\tplot.caption = element_markdown(),\n\t\t# plot.background add the grey lines between plots\n\t\tplot.background = element_rect(colour = \"grey\", fill=NA))\n\n```\n:::\n\n\n\n![](images/prompt2_2025.jpg){fig-alt=\"four slope graphs displaying educational attainment by age group\"}\n\nThe story here is hopefully clear. In 2005, more Danes, especially Danes 60+ years of age, had ended their education at primary level. By 2023 many more Danes were likely to have progressed beyond the primary level, and younger Danes especially were finishing Bachelor's degrees and earning Master's degrees.\n\nIt's been government policy to support furthering education levels via free tuition and living stipends. This is made possible by a democratic-socialism approach to the economy, with higher tax rates on some earners than you might see in the US or UK, but for those taxes you received and your kids get at least 4 years of college paid for, and a small living stipend to boot.\n\nIn the US public higher education affordability models vary from state to state. Some states try to keep cost-of-attendance low via more direct state support. But not all students get full rides, even with need-based aid. I am much more a fan of the socialized approach to college affordability. the data shows it works in terms of increasing overall educational attainment.\n\n*created and posted March 24, 2025*\n\n## Prompt #3 - Circular {#prompt3}\n\nWent wild with the circles here, sixty of them altogether. I took inspiration from this [Albert Rapp post](https://albert-rapp.de/posts/ggplot2-tips/14_scaled_heatmaps/14_scaled_heatmaps.html) on using a bubble chart in place of a heat map.\n\nWe are still pulling data from from Danmarks Statistik via the `danstat` package. This time we'll use the \"Labour & income\" domain to look at earnings by employment sector and highest level of education attained, the LONS11 table; løn is the Danish word for wage or salary. Of the twenty-five available earnings indicators, we're using the `MDRSNIT` field, which is standardized monthly earnings. I couldn't easily find the documentation on exactly how it was imputed, but given the analysis is across sectors, I thought it made the most sense. We'll also pull in whether the employee was salaried or hourly *(spoiler alert...it matters)*.\n\nLet's first get and clean the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(ggtext) # enhancements for text in ggplot\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# lons11\ntable_meta <- danstat::get_table_metadata(table_id = \"lons11\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = c(\"H10\", \"H20\", \"H30\", \"H40\", \"H50\", \"H60\", \"H70\", \"H80\")),\n\tlist(code = \"sektor\", values = c(1016, 1020, 1025, 1046)),\n\tlist(code = \"lønmål\", values = \"MDRSNIT\"), # avg monthly\n#\tlist(code = \"køn\", values = c(\"M\", \"K\")),\n  list(code = \"afloen\", values = c(\"TIME\", \"FAST\")),\n\tlist(code = \"tid\", values = 2023))\n\nsal1 <- get_data(\"lons11\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# earnings came in character form, so changing to numeric and rounding up to whole numbers\n# group the ed levels and change the names, and change names on sector. make them factors with orders.\nsal2 <- sal1 %>%\n\tmutate(income = as.numeric(indhold)) %>%\n\tmutate(income = round(income, 2)) %>%\n\tmutate(sector = case_when(\n\t\tsektor == \"Corporations and organizations\" ~ \"Private sector\",\n\t\tsektor == \"Government including social security funds\" ~ \"Gov't - National\",\n\t\tsektor == \"Municipal government\" ~ \"Gov't - Municipal\",\n\t\tsektor == \"Regional government\" ~ \"Gov't - Regional\")) %>%\n\tmutate(sector =\n\t\tfactor(sector,\n\t\tlevels = c(\"Gov't - Municipal\", \"Gov't - Regional\",\n\t\t\"Gov't - National\", \"Private sector\"))) %>%\n\tmutate(ed_level =\n\t\tcase_when(uddannelse == \"H10 Primary education\" ~ \"Primary\",\n\t\tuddannelse == \"H20 Upper secondary education\" ~ \"HS-Academic\",\n\t\tuddannelse == \"H30 Vocational Education and Training (VET)\" ~\n\t\t\"HS-Vocational\",\n\t\tuddannelse == \"H40 Short cycle higher education\" ~\n\t\t\"Short-cycle college\",\n\t\tuddannelse == \"H50 Vocational bachelors educations\" ~\n\t\t\"Bachelor-Vocational\",\n\t\tuddannelse == \"H60 Bachelors programs\" ~ \"Bachelor-Academic\",\n\t\tuddannelse == \"H70 Masters programs\" ~ \"Masters\",\n\t\tuddannelse == \"H80 PhD programs\" ~ \"PhD\")) %>%\n\tmutate(ed_level =\n\t\tfactor(ed_level,\n\t\tlevels = c(\"Primary\", \"HS-Academic\", \"HS-Vocational\",\n\t\t\"Short-cycle college\", \"Bachelor-Vocational\", \n\t\t\"Bachelor-Academic\", \"Masters\", \"PhD\")))\n\n```\n:::\n\n\n\nOk, we have the data, onto making the circles. Again, we're doing a bubble chart that functions as a heat map by pegging the bubble size to the value of the earnings. I also added text labels next to the bubbles.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the chart\"}\nsal2 %>%\n\tggplot(aes(x = sector, y = ed_level)) +\n\tgeom_point(aes(col = income, fill = income, size = income), shape = 21) +\n\ttheme_minimal() +\n\tscale_size_area(max_size = 15) +\n\tlabs(x = \"\", y = \"\",\n\t\t\t title = \"More education = higher monthly earnings across all sectors. Larger effect for salaried vs hourly workers\",\n\t\t\t subtitle = \"Monthly standardized earnings by education level & earner category\",\n\t\t\t caption = \"*Data from Danmarks Statistik via danstat package*\") +\n\tfacet_wrap(~ afloen) +\n\ttheme(legend.position = 'top',\n\t\t\t\tlegend.justification = c(.95,0),\n\t\t\t\tplot.title = element_text(size = 20),\n\t\t\t\tplot.subtitle = element_text(size = 16),\n\t\t\t\tplot.caption = element_markdown(size = 12, face = \"italic\")) +\n\tguides(\n\t\tcol = guide_none(),\n\t\tsize = guide_none(),\n\t\tfill = guide_colorbar(\n\t\t\tbarheight = unit(0.5, 'cm'),\n\t\t\tbarwidth = unit(10, 'cm'),\n\t\t\ttitle.position = 'top',\n\t\t\ttitle = \"Standardized Monthly Earnings (Danish Kroner)\")) +\n\tscale_fill_continuous(limit = c(25000, 80000),\n\t\tbreaks = c(30000, 40000, 50000, 60000, 70000, 80000)) +\n\tgeom_text(data = subset(sal2, !is.na(income)),\n\t\taes(label =\n\t\t\t\t\tpaste0(round(income, 0), \" DKK\")), nudge_x = 0.35, size = 3)\n\n```\n:::\n\n\n\nI see the story here being that education level matters when it comes to how much Danish workers earn in a month. If you work in the private sector, having a Masters 8,000 to 10,000 more DKK per month than Bachelor's degrees. The difference is even greater working for regional government agencies. Also, hourly workers with the same education earn less per month than salaried workers. But without the component parts of the total earnings I can't explain exactly why.\n\nThe bottom line is, as we're seeing so far in the charts, there's both an increase in the number of people earning college and post-bacc degrees, and the payoff seems to be there for the extra year of school it takes for most programs.\n\nBut again, given that education is socialized and subsidized through taxes, the opportunity cost for that extra year is nothing, because the basic higher education coverage is for five years, for tuition and living stipend. And higher wage earners pay more taxes, helping to boost everyone's opportunity to earn the degrees they desire, without being worried about cost.\n\nIt's worth mentioning here, that there's discussion ongoing in the Danish government to squeeze education spending and spots available in the gymnasiums (essentially high school) that feed university programs. I need to read up on that a bit more as I tell this Danish education story while doing the chart challenge.\n\n*Oh, the exchange rate is usually around 6.5 or so DKK to USD. So while it may seem amazing to earn 50000 per month, and while that's not bad in this market, adjust your bearings if you're thinking in USD or EURO.*\n\n![](images/prompt3_2025.jpg){fig-alt=\"bubble chart displaying monthly earnings by educational attainment and employment sector\"}\n\n*created and posted April 2, 2025*\n\n## Prompt #4 - Big or Small {#prompt4}\n\nFor this post I'll stay with a circle theme and make a simple circle packing chart, sort of a heat map or tree map but with circles, the size of the circles corresponding to the variable value. I'm using the code-through from the [R Graph Gallery](https://r-graph-gallery.com/308-interactive-circle-packing.html) to get going, as I've never done this type of chart before. The [`packcircles` package](https://github.com/mbedward/packcircles) does the computational work to create the circle objects.\n\nKeeping with the thematic constraint I've set, I'll once again be using Danish education data from Danmarks Statistik via the `danstat` package.\n\nThis chart will display Bachelor's degrees awarded in 2023, by top-line degree field (Science, Humanities, Education, etc). For instance, Law is a sub-field in Social Sciences, one of many. To make it a bit easier I'll limit this chart to academic Bachelor's, not the vocational degrees. There's definitely a more focused project worth doing that displays the sub-fields within the top-line areas, shown as nested smaller circles within larger circles, or something interactive. for now this will suffice.\n\nTo start, let's get the data. It's from a different table than the last chart, so I'll show the work.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(packcircles) # makes the circles!\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(ggrepel) # helps with label offsets\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# this table is UDDAKT60, set to all lower-case in the table_id call\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt60\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\n# the uddanelse codes are the top-line degree fields.\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = c(\"H6020\", \"H6025\", \"H6030\", \"H6035\",\n\t\t\t\t \"H6039\", \"H6059\", \"H6075\", \"H6080\", \"H6090\")),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"tid\", values = 2023))\n\n# start with a larger dataset in case we want to do more analysis or viz with it\ndegs1 <- get_data(\"uddakt60\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\t# shorten the given degree field names\n\tmutate(deg_field = case_when(UDDANNELSE == \"H6020 Educational, BACH\" ~ \"Educ.\",\n\t\t\tUDDANNELSE == \"H6025 Humanities and theological, BACH\" ~ \"Humanities\",\n\t\t\tUDDANNELSE == \"H6030 Arts, BACH\" ~ \"Arts\",\n\t\t\tUDDANNELSE == \"H6035 Science, BACH\" ~ \"Science\",\n\t\t\tUDDANNELSE == \"H6039 Social Sciences, BACH\" ~ \"Social Science\",\n\t\t\tUDDANNELSE == \"H6059 Technical sciences, BACH\" ~ \"Tech Science\",\n\t\t\tUDDANNELSE == \"H6075 Food, biotechnology and laboratory technology, BACH\" \n\t\t\t\t\t\t~ \"Food/Biotech/LabTech\",\n\t\t\tUDDANNELSE == \"H6080 Agriculture, nature and environment, BACH\"\n\t\t\t\t\t ~ \"Agricultural Science\",\n\t\t\tUDDANNELSE == \"H6090 Health science, BACH\" ~ \"Health Sciences\")) \n\n# keep only what we ween to do the circles\ndegs2 <- degs1 %>%\n\tselect(group = deg_field, value = INDHOLD, text)\n\n# this creates x & y coordinates and circle radius values.\ndegs_packing <- circleProgressiveLayout(degs2$value, sizetype='area')\n# new tibble putting it together\ndegs3 <- cbind(degs2, degs_packing)\n# not sure exactly what this does, but it's an important step\ndegs.gg <- circleLayoutVertices(degs_packing, npoints=50)\n```\n:::\n\n\n\nOk, we now have a nice clean tibble, time for the plot. What took the most time here was working on the labels...getting them to the correct size, adjusting for circle size. You'll notice one label set off to the side thanks to the [`ggrepel` package](https://cran.r-project.org/web/packages/ggrepel/vignettes/ggrepel.html).\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the chart\"}\nggplot() +\n\tgeom_polygon_interactive(\n\t\tdata = degs.gg,\n\t\taes(x, y, group = id, fill=id, tooltip = data$text[id], data_id = id),\n\t\tcolour = \"black\", alpha = 0.6) +\n\tscale_fill_viridis() +\n\tgeom_text(data = degs3 %>% filter(value > 6000),\n\t\t\taes(x, y, label = paste0(group, \"\\n\", format(value, big.mark=\",\"))),\n\t\t\tsize=7, color=\"black\") +\n\tgeom_text(data = degs3 %>% filter(between(value, 2410, 3350)),\n\t\t\taes(x, y, label = paste0(group, \"\\n\", format(value, big.mark=\",\"))),\n\t\t\tsize=7, color=\"black\") +\n\tgeom_text(data = degs3 %>% filter(between(value, 600, 2410)),\n\t\t\taes(x, y, label = paste0(group, \"\\n\", format(value, big.mark=\",\"))),\n\t\t\tsize=6, color=\"black\") +\n\tgeom_text_repel(data = degs3 %>% filter(between(value, 200, 400)),\n\t\t\taes(x, y, label = paste0(group, \"\\n\", format(value, big.mark=\",\"))),\n\t\t\tsize=4, color=\"black\",\n\t\t\tmax.overlaps = Inf, nudge_x = -110, nudge_y = 50,\n\t\t\tsegment.curvature = 0,\n\t\t\tsegment.ncp = 8,\n\t\t\tsegment.angle = 30) +\n\tlabs(x = \"\", y = \"\",\n\t\t\t title = \"Social Sciences were the most popular Bachelor's degrees awarded by Danish universities in 2023\",\n\t\t\t subtitle = \"*Labels not diplayed: Education = 134, Food Science = 61*\",\n\t\t\t caption = \"*Data from Danmarks Statistik via danstat package*\") +\n\ttheme_void() +\n\ttheme(legend.position=\"none\", plot.margin=unit(c(0,0,0,0),\"cm\"),\n\t\t\tplot.title = element_markdown(size = 16),\n\t\t\tplot.subtitle = element_markdown(size = 12),\n\t\t\tplot.caption = element_markdown(size = 8)) +\n\tcoord_equal()\n\n```\n:::\n\n\n\n![](images/prompt4_2025.jpg){fig-alt=\"packed circle graph displaying Bachelors degrees awarded by field\"}\n\nThere you have it, academic Bachelor's degrees awarded by Danish universities in 2023. The Social Sciences category accounts for more than twice as many degrees as the next field. Again, the next interesting step would be to visualize the disaggregation of the main fields, and see what subfields are the most popular. It would also be interesting to track the numbers over time, see which majors rose or fell.\n\n*created and posted April 2, 2025*\n\n## Prompt #5 - Ranking {#prompt5}\n\nFor this prompt I desperately wanted to do something relating to music from the band The English Beat because of Ranking Roger. But I'd already committed to the Danish education bit, and Spotify shut down all the interesting API endpoints and don't seem to be reanimating them any time soon. Something about \"safety\", but it's likely AI crawlers, the same ones increasing hosting costs for Wikipedia and other websites as they steal content for their models. And funny for Spotify to complain about someone else using their work to monetize a product.\n\nBut anyway, let's talk ranks. Specifically let's look at the rankings of Bachelor degrees awarded in Denmark in 2023. I'll focus on the academic (4-year) degrees because I wanted to look at majors within broader disciplines and look at differences by gender.\n\nAgain, data comes from Danmarks Statistik via the `danstat` package.\n\nSo first, let's get the data. It's from the same table used in [prompt 4](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt4) but retreived slightly differently so I'll show it again. This time we're getting all the majors within the broader disciplines so in the list call we use `list(code = \"uddannelse\", values = \"*\")`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(packcircles) # makes the circles!\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(ggrepel) # helps with label offsets\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# this table is UDDAKT60, set to all lower-case in the table_id call\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt60\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable.\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = \"*\"),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"køn\", values = c(\"M\", \"K\")),\n\t#list(code = \"alder\", values = c(\"TOT\")),\n\tlist(code = \"tid\", values = 2023))\n\nbacdegs1 <- get_data(\"uddakt60\", variables_ed, language = \"en\") %>%\n\tas_tibble()\n\nbacdegs <- bacdegs1 %>%\n\t# clean up the degree text and code field\n\tmutate(deg_code = str_extract(UDDANNELSE, \"^[^ ]+\")) %>%\n\tmutate(deg_name = sub(\"^\\\\S+\\\\s+\", '', UDDANNELSE)) %>%\n\tmutate(deg_name = str_remove(deg_name, \", BACH\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \" BACH\")) %>%\n\tmutate(deg_group = case_when(\n\t\tdeg_code %in% c(\"H6020\", \"H6025\", \"H6030\", \"H6035\", \"H6039\",\n\t\t\t\t\t\t\t\t\t\t\"H6059\", \"H6075\", \"H6080\", \"H6090\") ~ \"Main\",\n\t\tdeg_code == \"H60\" ~ \"All\",\n\t\tTRUE ~ \"Sub\")) %>%\n\t# create discipline category for making individual plots.\n\tmutate(deg_field =  case_when(\n\t\tstr_detect(deg_code, \"H6020\") ~ \"Education\",\n\t\tstr_detect(deg_code, \"H6025\") ~ \"Humanities\",\n\t\tstr_detect(deg_code, \"H6030\") ~ \"Arts\",\n\t\tstr_detect(deg_code, \"H6035\") ~ \"Science\",\n\t\tstr_detect(deg_code, \"H6039\") ~ \"Social Sciences\",\n\t\tstr_detect(deg_code, \"H6059\") ~ \"Technical sciences\",\n\t\tstr_detect(deg_code, \"H6075\") ~ \"Technical sciences\",\n\t\tstr_detect(deg_code, \"H6080\") ~ \"Agriculture & Veterinary\",\n\t\tstr_detect(deg_code, \"H6090\") ~ \"Health science\",\n\t\tTRUE ~ \"no\")) %>%\n\trename(degs_n = INDHOLD, sex = KØN)\n\n```\n:::\n\n\n\nNow that we have tidy data, let's make the charts. This time out it's horizontal bar charts, ordered by number of degrees awarded. Note that because I'm faceting by gender, and because I want to show the top majors in descending order for each gender, I use the `scales = \"free_y\"` option in the `facet` function.\n\nA few things before we see the work. First, I had hoped to write a function and output all the by-discipline charts but it was too complicated to get each chart to look exactly as I wanted, and I realized I'd have to do lots of individual formatting anyway. So sadly it's \"copy-paste-amend\" for all the charts. I'll only show the code for the chart showing all degrees and for one of the discipline charts, as the rest of the discipline charts were essentially the same, just minor edits on the `geom_text()` code.\n\nSecond, I had to make a design choice regarding the x axes. I decided to keep them standard to the maximum number of degrees by major within each discipline, so the x axes for men & women is the same. To me, having different x axes maximums in the same chart was distorting the scope of the bars, making different numbers look the same.\n\nThird, I am only displaying degree counts, not percentages. I went back and forth on that as well, and decided to go with the counts and save the percentages for the \"Diverging\" prompt on Day 9.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the charts\"}\n\nbacdegs %>%\n\tfilter(deg_group == \"Main\") %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = degs_n, y = reorder_within(deg_name, degs_n, sex), fill = sex)) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_fill_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n\tscale_y_reordered() +\n\tscale_x_continuous(labels = comma) +\n\tlabs(x = \"\", y = \"\",\n\t\t\t title = \"All Bachelor degrees by field & sex, 2023\",\n\t\t\t subtitle = glue::glue(\"*Total degrees earned = 19,199: Men = 8,694, Women = 10,505*\"),\n\t\t\t caption = \"*Data from Danmarks Statistik via danstat package*\") +\n\tfacet_wrap(~ sex, scales = \"free_y\") +\n\tgeom_text(data = subset(tmp, degs_n > 3000),\n\t\t\t\t\t\taes(label = comma(degs_n)), hjust = 1.5, color = \"white\") +\n\tgeom_text(data = subset(tmp, degs_n < 3000),\n\t\t\t\t\t\taes(label = comma(degs_n)), hjust = -.5, color = \"black\") +\n\ttheme_minimal() +\n\ttheme(panel.grid = element_blank(),\n\t\t\t\tlegend.position = \"none\",\n\t\t\t\tplot.subtitle = element_markdown(),\n\t\t\t\tplot.caption = element_markdown())\n\n\n# agriculture and veterinary sciences\nbacdegs %>%\n\tfilter(deg_group == \"Sub\") %>%\n\tfilter(deg_field == \"Agriculture & Veterinary\") %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = degs_n, y = reorder_within(deg_name, degs_n, sex), fill = sex)) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_fill_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n\tscale_y_reordered() +\n\tscale_x_continuous(labels = comma) +\n\tlabs(x = \"\", y = \"\",\n\t\t\t title = \"Agriculture & Veterinary Science Bachelor degrees by field & sex, 2023\",\n\t\t\t subtitle = glue::glue(\"*Total degrees earned = 308: Men = 55, Women = 253*\")) +\n\tfacet_wrap(~ sex, scales = \"free_y\") +\n\tgeom_text(data = subset(tmp, degs_n > 100),\n\t\t\t\t\t\taes(label = comma(degs_n)), hjust = 1.5, color = \"white\") +\n\tgeom_text(data = subset(tmp, degs_n < 100),\n\t\t\t\t\t\taes(label = degs_n), hjust = -.5, color = \"black\") +\n\ttheme_minimal() +\n\ttheme(panel.grid = element_blank(),\n\t\t\t\tlegend.position = \"none\",\n\t\t\t\tplot.subtitle = element_markdown())\n\n```\n:::\n\n\n\n![](images/prompt5_all_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\nThis first chart shows all degrees awarded by discipline and sex. The most immediate thing to notice is that more Bachelor degrees were awarded to women than to men. But that tracks with a chart I did last year, [showing rates of educational attainment by sex](https://www.gregdubrow.io/posts/30-day-chart-challenge-2024/#prompt5) and it's similar to other countries, including the US.\n\nSocial science degrees were the most popular for both men and women. After that it changes a bit. Humanities were 2nd most popular for women, Technical Sciences next for men. And so forth. To be honest, it's kind of a shock to see degree fields so starkly gendered now. I would have though some disciplines would have been a bit more evenly split. Again, we'll dive deeper into the percentage differences on Day 9 for the \"Diverging\" prompt.\n\nIn the tab set below are the rest of the charts, one for each major discipline. If you're interested you can comb through and see which majors were most popular in each discipline. They are lightboxed, so click on the image to enlarge it, and click `esc` or outside the image to restore it to the page.\n\nThe only ones I did not make were for Education and the Food-Biotech-Lab Tech degrees as each only had one major with degrees awarded. In Education there were 134 degrees awarded, 117 to women, 17 to men. For Food-Bio-Lab Tech there were 61 degrees total, 20 to Men, 41 to Women all in a general Food & Nutrition Science major.\n\nThis makes me think I could have done this in Tableau and let the user filter by discipline. Or I could have done parameterized charts in Quarto. Either way I could have added other degree levels. Lots of data prep, but it would be a useful chart. Maybe after the 30 Day Challenge is over.\n\n::: {.panel-tabset group=\"disciplne\"}\n# Agriculture, Nature, & Environment\n\n![](images/prompt5_ag_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Arts\n\n![](images/prompt5_art_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Health Sciences\n\n![](images/prompt5_health_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Humanities\n\n![](images/prompt5_hum_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Science\n\n![](images/prompt5_sci_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Social Science\n\n![](images/prompt5_soc_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Technical Science\n\n![](images/prompt5_tech_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n:::\n\n*created and posted April 4, 2025*\n\n## Prompt #6 - Florence Nightingale {#prompt6}\n\nThe obvious association with Florence Nightingale is that of nursing, so today let's look at health-care degrees, and who gets them. I'm especially interested in degrees for a job called in shorthand here SOSU, or *\"social- og sundhedsassistent\"*. Essentially a nurses aid/nursing assistant. When I was in the hospital after my bicycle accident in 2024 I noticed almost all SOSUs were women and many first or second-generation immigrants.\n\nWhich makes sense when you think of recent immigrants to any country and the types of jobs the first wave immigrants, mainly those who don't come in with college degrees or professional credentials, tend to get...merchants, housekeeping, health care assistants. They establish a stable life and their kids tend to get more education and higher paying jobs. It's the immigration story told often over the decades and in many countries.\n\nI feel like I need to make clear here that this is not intended to \"other\" immigrants to Denmark. I want to help explain SOSU degrees in the conext of their paths to economic and social stability through education and decently paying stable jobs.\n\nYou can read more about the path to a SOSU degree and job [in this explainer](https://static.uvm.dk/publikationer/2008/facts/kap01.html) and more about vocational secondary education in particular on [pages 10-11 here in this PDF report](https://ufm.dk/en/publications/2022/files/the-danish-education-system.pdf).\n\nAgain, data comes from Danmarks Statistik via the `danstat` package. This time we'll look at table UDDAKT35, which has degrees completed and includes immigration category.\n\nFirst we'll get the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\n# Nursing and SOSU degrees by gender and immigrant status\n\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(scales)\nlibrary(tidytext)\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# UDDAKT35 - get english and danish versions of metadata to make sure we get the right degree codes.\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt35\", variables_only = TRUE)\ntable_meta_dk <- danstat::get_table_metadata(table_id = \"uddakt35\", variables_only = TRUE, language = \"da\")\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = c(\"H30\", \"H3010\", \"H301020\")),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"køn\", values = \"*\"),\n\tlist(code = \"herkomst\", values = \"*\"),\n\tlist(code = \"tid\", values = c(2019, 2020, 2021, 2022, 2023, 2024)))\n\n# fetch the data using the variable list\nsosu1 <- get_data(\"uddakt35\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# set up the main dataset...create a main degree field, clean up the national origin field\nsosu_all <- sosu1 %>%\n\trename(sex = kon, national_origin = herkomst, year = tid, n = indhold) %>%\n\tselect(-fstatus) %>%\n\tmutate(deg_code = str_extract(uddannelse, \"^[^ ]+\")) %>%\n\tmutate(deg_name = case_when(\n\t\tdeg_code == \"H30\" ~ \"VET All\",\n\t\tdeg_code == \"H3010\" ~ \"Health care/Educ All\",\n\t\tdeg_code == \"H301020\" ~ \"SOSU\")) %>%\n\tmutate(national_origin = ifelse(\n\t\tnational_origin == \"Persons of Danish origin\", \"Danish origin\", national_origin)) %>%\n\tmutate(national_origin =\n\t\tfactor(national_origin,\n\t\tlevels = c(\"Total\", \"Danish origin\", \"Descendant\",\n\t\t\"Immigrants\", \"Unknown origin\"))) %>%\n\tmutate(sex = ifelse(sex == \"Sex, total\", \"Total\", sex))\n\n```\n:::\n\n\n\nWe have the base frame now from which to make a few charts. All of them will cover the years 2019 to 2024. The chart code isn't all that complicated so I won't include them in this post. If you're interested you can find them in the [github repo for this year's challenge](https://github.com/greg-dubrow/30DayChartChallenge/blob/main/2025/06_florence_n.R).\n\nWe'll first look at total SOSU degrees, then SOSU as a percent of all the vocational degrees in it's main group. We'll also look at sex and national origin.\n\n![](images/prompt6_sosu_all_2025.jpg){fig-alt=\"bar graph displaying SOSU degrees awarded 2019 to 2024\"}\n\nThe key insight that jumps out here is the more than 200% increase in SOSU degrees awarded during this period. The one thing I'm not sure of here if that has to do with any policy change or something else that helped the numbers increase so much over the last five years.\n\nHow about SOSU degrees about relative to all H30 vocational programs?\n\n![](images/prompt6_sosu_pct_vet_2025.jpg){fig-alt=\"bar graph displaying SOSU degrees awarded 2019 to 2024 as a pct of all vocational degrees\"}\n\nSOSU degrees were 2% of the H30 vocational category in 2019 and 4% in 2024. The H30 group grew by almost 1,900 (6%) during that period, meaning SOSU degrees were responsible for more than the growth of all degrees in this group.\n\nSo who gets SOSU degrees in terms of gender and national origin status? Unsurprisingly, given the very gendered nature of nursing health care assistant jobs, about 90% of SOSU degrees go to women.\n\n![](images/prompt6_sosu_sex_2025.jpg){fig-alt=\"bar graph displaying SOSU degrees awarded 2019 to 2024\"}\n\nWhat about national origin? First it helps to explain how that's [defined in Denmark for these statistics](https://www.dst.dk/da/Statistik/dokumentation/Times/moduldata-for-befolkning-og-valg/ie-type) (page is in Danish). Someone of *Danish origin* has at least 1 parent born in and a citizen of Denmark, regardless of where the person was born. A *Descendant* is considered someone to born in Denmark but neither parent is a citizen or born in Denmark. However if at least one of a Descendant's parents acquire Danish citizenship, then that person is now of Danish origin. Finally, an *Immingrant* is considered as someone born abroad and neither parent is a citizen of or born in Denmark. Immigrants can of course gain citizenship, but I'm not sure if they then become considered of Danish origin for these statistics.\n\n![](images/prompt6_sosu_nat_org_2025.jpg){fig-alt=\"bar graph displaying SOSU degrees awarded 2019 to 2024\"}\n\nFor the past few years, immigrants have comprised about 30% or so of all who earned a SOSU degree.\n\nSo how do these gender and national origin percentages compare to all H30 vocational programs?\n\n![](images/prompt6_allvet_sex_2025.jpg){fig-alt=\"bar graph displaying H30 degrees awarded 2019 to 2024\"}\n\nWell, the H30 degrees are not only much more balanced, a slight majority are awarded to men.\n\nAs for national origin...\n\n![](images/prompt6_allvet_natorg_2025.jpg){fig-alt=\"bar graph displaying H30 degrees awarded 2019 to 2024\"}\n\n<p>\n\n...immigrants are growing as a percent of all who earn H30 vocational degrees, at 14% in 2024 up from 8% in 2019. but that's less than half the 34% percent of SOSU degrees awarded to immigrants.\n\nSo to sum up, its as expected; a vast majority of SOSU degrees go to women, and the percentage of SOSU degrees going to immigrants has been rising.\n\nThere's plenty more to examine here, for instance:\n\n-   How do SOSU degree demographics compare to nursing degrees and other medical fields?\n-   What's the demographic picture in other vocational fields? Or in academic secondary, or academic higher education?\n\n*created and posted April 5, 2025*\n\n## Prompts #7 & 8 - Outliers & Histogram {#prompts7and8}\n\nTaking another look at vocational degrees, it turned out to be best to combine these prompts into one post. So we'll use the same table UDDAKT35, from Danmarks Statistik via the `danstat` package.\n\nThis time we'll look at all degrees awarded and see the overall distribution (histogram), and degrees which had the most and fewest awarded (outliers). So reversing the prompts I guess, but keeping with the spirit of the challenge.\n\nAs always, we'll fetch and clean the data first. Some slight changes to the previous prompt where we used this table. This time we'll get all degree programs and just for 2024. We won't worry about demographics this time.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(scales)\nlibrary(tidytext)\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# UDDAKT35 - get english and danish versions of metadata to make sure we get the right degree codes.\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt35\", variables_only = TRUE)\ntable_meta_dk <- danstat::get_table_metadata(table_id = \"uddakt35\", variables_only = TRUE, language = \"da\")\n\n# create variable list using the ID value in the variable\n# getting all education programs, pare down\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = \"*\"),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"tid\", values = 2024))\n\n# fetch all the data\nvet1 <- get_data(\"uddakt35\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# clean up a bit, create category fields to help with charts\nvet_all <- vet1 %>%\n\tmutate(deg_code = str_extract(uddannelse, \"^[^ ]+\")) %>%\n\tfilter(!grepl(\"H29\", deg_code)) %>%\n\tfilter(!grepl(\"Total\", deg_code)) %>%\n\tmutate(deg_level = if_else(str_length(deg_code) == 5, \"Main\", \"Sub\")) %>%\n\tmutate(deg_level = if_else(deg_code == \"H30\", \"All\", deg_level)) %>%\n\tmutate(deg_name = sub(\"^\\\\S+\\\\s+\", '', uddannelse)) \n\n# create outlier categories. only majors with +0 degrees\nvet_majors <- vet_all %>%\n\tfilter(deg_level == \"Sub\") %>%\n\tfilter(indhold > 0) %>%\n\tmutate(degs_mean = mean(indhold),\n\t\t\t\t degs_std = sd(indhold),\n\t\t\t\t degs_pctl10 = quantile(indhold, 0.10),\n\t\t\t\t degs_pctl90 = quantile(indhold, 0.90)) %>%\n\tmutate(outlier = case_when(\n\t\tindhold >= degs_pctl90 ~ \"outlier+ > 90thpctl\",\n\t\tindhold <= degs_pctl10 ~ \"outlier- < 10thpctl\",\n\t\tTRUE ~ \"not outlier\")) %>%\n\tmutate(outlier = factor(outlier,\n\t\tlevels = c(\"outlier+ > 90thpctl\", \"not outlier\", \"outlier- < 10thpctl\")))\n\n```\n:::\n\n\n\nThe `vet_majors` dataframe created at the end is what we'll use for outlier analysis -- it keeps only the majors (not the top-line category) and only for degrees awarded greater-than 0. As we'll see in the histogram, the distributions were so skewed I set outlier status at equal-or-above the 90th percentile and equal-or-below the 10th percentiles.\n\nOk, let's build the histogram. I added vertical lines at the median and mean to highlight the skew.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the histogram\"}\nvet_majors %>%\n\tggplot(aes(indhold)) +\n\tgeom_histogram(fill = \"#CC79A7\", bins = 100) +\n\tgeom_vline(aes(xintercept = mean(indhold)), color=\"black\") +\n\tgeom_vline(aes(xintercept = median(indhold)), color=\"#A9A9A9\") +\n\tlabs(x = \"\", y = \"\",\n\t\t\ttitle = \"Eight programs with +1,000 degrees awarded accounted for 43% of the H30 Vocational degrees awarded in 2024\",\n\t\tsubtitle = \"*Total H30 degrees awarded in 2024 = 30,570*\",\n\t\tcaption = \"*Data from Danmarks Statistik table UDDAKT35 via danstat package*\") +\n\tscale_y_continuous(expand = c(.001, 0), limits = c(0, 20),\n\t\t\tbreaks = c(0, 1, 3, 6, 9, 12, 15, 18, 20)) +\n\tscale_x_continuous(breaks = c(0, 500, 1000, 2000, 3000, 4000, 5000, 6000),\n\t\tlabels = comma) +\n\ttheme_minimal() +\n\ttheme(plot.title = element_markdown(size = 16, hjust = 0),\n\t\tplot.subtitle = element_markdown(size = 14, hjust = 0),\n\t\tplot.caption = element_markdown(),\n\t\tlegend.title = element_blank(),\n\t\tlegend.position = c(.98, .05),\n\t\tlegend.justification = c(\"right\", \"bottom\"),\n\t\tlegend.direction = \"horizontal\",\n\t\tlegend.box.just = \"right\",\n\t\tlegend.margin = margin(6, 6, 6, 6),\n\t\tpanel.grid = element_blank(),\n\t\tpanel.border = element_blank())\n\n```\n:::\n\n\n\n![](images/prompt7&8_hist_2025.jpg){fig-alt=\"histogram displaying H30 degrees awarded 2024\"}\n\nMost of the fields awarded fewer than 500 degrees. Only 8 awarded more than 1,000. So a heavy left skew to the distribution.\n\nSo which fields had the most and least relative to the others? The code is below, we'll talk about the chart below the image. I used the white-space resulting from the array of data as space for the legend and explanatory notes. For those annotations I created a couple of text vectors to plug in, one with coloring to use as `richtext` in the `annotate` call.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the outlier chart\"}\n# horizontal bar with fills based on outlier status, bars for mean and median\n# for annotation,\ncaption1 <- paste(strwrap(\"Health, education, business (office, retail, trading (mercantile)), and\n\t\tcraft trades (electrician, carpentry, mechanic) are by far the most popular vocational degree choices.\", 75), collapse = \"\\n\")\n\ncaption2 <- glue::glue(\n\t\"<span style = 'color:#A9A9A9;'>Median = 97   </span><span style = 'color:#000000;'>\n\tMean = 392</span>\"\n)\n\nvet_majors %>%\n\tggplot(aes(x = indhold, y = reorder(deg_name, indhold), fill = outlier)) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_fill_manual(values = c(\"#0072B2\", \"#CC79A7\", \"#D55E00\")) +\n\tgeom_vline(aes(xintercept = mean(indhold)), color=\"black\") +\n\tgeom_vline(aes(xintercept = median(indhold)), color=\"#A9A9A9\") +\n\tscale_x_continuous(limits = ~ c(0, max(.x) + 0.1), breaks = pretty_breaks(),\n\t\texpand = c(0, 0), labels = comma) +\n\tlabs(x = \"\", y = \"\",\n\t\ttitle = \"Total H30 degrees awarded in 2024 = 30,570\",\n\t\tcaption = \"*Data from Danmarks Statistik table UDDAKT35 via danstat package*\") +\n\tannotate(\"text\", x = 2000, y = \"Storage, port and terminal education\",\n\t\tlabel = caption1, size = 5, hjust = 0) +\n\tannotate(\"richtext\", x = 4700, y = \"Train preparation educations\",\n\t\tlabel = caption2,\n\t\tsize = 4.5, label.color = NA) +\n\ttheme_minimal() +\n\ttheme(plot.title = element_markdown(size = 16),\n\t\tplot.caption = element_markdown(),\n\t\taxis.text.y = element_text(size = 7),\n\t\tlegend.title = element_blank(),\n\t\tlegend.position = c(.98, .05),\n\t\tlegend.justification = c(\"right\", \"bottom\"),\n\t\tlegend.direction = \"horizontal\",\n\t\tlegend.box.just = \"right\",\n\t\tlegend.margin = margin(6, 6, 6, 6),\n\t\tpanel.grid = element_blank(),\n\t\tpanel.border = element_blank())\n\n```\n:::\n\n\n\n![](images/prompt7&8_outl_2025.jpg){fig-alt=\"horizontal bar displaying H30 degrees awarded by field 2024\"}\n\nWhat we see is there are outliers, if we define an outlier as outside the 10th or 90th percentiles. We knew from [prompt 6](https://www.gregdubrow.io/posts/30-day-chart-challenge-2024/#prompt6) that SOSU degrees (social health and education) would account for the greatest proportion of vocational degrees, so no surprise that's tops. We also see business & commerce related fields as well as craft & trades also being very popular. Glazier and fitness instructor are among the low outliers, below the 10th percentile in the distribution.\n\nA quick note on what might look like odd degree names. Obviously the original names were in Danish. But the translation to English isn't always perfect. So for example, *gartneruddannelsen* translates to \"Gartner Education\" but what it should be is \"Gardening\", or training to be a florist or work in landscaping. \"Trading Education\" comes from *handelsuddannelsen* which is essentially training to be a merchant - sourcing, logistics, etc.\n\n*created and posted April 5, 2025*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}