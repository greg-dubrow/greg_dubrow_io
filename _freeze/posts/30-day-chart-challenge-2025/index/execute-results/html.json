{
  "hash": "3be41331ad468ebc57e6b88c1c9b16a1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"30 Day Chart Challenge 2025\"\ndescription: \"Let's make some charts!\"\nauthor: \"gregers kjerulf dubrow\"\ndate: '2025-04-25'\ncategories: [post, rstats, ggplot, dataviz, chartchallenge, denmark, education, higher education]\nimage: \"prompts_2025.png\"\ntoc: true\nlightbox: true\neditor: \n  mode: source\n---\n\n\n\n\n\n![](prompts_2025.png){width=\"75%\" fig-align=\"left\" fig-alt=\"image listing the prompts for the 30 day chart challenge 2025.\"}\n\n## The Plan for the 2025 Challenge {#plan}\n\nIt's time again for the [30 Day Chart Challenge](https://github.com/30DayChartChallenge/Edition2025), a social-media-driven data viz challenge to create and share a data visualization on any topic, but somehow corresponding to the daily prompt as suggested by the organizers.\n\nI did participate last year, though started late and did not get to every prompt. Like last year I am going to keep all the prompt posts in one mega-post, adding to it regularly. Perhaps not each day, but I will try to get to every prompt. Like last year:\n\n-   I will post contributions to social media via my [Bluesky](https://bsky.app/profile/gregerskjerulf.bsky.social), and [LinkedIn](https://www.linkedin.com/in/dubrowg/) accounts.\n-   I will add contributions to this post, meaning the posting date will refresh to the date I've added the chart. So If I get to a lot or even all of them, this will be a long post.\n-   Use the table of contents to the right to navigate to a specific chart.\n-   Images are \"lightboxed\", so click on them to enlarge. Click `esc` or outside the image to restore the page.\n\nOne major change is that this year I am going to only pull data from Danmarks Statistik (Statistics Danmark, the national statistics agency) via the [`danstat`](https://github.com/ValeriVoev/danstat) package for r. To the extent possible I'll be focusing on education data. These constraints will help me by not having to figure out which data source to use each day.\n\nIt may not be a straight linear narrative and not every post will necessarily connect to the whole. I may not even know exactly what I have until I'm done. I have sketched out ideas for many of the prompts, but things may change as I go along. If the daily prompt just doesn't lend itself to Danish education data, or Danish data at all, the subject for that chart will be something else.\n\nAs with all of my posts, I'm offering a tutorial/how-to as much as I am trying to convey insights from the data. If a topic or approach interests you, hopefully there's enough explanation in the writing or the code so that you can do something similar or use it to hone your r skills.\n\nLet's get to the charts.\n\n## Prompt #1 - Fractions {#prompt1}\n\nThe first week of prompts is devoted to comparisons, and the first day is fractions. I cheated a bit and replicated last year's 1st prompt [\"Part-to-Whole\"](https://www.gregdubrow.io/posts/30-day-chart-challenge-2024/#prompt1). But where last year I looked at educational attainment in the UK, this year it's Denmark.\n\nI won't do too much explaining about education levels in Denmark, you can read up on them on the [ministry's page](https://ufm.dk/en/education/the-danish-education-system).\n\nWe'll do a horizontal stacked bar chart displaying the highest education attained by Danes aged 25-69 as of 2023, with this population divided into four age groups.\n\nTo pull data from `danstat`, which accesses the Danmarks Statistik API, you have to know at least the table name and number. So it's necessary to poke around Danmarks Statistik's [StatBank page](https://www.statbank.dk/statbank5a/default.asp?w=1680) and figure out which table has the data you need. The value added of the API and package is not having to download and keep flat files.\n\nThe `table_meta` command produces a nested tibble with values for each field in the table. To get the data you first create a list of fields and values (see the `varaibles_ed` object) then use the `get_data` command to actually fetch the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(ggtext) # enhancements for text in ggplot\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n\n# metadata for table variables, click thru nested tables to find variables and ids for filters\ntable_meta <- danstat::get_table_metadata(table_id = \"hfudd11\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"bopomr\", values = c(\"000\", \"081\", \"082\", \"083\", \"084\", \"085\")),\n\tlist(code = \"hfudd\", values = c(\"H10\", \"H20\", \"H30\", \"H35\",\n\t\t\t\t\t\t\t\t\t\t\"H40\", \"H50\", \"H60\", \"H70\", \"H80\", \"H90\")),\n\tlist(code = \"køn\", values = c(\"TOT\")),\n\tlist(code = \"alder\", values = c(\"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\",\n\t\t\t\t\t\t\t\t\t\t\t\"50-54\", \"55-59\", \"60-64\", \"65-69\")),\n\tlist(code = \"tid\", values = 2023))\n\n# past variable list along with table name.\n# note that in package, table name is lower case, though upper case on statbank page.\nedattain1 <- get_data(\"hfudd11\", variables_ed, language = \"da\") %>%\n\tas_tibble() %>%\n\tselect(region = BOPOMR, age = ALDER, edlevel = HFUDD, n = INDHOLD)\n\n# arrange data for chart\n# collapse age and education levels into groups\nedattain <- edattain1 %>%\n\tmutate(age_group = case_when(age %in% c(\"25-29 år\", \"30-34 år\", \"35-39 år\") ~ \"25-39\",\n\t\t\t\tage %in% c(\"40-44 år\",\"45-49 år\") ~ \"40-49\",\n\t\t\t\tage %in% c(\"50-54 år\",\"55-59 år\") ~ \"50-59\",\n\t\t\t\tage %in% c(\"60-64 år\",\"65-69 år\") ~ \"60-69\")) %>%\n\tmutate(ed_group = case_when(edlevel == \"H10 Grundskole\" ~ \"Grundskole/Primary\",\n\t\t\t\tedlevel %in% c(\"H20 Gymnasiale uddannelser\",\n\t\t\t\t\"H30 Erhvervsfaglige uddannelser\",\n\t\t\t\t\"H35 Adgangsgivende uddannelsesforløb\") ~ \"Secondary\",\n\t\t\t\tedlevel == \"H40 Korte videregående uddannelser, KVU\" ~ \"Tertiary - 2yr\",\n\t\t\t\tedlevel %in% c(\"H50 Mellemlange videregående uddannelser, MVU\",\n\t\t\t\t\"H60 Bacheloruddannelser, BACH\") ~ \"Tertiary - Bachelor\",\n\t\t\t\tedlevel == \"H70 Lange videregående uddannelser, LVU\" ~ \"Tertiary - Masters\",\n\t\t\t\tedlevel == \"H80 Ph.d. og forskeruddannelser\" ~ \"Tertiary - PhD\",\n\t\t\t\tedlevel == \"H90 Uoplyst mv.\" ~ \"Not stated\")) %>%\n\tgroup_by(region, age_group, ed_group) %>%\n\tmutate(n2 = sum(n)) %>%\n\tungroup() %>%\n\tselect(-n, -age) %>%\n\tdistinct(region, age_group, ed_group, .keep_all = T) %>%\n\trename(n = n2) %>%\n\tmutate(ed_group =\n\t\t\t\tfactor(ed_group,\n\t\t\t\tlevels = c(\"Grundskole/Primary\", \"Secondary\", \"Tertiary - 2yr\",\n\t\t\t\t\"Tertiary - Bachelor\", \"Tertiary - Masters\", \n\t\t\t\t\"Tertiary - PhD\", \"Not stated\")))\n\n```\n:::\n\n\n\nNow that we have a nice tidy tibble, let's make a chart. The approach is fairly straight-forward `ggplot`. I used tricks like `fct_rev` to order the age groups on the chart, and the `scales` and `ggtext` packages to make things look nicer.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the chart\"}\n\n## chart - all DK, horizontal bar age groups, percent stacks percent by deg level\nedattain %>%\n\tfilter(region == \"Hele landet\") %>%\n\tgroup_by(age_group) %>%\n\tmutate(age_total = sum(n)) %>%\n\tmutate(age_pct = round(n/age_total, 2)) %>%\n\tselect(age_group, ed_group, age_pct) %>%\n\t# the line below passes temporary changes to the data object through to the chart commands\n\t{. ->> tmp} %>%\n\tggplot(aes(age_pct, fct_rev(age_group), fill = fct_rev(ed_group))) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_x_continuous(expand = c(0,0),\n\t\t\t\tbreaks = c(0, 0.25, 0.50, 0.75, 1),\n\t\t\t\tlabels = c(\"0\", \"25%\", \"50%\", \"75%\", \"100%\")) +\n\tgeom_text(data = subset(tmp, age_pct >0.025),\n\t\t\t\taes(label = scales::percent(round(age_pct , 2))),\n\t\t\t\tposition = position_stack(vjust = 0.5),\n\t\t\t\tcolor= \"white\", vjust = 0.5, size = 12) +\n\tscale_fill_brewer(palette = \"Set3\") +\n\tlabs(title = \"Danes under 40 have a higher rate of post-Bachelor educational attainment than other age groups\",\n\t\t\t subtitle = \"Highest education level attained by age groups\",\n\t\t\t caption = \"*Data from Danmarks Statistik via danstat package*\",\n\t\t\t x = \"\", y = \"Age Group\") +\n\ttheme_minimal() +\n\ttheme(legend.position = \"bottom\", legend.spacing.x = unit(0, 'cm'),\n\t\t\t\tlegend.key.width = unit(4, 'cm'), legend.margin=margin(-10, 0, 0, 0),\n\t\t\t\tlegend.text = element_text(size = 12), legend.title = element_text(size = 16),\n\t\t\t\tplot.title = element_text(hjust = .5, size = 20),\n\t\t\t\tplot.subtitle = element_text(size = 16),\n\t\t\t\tplot.caption = element_markdown(size = 12, face = \"italic\"),\n\t\t\t\taxis.text.x = element_text(size = 14),\n\t\t\t\taxis.text.y = element_text(size = 14),\n\t\t\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank()) +\n\tguides(fill = guide_legend(label.position = \"bottom\", reverse = TRUE, \n\t\t\t\tdirection = \"horizontal\", nrow = 1, \n\t\t\t\ttitle = \"Highest Educational Attainment\", title.position = \"top\")) \nrm(tmp)\n\n```\n:::\n\n\n\n![](images/prompt1_2025.jpg){fig-alt=\"horizontal bar chart showing educational attainment by age group\"}\n\nAs you might expect, younger Danes tend to have higher levels of educational attainment than Danes over 60. That's not uncommmon in countries with post-secondary education policies designed to increase access and attainment. As in the US this is a post-WWII development, though accelerated in the 1960s and after.\n\nIt's been successful public policy in Denmark for many decades to increase access to schooling beyond the Grundskole (primary years...to about grade 9 in a US context). More than 45% of Danes between 25-40 have at least a Bachelor's degree, and 20% have a Master's. There would of course be more nuance in disaggregated age groups, but I wanted to keep this first story a bit more simple.\n\n*created and posted March 24, 2025*\n\n## Prompt #2 - Slope {#prompt2}\n\nBuilding on what we saw in [Prompt 1](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt1) for educational attainment by age group in 2023, let's use the slope prompt to compare 2023 to 2005, the furthest back we can get educational attainment by age statistics via Danmarks Statistik's StatBank.\n\nThe process for getting data is more or less the same as in Prompt 1, so I won't repeat the code here. The only thing I did differently was collapse the 2-year and Bachelor's degrees into one \"college\" category and collapsed Master's and PhD into one post-bacc group.\n\nFor this chart I want to see if there are differences in highest educational attainment level by age group in two distinct years. Instead of one chart with too many lines, essentially a spaghetti graph, I made four charts and used the [`patchwork`](https://patchwork.data-imaginist.com/) package (created by a [Dane!](https://www.data-imaginist.com/)) to facet out the individual charts into a (hopefully) coherent whole.\n\nKeep in mind that while of course many people will be represented in both 2005 and 2023, this is not a longitudinal study. It's a snapshot of the Danish population by age groups at two distinct points in time.\n\nWe have the data, and it's time to build the charts. But instead of copy-pasting the ggplot code to build each charts, let's create a function and use that four times.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for the chart function\"}\n# plotdf is the placeholder name in the function for the data you pass to run it\nslope_graph <- function(plotdf) {\n\tplotdf %>%\n\tggplot(aes(x = year, y = age_ed_pct, group = age_group, color = age_group)) +\n\t\tgeom_line(size = 1) +\n\t\tgeom_point(size = .2) +\n\t\tscale_x_continuous(\n\t\t\tbreaks = c(2005, 2023),\n\t\t\tlabels = c(\"2005\", \"2023\")) +\n\t\tscale_y_continuous(limits = c(0, .5),\n\t\t\tlabels = scales::label_percent()) +\n\t\tscale_color_brewer(palette = \"Set2\") +\n\t\tlabs(x = \"\", y = \"\") +\n\t\ttheme_minimal() +\n\t\ttheme(legend.position = \"bottom\", legend.spacing.x = unit(0, 'cm'),\n\t\t\tlegend.key.width = unit(3, 'cm'), legend.margin=margin(-10, 0, 0, 0),\n\t\t\tlegend.text = element_text(size = 10), legend.title = element_text(size = 12),\n\t\t\tplot.title = element_text(hjust = .5, size = 16),\n\t\t\tplot.subtitle = element_markdown(size = 14, vjust = -.5),\n\t\t\tplot.caption = element_markdown(size = 12, face = \"italic\"),\n\t\t\taxis.text.x = element_text(size = 11),\n\t\t\taxis.text.y = element_text(size = 11),\n\t\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n\t\t\tstrip.background = element_blank()) +\n\t\tguides(color = guide_legend(label.position = \"bottom\", reverse = FALSE, \n\t\t\tdirection = \"horizontal\", nrow = 1,\n\t\t\ttitle = \"Age Group\", title.position = \"top\"))\n}\n```\n:::\n\n\n\nNow let's put the function to use. We'll create four plots, then stitch them together. Each plot will have its own descriptive title and subtitle, and the final chart will have one as well. Notice that we're using the titles to tell a quick story or share an insight, not to dryly name what the chart is doing. The `ggtext` package gives us markdown enhancements for chart elements like the title and subtitle.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the final chart\"}\n# create individual plots with titles and annotations\nplot_grundsk <-\n\tedattain2 %>%\n\tfilter(ed_group2 == \"Grundskole/Primary\") %>%\n\tslope_graph() +\n\tlabs(title = \"Primary school (thru grade 10)\",\n\t\t\t subtitle = \"*In 2023 Danes of all ages were much less likely to have stopped their education at<br>primary school\n\t\t\t than they were in 2005.<br>*\")\n\nplot_hs <-\n\tedattain2 %>%\n\tfilter(ed_group2 == \"Secondary\") %>%\n\tslope_graph() +\n\tlabs(title = \"Gymnasium & Vocational (High School)\",\n\t\t\t subtitle = \"*From 2005 to 2023, there was a steep decline in the percentage of Danes<br>\n\t\t\t aged 25-49 who were finished with education at the high school level, especially<br>\n\t\t\t Danes under 40. For Danes older than 50 there was a very slight increase.*\")\n\nplot_colldegs <-\n\tedattain2 %>%\n\tfilter(ed_group2 == \"Tertiary - 2yr/Bach\") %>%\n\tslope_graph() +\n\tlabs(title = \"2-year & Bachelor's Degrees\",\n\t\t\t subtitle = \"*For Danes of all age groups, but especially those under 50, there was a<br>\n\t\t\t noticable increase in the percentage earning 2 or 4 year degrees.*\")\n\nplot_masters <-\n\tedattain2 %>%\n\tfilter(ed_group2 == \"Tertiary - Masters+\") %>%\n\tslope_graph() +\n\tlabs(title = \"Master's & PhD Degrees\",\n\t\t\t subtitle = \"*The percentage of Danes earning a Master's or PhD increased across all age groups between 2005 and 2025;<br>\n\t\t\t the increase was strongest among Danes under 50.*\")\n\nplot_grundsk + plot_hs + plot_colldegs + plot_masters +\n\tplot_annotation(\n\t\ttitle = \"Danes of all ages have become more likely to continue their education beyond primary level. Danes under 50 have over time become likely to earn a Master's.\",\n\t\tsubtitle = \"*Highest level of education earned by age groups, in 2005 and 2023.*\",\n\t\tcaption = \"*Data from Danmarks Statistik via danstat package. Groups are not longitudinal - age is for the person in the year of data collection.*\") &\n\ttheme(plot.title = element_text(size = 16), plot.subtitle = element_markdown(),\n\t\tplot.caption = element_markdown(),\n\t\t# plot.background add the grey lines between plots\n\t\tplot.background = element_rect(colour = \"grey\", fill=NA))\n\n```\n:::\n\n\n\n![](images/prompt2_2025.jpg){fig-alt=\"four slope graphs displaying educational attainment by age group\"}\n\nThe story here is hopefully clear. In 2005, more Danes, especially Danes 60+ years of age, had ended their education at primary level. By 2023 many more Danes were likely to have progressed beyond the primary level, and younger Danes especially were finishing Bachelor's degrees and earning Master's degrees.\n\nIt's been government policy to support furthering education levels via free tuition and living stipends. This is made possible by a democratic-socialism approach to the economy, with higher tax rates on some earners than you might see in the US or UK, but for those taxes you received and your kids get at least 4 years of college paid for, and a small living stipend to boot.\n\nIn the US public higher education affordability models vary from state to state. Some states try to keep cost-of-attendance low via more direct state support. But not all students get full rides, even with need-based aid. I am much more a fan of the socialized approach to college affordability. the data shows it works in terms of increasing overall educational attainment.\n\n*created and posted March 24, 2025*\n\n## Prompt #3 - Circular {#prompt3}\n\nWent wild with the circles here, sixty of them altogether. I took inspiration from this [Albert Rapp post](https://albert-rapp.de/posts/ggplot2-tips/14_scaled_heatmaps/14_scaled_heatmaps.html) on using a bubble chart in place of a heat map.\n\nWe are still pulling data from from Danmarks Statistik via the `danstat` package. This time we'll use the \"Labour & income\" domain to look at earnings by employment sector and highest level of education attained, the LONS11 table; løn is the Danish word for wage or salary. Of the twenty-five available earnings indicators, we're using the `MDRSNIT` field, which is standardized monthly earnings. I couldn't easily find the documentation on exactly how it was imputed, but given the analysis is across sectors, I thought it made the most sense. We'll also pull in whether the employee was salaried or hourly *(spoiler alert...it matters)*.\n\nLet's first get and clean the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(ggtext) # enhancements for text in ggplot\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# lons11\ntable_meta <- danstat::get_table_metadata(table_id = \"lons11\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = c(\"H10\", \"H20\", \"H30\", \"H40\", \"H50\", \"H60\", \"H70\", \"H80\")),\n\tlist(code = \"sektor\", values = c(1016, 1020, 1025, 1046)),\n\tlist(code = \"lønmål\", values = \"MDRSNIT\"), # avg monthly\n#\tlist(code = \"køn\", values = c(\"M\", \"K\")),\n  list(code = \"afloen\", values = c(\"TIME\", \"FAST\")),\n\tlist(code = \"tid\", values = 2023))\n\nsal1 <- get_data(\"lons11\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# earnings came in character form, so changing to numeric and rounding up to whole numbers\n# group the ed levels and change the names, and change names on sector. make them factors with orders.\nsal2 <- sal1 %>%\n\tmutate(income = as.numeric(indhold)) %>%\n\tmutate(income = round(income, 2)) %>%\n\tmutate(sector = case_when(\n\t\tsektor == \"Corporations and organizations\" ~ \"Private sector\",\n\t\tsektor == \"Government including social security funds\" ~ \"Gov't - National\",\n\t\tsektor == \"Municipal government\" ~ \"Gov't - Municipal\",\n\t\tsektor == \"Regional government\" ~ \"Gov't - Regional\")) %>%\n\tmutate(sector =\n\t\tfactor(sector,\n\t\tlevels = c(\"Gov't - Municipal\", \"Gov't - Regional\",\n\t\t\"Gov't - National\", \"Private sector\"))) %>%\n\tmutate(ed_level =\n\t\tcase_when(uddannelse == \"H10 Primary education\" ~ \"Primary\",\n\t\tuddannelse == \"H20 Upper secondary education\" ~ \"HS-Academic\",\n\t\tuddannelse == \"H30 Vocational Education and Training (VET)\" ~\n\t\t\"HS-Vocational\",\n\t\tuddannelse == \"H40 Short cycle higher education\" ~\n\t\t\"Short-cycle college\",\n\t\tuddannelse == \"H50 Vocational bachelors educations\" ~\n\t\t\"Bachelor-Vocational\",\n\t\tuddannelse == \"H60 Bachelors programs\" ~ \"Bachelor-Academic\",\n\t\tuddannelse == \"H70 Masters programs\" ~ \"Masters\",\n\t\tuddannelse == \"H80 PhD programs\" ~ \"PhD\")) %>%\n\tmutate(ed_level =\n\t\tfactor(ed_level,\n\t\tlevels = c(\"Primary\", \"HS-Academic\", \"HS-Vocational\",\n\t\t\"Short-cycle college\", \"Bachelor-Vocational\", \n\t\t\"Bachelor-Academic\", \"Masters\", \"PhD\")))\n\n```\n:::\n\n\n\nOk, we have the data, onto making the circles. Again, we're doing a bubble chart that functions as a heat map by pegging the bubble size to the value of the earnings. I also added text labels next to the bubbles.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the chart\"}\nsal2 %>%\n\tggplot(aes(x = sector, y = ed_level)) +\n\tgeom_point(aes(col = income, fill = income, size = income), shape = 21) +\n\ttheme_minimal() +\n\tscale_size_area(max_size = 15) +\n\tlabs(x = \"\", y = \"\",\n\t\t\t title = \"More education = higher monthly earnings across all sectors. Larger effect for salaried vs hourly workers\",\n\t\t\t subtitle = \"Monthly standardized earnings by education level & earner category\",\n\t\t\t caption = \"*Data from Danmarks Statistik via danstat package*\") +\n\tfacet_wrap(~ afloen) +\n\ttheme(legend.position = 'top',\n\t\t\t\tlegend.justification = c(.95,0),\n\t\t\t\tplot.title = element_text(size = 20),\n\t\t\t\tplot.subtitle = element_text(size = 16),\n\t\t\t\tplot.caption = element_markdown(size = 12, face = \"italic\")) +\n\tguides(\n\t\tcol = guide_none(),\n\t\tsize = guide_none(),\n\t\tfill = guide_colorbar(\n\t\t\tbarheight = unit(0.5, 'cm'),\n\t\t\tbarwidth = unit(10, 'cm'),\n\t\t\ttitle.position = 'top',\n\t\t\ttitle = \"Standardized Monthly Earnings (Danish Kroner)\")) +\n\tscale_fill_continuous(limit = c(25000, 80000),\n\t\tbreaks = c(30000, 40000, 50000, 60000, 70000, 80000)) +\n\tgeom_text(data = subset(sal2, !is.na(income)),\n\t\taes(label =\n\t\t\t\t\tpaste0(round(income, 0), \" DKK\")), nudge_x = 0.35, size = 3)\n\n```\n:::\n\n\n\nI see the story here being that education level matters when it comes to how much Danish workers earn in a month. If you work in the private sector, having a Masters 8,000 to 10,000 more DKK per month than Bachelor's degrees. The difference is even greater working for regional government agencies. Also, hourly workers with the same education earn less per month than salaried workers. But without the component parts of the total earnings I can't explain exactly why.\n\nThe bottom line is, as we're seeing so far in the charts, there's both an increase in the number of people earning college and post-bacc degrees, and the payoff seems to be there for the extra year of school it takes for most programs.\n\nBut again, given that education is socialized and subsidized through taxes, the opportunity cost for that extra year is nothing, because the basic higher education coverage is for five years, for tuition and living stipend. And higher wage earners pay more taxes, helping to boost everyone's opportunity to earn the degrees they desire, without being worried about cost.\n\nIt's worth mentioning here, that there's discussion ongoing in the Danish government to squeeze education spending and spots available in the gymnasiums (essentially high school) that feed university programs. I need to read up on that a bit more as I tell this Danish education story while doing the chart challenge.\n\n*Oh, the exchange rate is usually around 6.5 or so DKK to USD. So while it may seem amazing to earn 50000 per month, and while that's not bad in this market, adjust your bearings if you're thinking in USD or EURO.*\n\n![](images/prompt3_2025.jpg){fig-alt=\"bubble chart displaying monthly earnings by educational attainment and employment sector\"}\n\n*created and posted April 2, 2025*\n\n## Prompt #4 - Big or Small {#prompt4}\n\nFor this post I'll stay with a circle theme and make a simple circle packing chart, sort of a heat map or tree map but with circles, the size of the circles corresponding to the variable value. I'm using the code-through from the [R Graph Gallery](https://r-graph-gallery.com/308-interactive-circle-packing.html) to get going, as I've never done this type of chart before. The [`packcircles` package](https://github.com/mbedward/packcircles) does the computational work to create the circle objects.\n\nKeeping with the thematic constraint I've set, I'll once again be using Danish education data from Danmarks Statistik via the `danstat` package.\n\nThis chart will display Bachelor's degrees awarded in 2023, by top-line degree field (Science, Humanities, Education, etc). For instance, Law is a sub-field in Social Sciences, one of many. To make it a bit easier I'll limit this chart to academic Bachelor's, not the vocational degrees. There's definitely a more focused project worth doing that displays the sub-fields within the top-line areas, shown as nested smaller circles within larger circles, or something interactive. for now this will suffice.\n\nTo start, let's get the data. It's from a different table than the last chart, so I'll show the work.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(packcircles) # makes the circles!\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(ggrepel) # helps with label offsets\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# this table is UDDAKT60, set to all lower-case in the table_id call\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt60\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\n# the uddanelse codes are the top-line degree fields.\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = c(\"H6020\", \"H6025\", \"H6030\", \"H6035\",\n\t\t\t\t \"H6039\", \"H6059\", \"H6075\", \"H6080\", \"H6090\")),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"tid\", values = 2023))\n\n# start with a larger dataset in case we want to do more analysis or viz with it\ndegs1 <- get_data(\"uddakt60\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\t# shorten the given degree field names\n\tmutate(deg_field = case_when(UDDANNELSE == \"H6020 Educational, BACH\" ~ \"Educ.\",\n\t\t\tUDDANNELSE == \"H6025 Humanities and theological, BACH\" ~ \"Humanities\",\n\t\t\tUDDANNELSE == \"H6030 Arts, BACH\" ~ \"Arts\",\n\t\t\tUDDANNELSE == \"H6035 Science, BACH\" ~ \"Science\",\n\t\t\tUDDANNELSE == \"H6039 Social Sciences, BACH\" ~ \"Social Science\",\n\t\t\tUDDANNELSE == \"H6059 Technical sciences, BACH\" ~ \"Tech Science\",\n\t\t\tUDDANNELSE == \"H6075 Food, biotechnology and laboratory technology, BACH\" \n\t\t\t\t\t\t~ \"Food/Biotech/LabTech\",\n\t\t\tUDDANNELSE == \"H6080 Agriculture, nature and environment, BACH\"\n\t\t\t\t\t ~ \"Agricultural Science\",\n\t\t\tUDDANNELSE == \"H6090 Health science, BACH\" ~ \"Health Sciences\")) \n\n# keep only what we ween to do the circles\ndegs2 <- degs1 %>%\n\tselect(group = deg_field, value = INDHOLD, text)\n\n# this creates x & y coordinates and circle radius values.\ndegs_packing <- circleProgressiveLayout(degs2$value, sizetype='area')\n# new tibble putting it together\ndegs3 <- cbind(degs2, degs_packing)\n# not sure exactly what this does, but it's an important step\ndegs.gg <- circleLayoutVertices(degs_packing, npoints=50)\n```\n:::\n\n\n\nOk, we now have a nice clean tibble, time for the plot. What took the most time here was working on the labels...getting them to the correct size, adjusting for circle size. You'll notice one label set off to the side thanks to the [`ggrepel` package](https://cran.r-project.org/web/packages/ggrepel/vignettes/ggrepel.html).\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the chart\"}\nggplot() +\n\tgeom_polygon_interactive(\n\t\tdata = degs.gg,\n\t\taes(x, y, group = id, fill=id, tooltip = data$text[id], data_id = id),\n\t\tcolour = \"black\", alpha = 0.6) +\n\tscale_fill_viridis() +\n\tgeom_text(data = degs3 %>% filter(value > 6000),\n\t\t\taes(x, y, label = paste0(group, \"\\n\", format(value, big.mark=\",\"))),\n\t\t\tsize=7, color=\"black\") +\n\tgeom_text(data = degs3 %>% filter(between(value, 2410, 3350)),\n\t\t\taes(x, y, label = paste0(group, \"\\n\", format(value, big.mark=\",\"))),\n\t\t\tsize=7, color=\"black\") +\n\tgeom_text(data = degs3 %>% filter(between(value, 600, 2410)),\n\t\t\taes(x, y, label = paste0(group, \"\\n\", format(value, big.mark=\",\"))),\n\t\t\tsize=6, color=\"black\") +\n\tgeom_text_repel(data = degs3 %>% filter(between(value, 200, 400)),\n\t\t\taes(x, y, label = paste0(group, \"\\n\", format(value, big.mark=\",\"))),\n\t\t\tsize=4, color=\"black\",\n\t\t\tmax.overlaps = Inf, nudge_x = -110, nudge_y = 50,\n\t\t\tsegment.curvature = 0,\n\t\t\tsegment.ncp = 8,\n\t\t\tsegment.angle = 30) +\n\tlabs(x = \"\", y = \"\",\n\t\t\t title = \"Social Sciences were the most popular Bachelor's degrees awarded by Danish universities in 2023\",\n\t\t\t subtitle = \"*Labels not diplayed: Education = 134, Food Science = 61*\",\n\t\t\t caption = \"*Data from Danmarks Statistik via danstat package*\") +\n\ttheme_void() +\n\ttheme(legend.position=\"none\", plot.margin=unit(c(0,0,0,0),\"cm\"),\n\t\t\tplot.title = element_markdown(size = 16),\n\t\t\tplot.subtitle = element_markdown(size = 12),\n\t\t\tplot.caption = element_markdown(size = 8)) +\n\tcoord_equal()\n\n```\n:::\n\n\n\n![](images/prompt4_2025.jpg){fig-alt=\"packed circle graph displaying Bachelors degrees awarded by field\"}\n\nThere you have it, academic Bachelor's degrees awarded by Danish universities in 2023. The Social Sciences category accounts for more than twice as many degrees as the next field. Again, the next interesting step would be to visualize the disaggregation of the main fields, and see what subfields are the most popular. It would also be interesting to track the numbers over time, see which majors rose or fell.\n\n*created and posted April 2, 2025*\n\n## Prompt #5 - Ranking {#prompt5}\n\nFor this prompt I desperately wanted to do something relating to music from the band The English Beat because of Ranking Roger. But I'd already committed to the Danish education bit, and Spotify shut down all the interesting API endpoints and don't seem to be reanimating them any time soon. Something about \"safety\", but it's likely AI crawlers, the same ones increasing hosting costs for Wikipedia and other websites as they steal content for their models. And funny for Spotify to complain about someone else using their work to monetize a product.\n\nBut anyway, let's talk ranks. Specifically let's look at the rankings of Bachelor degrees awarded in Denmark in 2023. I'll focus on the academic (4-year) degrees because I wanted to look at majors within broader disciplines and look at differences by gender.\n\nAgain, data comes from Danmarks Statistik via the `danstat` package.\n\nSo first, let's get the data. It's from the same table used in [prompt 4](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt4) but retreived slightly differently so I'll show it again. This time we're getting all the majors within the broader disciplines so in the list call we use `list(code = \"uddannelse\", values = \"*\")`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(packcircles) # makes the circles!\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(ggrepel) # helps with label offsets\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# this table is UDDAKT60, set to all lower-case in the table_id call\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt60\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable.\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = \"*\"),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"køn\", values = c(\"M\", \"K\")),\n\t#list(code = \"alder\", values = c(\"TOT\")),\n\tlist(code = \"tid\", values = 2023))\n\nbacdegs1 <- get_data(\"uddakt60\", variables_ed, language = \"en\") %>%\n\tas_tibble()\n\nbacdegs <- bacdegs1 %>%\n\t# clean up the degree text and code field\n\tmutate(deg_code = str_extract(UDDANNELSE, \"^[^ ]+\")) %>%\n\tmutate(deg_name = sub(\"^\\\\S+\\\\s+\", '', UDDANNELSE)) %>%\n\tmutate(deg_name = str_remove(deg_name, \", BACH\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \" BACH\")) %>%\n\tmutate(deg_group = case_when(\n\t\tdeg_code %in% c(\"H6020\", \"H6025\", \"H6030\", \"H6035\", \"H6039\",\n\t\t\t\t\t\t\t\t\t\t\"H6059\", \"H6075\", \"H6080\", \"H6090\") ~ \"Main\",\n\t\tdeg_code == \"H60\" ~ \"All\",\n\t\tTRUE ~ \"Sub\")) %>%\n\t# create discipline category for making individual plots.\n\tmutate(deg_field =  case_when(\n\t\tstr_detect(deg_code, \"H6020\") ~ \"Education\",\n\t\tstr_detect(deg_code, \"H6025\") ~ \"Humanities\",\n\t\tstr_detect(deg_code, \"H6030\") ~ \"Arts\",\n\t\tstr_detect(deg_code, \"H6035\") ~ \"Science\",\n\t\tstr_detect(deg_code, \"H6039\") ~ \"Social Sciences\",\n\t\tstr_detect(deg_code, \"H6059\") ~ \"Technical sciences\",\n\t\tstr_detect(deg_code, \"H6075\") ~ \"Technical sciences\",\n\t\tstr_detect(deg_code, \"H6080\") ~ \"Agriculture & Veterinary\",\n\t\tstr_detect(deg_code, \"H6090\") ~ \"Health science\",\n\t\tTRUE ~ \"no\")) %>%\n\trename(degs_n = INDHOLD, sex = KØN)\n\n```\n:::\n\n\n\nNow that we have tidy data, let's make the charts. This time out it's horizontal bar charts, ordered by number of degrees awarded. Note that because I'm faceting by gender, and because I want to show the top majors in descending order for each gender, I use the `scales = \"free_y\"` option in the `facet` function.\n\nA few things before we see the work. First, I had hoped to write a function and output all the by-discipline charts but it was too complicated to get each chart to look exactly as I wanted, and I realized I'd have to do lots of individual formatting anyway. So sadly it's \"copy-paste-amend\" for all the charts. I'll only show the code for the chart showing all degrees and for one of the discipline charts, as the rest of the discipline charts were essentially the same, just minor edits on the `geom_text()` code.\n\nSecond, I had to make a design choice regarding the x axes. I decided to keep them standard to the maximum number of degrees by major within each discipline, so the x axes for men & women is the same. To me, having different x axes maximums in the same chart was distorting the scope of the bars, making different numbers look the same.\n\nThird, I am only displaying degree counts, not percentages. I went back and forth on that as well, and decided to go with the counts and save the percentages for the \"Diverging\" prompt on Day 9.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the charts\"}\n\nbacdegs %>%\n\tfilter(deg_group == \"Main\") %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = degs_n, y = reorder_within(deg_name, degs_n, sex), fill = sex)) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_fill_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n\tscale_y_reordered() +\n\tscale_x_continuous(labels = comma) +\n\tlabs(x = \"\", y = \"\",\n\t\t\t title = \"All Bachelor degrees by field & sex, 2023\",\n\t\t\t subtitle = glue::glue(\"*Total degrees earned = 19,199: Men = 8,694, Women = 10,505*\"),\n\t\t\t caption = \"*Data from Danmarks Statistik via danstat package*\") +\n\tfacet_wrap(~ sex, scales = \"free_y\") +\n\tgeom_text(data = subset(tmp, degs_n > 3000),\n\t\t\t\t\t\taes(label = comma(degs_n)), hjust = 1.5, color = \"white\") +\n\tgeom_text(data = subset(tmp, degs_n < 3000),\n\t\t\t\t\t\taes(label = comma(degs_n)), hjust = -.5, color = \"black\") +\n\ttheme_minimal() +\n\ttheme(panel.grid = element_blank(),\n\t\t\t\tlegend.position = \"none\",\n\t\t\t\tplot.subtitle = element_markdown(),\n\t\t\t\tplot.caption = element_markdown())\n\n\n# agriculture and veterinary sciences\nbacdegs %>%\n\tfilter(deg_group == \"Sub\") %>%\n\tfilter(deg_field == \"Agriculture & Veterinary\") %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = degs_n, y = reorder_within(deg_name, degs_n, sex), fill = sex)) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_fill_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n\tscale_y_reordered() +\n\tscale_x_continuous(labels = comma) +\n\tlabs(x = \"\", y = \"\",\n\t\t\t title = \"Agriculture & Veterinary Science Bachelor degrees by field & sex, 2023\",\n\t\t\t subtitle = glue::glue(\"*Total degrees earned = 308: Men = 55, Women = 253*\")) +\n\tfacet_wrap(~ sex, scales = \"free_y\") +\n\tgeom_text(data = subset(tmp, degs_n > 100),\n\t\t\t\t\t\taes(label = comma(degs_n)), hjust = 1.5, color = \"white\") +\n\tgeom_text(data = subset(tmp, degs_n < 100),\n\t\t\t\t\t\taes(label = degs_n), hjust = -.5, color = \"black\") +\n\ttheme_minimal() +\n\ttheme(panel.grid = element_blank(),\n\t\t\t\tlegend.position = \"none\",\n\t\t\t\tplot.subtitle = element_markdown())\n\n```\n:::\n\n\n\n![](images/prompt5_all_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\nThis first chart shows all degrees awarded by discipline and sex. The most immediate thing to notice is that more Bachelor degrees were awarded to women than to men. But that tracks with a chart I did last year, [showing rates of educational attainment by sex](https://www.gregdubrow.io/posts/30-day-chart-challenge-2024/#prompt5) and it's similar to other countries, including the US.\n\nSocial science degrees were the most popular for both men and women. After that it changes a bit. Humanities were 2nd most popular for women, Technical Sciences next for men. And so forth. To be honest, it's kind of a shock to see degree fields so starkly gendered now. I would have though some disciplines would have been a bit more evenly split. Again, we'll dive deeper into the percentage differences on Day 9 for the \"Diverging\" prompt.\n\nIn the tab set below are the rest of the charts, one for each major discipline. If you're interested you can comb through and see which majors were most popular in each discipline. They are lightboxed, so click on the image to enlarge it, and click `esc` or outside the image to restore it to the page.\n\nThe only ones I did not make were for Education and the Food-Biotech-Lab Tech degrees as each only had one major with degrees awarded. In Education there were 134 degrees awarded, 117 to women, 17 to men. For Food-Bio-Lab Tech there were 61 degrees total, 20 to Men, 41 to Women all in a general Food & Nutrition Science major.\n\nThis makes me think I could have done this in Tableau and let the user filter by discipline. Or I could have done parameterized charts in Quarto. Either way I could have added other degree levels. Lots of data prep, but it would be a useful chart. Maybe after the 30 Day Challenge is over.\n\n::: {.panel-tabset group=\"disciplne\"}\n# Agriculture, Nature, & Environment\n\n![](images/prompt5_ag_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Arts\n\n![](images/prompt5_art_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Health Sciences\n\n![](images/prompt5_health_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Humanities\n\n![](images/prompt5_hum_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Science\n\n![](images/prompt5_sci_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Social Science\n\n![](images/prompt5_soc_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Technical Science\n\n![](images/prompt5_tech_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n:::\n\n*created and posted April 4, 2025*\n\n## Prompt #6 - Florence Nightingale {#prompt6}\n\nThe obvious association with Florence Nightingale is that of nursing, so today let's look at health-care degrees, and who gets them. I'm especially interested in degrees for a job called in shorthand here SOSU, or *\"social- og sundhedsassistent\"*. Essentially a nurses aid/nursing assistant. When I was in the hospital after my bicycle accident in 2024 I noticed almost all SOSUs were women and many first or second-generation immigrants.\n\nWhich makes sense when you think of recent immigrants to any country and the types of jobs the first wave immigrants, mainly those who don't come in with college degrees or professional credentials, tend to get...merchants, housekeeping, health care assistants. They establish a stable life and their kids tend to get more education and higher paying jobs. It's the immigration story told often over the decades and in many countries.\n\nI feel like I need to make clear here that this is not intended to \"other\" immigrants to Denmark. I want to help explain SOSU degrees in the conext of their paths to economic and social stability through education and decently paying stable jobs.\n\nYou can read more about the path to a SOSU degree and job [in this explainer](https://static.uvm.dk/publikationer/2008/facts/kap01.html) and more about vocational secondary education in particular on [pages 10-11 here in this PDF report](https://ufm.dk/en/publications/2022/files/the-danish-education-system.pdf).\n\nAgain, data comes from Danmarks Statistik via the `danstat` package. This time we'll look at table UDDAKT35, which has degrees completed and includes immigration category.\n\nFirst we'll get the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\n# Nursing and SOSU degrees by gender and immigrant status\n\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(scales)\nlibrary(tidytext)\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# UDDAKT35 - get english and danish versions of metadata to make sure we get the right degree codes.\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt35\", variables_only = TRUE)\ntable_meta_dk <- danstat::get_table_metadata(table_id = \"uddakt35\", variables_only = TRUE, language = \"da\")\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = c(\"H30\", \"H3010\", \"H301020\")),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"køn\", values = \"*\"),\n\tlist(code = \"herkomst\", values = \"*\"),\n\tlist(code = \"tid\", values = c(2019, 2020, 2021, 2022, 2023, 2024)))\n\n# fetch the data using the variable list\nsosu1 <- get_data(\"uddakt35\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# set up the main dataset...create a main degree field, clean up the national origin field\nsosu_all <- sosu1 %>%\n\trename(sex = kon, national_origin = herkomst, year = tid, n = indhold) %>%\n\tselect(-fstatus) %>%\n\tmutate(deg_code = str_extract(uddannelse, \"^[^ ]+\")) %>%\n\tmutate(deg_name = case_when(\n\t\tdeg_code == \"H30\" ~ \"VET All\",\n\t\tdeg_code == \"H3010\" ~ \"Health care/Educ All\",\n\t\tdeg_code == \"H301020\" ~ \"SOSU\")) %>%\n\tmutate(national_origin = ifelse(\n\t\tnational_origin == \"Persons of Danish origin\", \"Danish origin\", national_origin)) %>%\n\tmutate(national_origin =\n\t\tfactor(national_origin,\n\t\tlevels = c(\"Total\", \"Danish origin\", \"Descendant\",\n\t\t\"Immigrants\", \"Unknown origin\"))) %>%\n\tmutate(sex = ifelse(sex == \"Sex, total\", \"Total\", sex))\n\n```\n:::\n\n\n\nWe have the base frame now from which to make a few charts. All of them will cover the years 2019 to 2024. The chart code isn't all that complicated so I won't include them in this post. If you're interested you can find them in the [github repo for this year's challenge](https://github.com/greg-dubrow/30DayChartChallenge/blob/main/2025/06_florence_n.R).\n\nWe'll first look at total SOSU degrees, then SOSU as a percent of all the vocational degrees in it's main group. We'll also look at sex and national origin.\n\n![](images/prompt6_sosu_all_2025.jpg){fig-alt=\"bar graph displaying SOSU degrees awarded 2019 to 2024\"}\n\nThe key insight that jumps out here is the more than 200% increase in SOSU degrees awarded during this period. The one thing I'm not sure of here if that has to do with any policy change or something else that helped the numbers increase so much over the last five years.\n\nHow about SOSU degrees about relative to all H30 vocational programs?\n\n![](images/prompt6_sosu_pct_vet_2025.jpg){fig-alt=\"bar graph displaying SOSU degrees awarded 2019 to 2024 as a pct of all vocational degrees\"}\n\nSOSU degrees were 2% of the H30 vocational category in 2019 and 4% in 2024. The H30 group grew by almost 1,900 (6%) during that period, meaning SOSU degrees were responsible for more than the growth of all degrees in this group.\n\nSo who gets SOSU degrees in terms of gender and national origin status? Unsurprisingly, given the very gendered nature of nursing health care assistant jobs, about 90% of SOSU degrees go to women.\n\n![](images/prompt6_sosu_sex_2025.jpg){fig-alt=\"bar graph displaying SOSU degrees awarded 2019 to 2024\"}\n\nWhat about national origin? First it helps to explain how that's [defined in Denmark for these statistics](https://www.dst.dk/da/Statistik/dokumentation/Times/moduldata-for-befolkning-og-valg/ie-type) (page is in Danish). Someone of *Danish origin* has at least 1 parent born in and a citizen of Denmark, regardless of where the person was born. A *Descendant* is considered someone to born in Denmark but neither parent is a citizen or born in Denmark. However if at least one of a Descendant's parents acquire Danish citizenship, then that person is now of Danish origin. Finally, an *Immingrant* is considered as someone born abroad and neither parent is a citizen of or born in Denmark. Immigrants can of course gain citizenship, but I'm not sure if they then become considered of Danish origin for these statistics.\n\n![](images/prompt6_sosu_nat_org_2025.jpg){fig-alt=\"bar graph displaying SOSU degrees awarded 2019 to 2024\"}\n\nFor the past few years, immigrants have comprised about 30% or so of all who earned a SOSU degree.\n\nSo how do these gender and national origin percentages compare to all H30 vocational programs?\n\n![](images/prompt6_allvet_sex_2025.jpg){fig-alt=\"bar graph displaying H30 degrees awarded 2019 to 2024\"}\n\nWell, the H30 degrees are not only much more balanced, a slight majority are awarded to men.\n\nAs for national origin...\n\n![](images/prompt6_allvet_natorg_2025.jpg){fig-alt=\"bar graph displaying H30 degrees awarded 2019 to 2024\"}\n\n<p>\n\n...immigrants are growing as a percent of all who earn H30 vocational degrees, at 14% in 2024 up from 8% in 2019. but that's less than half the 34% percent of SOSU degrees awarded to immigrants.\n\nSo to sum up, its as expected; a vast majority of SOSU degrees go to women, and the percentage of SOSU degrees going to immigrants has been rising.\n\nThere's plenty more to examine here, for instance:\n\n-   How do SOSU degree demographics compare to nursing degrees and other medical fields?\n-   What's the demographic picture in other vocational fields? Or in academic secondary, or academic higher education?\n\n*created and posted April 5, 2025*\n\n## Prompts #7 & 8 - Outliers & Histogram {#prompts7and8}\n\nThese next six prompts are under a general theme of Distributions, or how data is arrayed or spread out by one of more factors.\n\nTaking another look at vocational degrees, it turned out to be best to combine these first two prompts, outliers and histogram, into one post. So we'll use the same table UDDAKT35, from Danmarks Statistik via the `danstat` package.\n\nThis time we'll look at all degrees awarded and see the overall distribution (histogram), and degrees which had the most and fewest awarded (outliers). So reversing the prompts I guess, but keeping with the spirit of the challenge.\n\nAs always, we'll fetch and clean the data first. Some slight changes to the previous prompt where we used this table. This time we'll get all degree programs and just for 2024. We won't worry about demographics this time.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(scales)\nlibrary(tidytext)\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# UDDAKT35 - get english and danish versions of metadata to make sure we get the right degree codes.\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt35\", variables_only = TRUE)\ntable_meta_dk <- danstat::get_table_metadata(table_id = \"uddakt35\", variables_only = TRUE, language = \"da\")\n\n# create variable list using the ID value in the variable\n# getting all education programs, pare down\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = \"*\"),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"tid\", values = 2024))\n\n# fetch all the data\nvet1 <- get_data(\"uddakt35\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# clean up a bit, create category fields to help with charts\nvet_all <- vet1 %>%\n\tmutate(deg_code = str_extract(uddannelse, \"^[^ ]+\")) %>%\n\tfilter(!grepl(\"H29\", deg_code)) %>%\n\tfilter(!grepl(\"Total\", deg_code)) %>%\n\tmutate(deg_level = if_else(str_length(deg_code) == 5, \"Main\", \"Sub\")) %>%\n\tmutate(deg_level = if_else(deg_code == \"H30\", \"All\", deg_level)) %>%\n\tmutate(deg_name = sub(\"^\\\\S+\\\\s+\", '', uddannelse)) \n\n# create outlier categories. only majors with +0 degrees\nvet_majors <- vet_all %>%\n\tfilter(deg_level == \"Sub\") %>%\n\tfilter(indhold > 0) %>%\n\tmutate(degs_mean = mean(indhold),\n\t\t\t\t degs_std = sd(indhold),\n\t\t\t\t degs_pctl10 = quantile(indhold, 0.10),\n\t\t\t\t degs_pctl90 = quantile(indhold, 0.90)) %>%\n\tmutate(outlier = case_when(\n\t\tindhold >= degs_pctl90 ~ \"outlier+ > 90thpctl\",\n\t\tindhold <= degs_pctl10 ~ \"outlier- < 10thpctl\",\n\t\tTRUE ~ \"not outlier\")) %>%\n\tmutate(outlier = factor(outlier,\n\t\tlevels = c(\"outlier+ > 90thpctl\", \"not outlier\", \"outlier- < 10thpctl\")))\n\n```\n:::\n\n\n\nThe `vet_majors` dataframe created at the end is what we'll use for outlier analysis -- it keeps only the majors (not the top-line category) and only for degrees awarded greater-than 0. As we'll see in the histogram, the distributions were so skewed I set outlier status at equal-or-above the 90th percentile and equal-or-below the 10th percentiles.\n\nOk, let's build the histogram. I added vertical lines at the median and mean to highlight the skew.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the histogram\"}\nvet_majors %>%\n\tggplot(aes(indhold)) +\n\tgeom_histogram(fill = \"#CC79A7\", bins = 100) +\n\tgeom_vline(aes(xintercept = mean(indhold)), color=\"black\") +\n\tgeom_vline(aes(xintercept = median(indhold)), color=\"#A9A9A9\") +\n\tlabs(x = \"\", y = \"\",\n\t\t\ttitle = \"Eight programs with +1,000 degrees awarded accounted for 43% of the H30 Vocational degrees awarded in 2024\",\n\t\tsubtitle = \"*Total H30 degrees awarded in 2024 = 30,570*\",\n\t\tcaption = \"*Data from Danmarks Statistik table UDDAKT35 via danstat package*\") +\n\tscale_y_continuous(expand = c(.001, 0), limits = c(0, 20),\n\t\t\tbreaks = c(0, 1, 3, 6, 9, 12, 15, 18, 20)) +\n\tscale_x_continuous(breaks = c(0, 500, 1000, 2000, 3000, 4000, 5000, 6000),\n\t\tlabels = comma) +\n\ttheme_minimal() +\n\ttheme(plot.title = element_markdown(size = 16, hjust = 0),\n\t\tplot.subtitle = element_markdown(size = 14, hjust = 0),\n\t\tplot.caption = element_markdown(),\n\t\tlegend.title = element_blank(),\n\t\tlegend.position = c(.98, .05),\n\t\tlegend.justification = c(\"right\", \"bottom\"),\n\t\tlegend.direction = \"horizontal\",\n\t\tlegend.box.just = \"right\",\n\t\tlegend.margin = margin(6, 6, 6, 6),\n\t\tpanel.grid = element_blank(),\n\t\tpanel.border = element_blank())\n\n```\n:::\n\n\n\n![](images/prompt7&8_hist_2025.jpg){fig-alt=\"histogram displaying H30 degrees awarded 2024\"}\n\nMost of the fields awarded fewer than 500 degrees. Only 8 awarded more than 1,000. So a heavy left skew to the distribution.\n\nSo which fields had the most and least relative to the others? The code is below, we'll talk about the chart below the image. I used the white-space resulting from the array of data as space for the legend and explanatory notes. For those annotations I created a couple of text vectors to plug in, one with coloring to use as `richtext` in the `annotate` call.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the outlier chart\"}\n# horizontal bar with fills based on outlier status, bars for mean and median\n# for annotation,\ncaption1 <- paste(strwrap(\"Health, education, business (office, retail, trading (mercantile)), and\n\t\tcraft trades (electrician, carpentry, mechanic) are by far the most popular vocational degree choices.\", 75), collapse = \"\\n\")\n\ncaption2 <- glue::glue(\n\t\"<span style = 'color:#A9A9A9;'>Median = 97   </span><span style = 'color:#000000;'>\n\tMean = 392</span>\"\n)\n\nvet_majors %>%\n\tggplot(aes(x = indhold, y = reorder(deg_name, indhold), fill = outlier)) +\n\tgeom_bar(stat = \"identity\") +\n\tscale_fill_manual(values = c(\"#0072B2\", \"#CC79A7\", \"#D55E00\")) +\n\tgeom_vline(aes(xintercept = mean(indhold)), color=\"black\") +\n\tgeom_vline(aes(xintercept = median(indhold)), color=\"#A9A9A9\") +\n\tscale_x_continuous(limits = ~ c(0, max(.x) + 0.1), breaks = pretty_breaks(),\n\t\texpand = c(0, 0), labels = comma) +\n\tlabs(x = \"\", y = \"\",\n\t\ttitle = \"Total H30 degrees awarded in 2024 = 30,570\",\n\t\tcaption = \"*Data from Danmarks Statistik table UDDAKT35 via danstat package*\") +\n\tannotate(\"text\", x = 2000, y = \"Storage, port and terminal education\",\n\t\tlabel = caption1, size = 5, hjust = 0) +\n\tannotate(\"richtext\", x = 4700, y = \"Train preparation educations\",\n\t\tlabel = caption2,\n\t\tsize = 4.5, label.color = NA) +\n\ttheme_minimal() +\n\ttheme(plot.title = element_markdown(size = 16),\n\t\tplot.caption = element_markdown(),\n\t\taxis.text.y = element_text(size = 7),\n\t\tlegend.title = element_blank(),\n\t\tlegend.position = c(.98, .05),\n\t\tlegend.justification = c(\"right\", \"bottom\"),\n\t\tlegend.direction = \"horizontal\",\n\t\tlegend.box.just = \"right\",\n\t\tlegend.margin = margin(6, 6, 6, 6),\n\t\tpanel.grid = element_blank(),\n\t\tpanel.border = element_blank())\n\n```\n:::\n\n\n\n![](images/prompt7&8_outl_2025.jpg){fig-alt=\"horizontal bar displaying H30 degrees awarded by field 2024\"}\n\nWhat we see is there are outliers, if we define an outlier as outside the 10th or 90th percentiles. We knew from [prompt 6](https://www.gregdubrow.io/posts/30-day-chart-challenge-2024/#prompt6) that SOSU degrees (social health and education) would account for the greatest proportion of vocational degrees, so no surprise that's tops. We also see business & commerce related fields as well as craft & trades also being very popular. Glazier and fitness instructor are among the low outliers, below the 10th percentile in the distribution.\n\nA quick note on what might look like odd degree names. Obviously the original names were in Danish. But the translation to English isn't always perfect. So for example, *gartneruddannelsen* translates to \"Gartner Education\" but what it should be is \"Gardening\", or training to be a florist or work in landscaping. \"Trading Education\" comes from *handelsuddannelsen* which is essentially training to be a merchant - sourcing, logistics, etc.\n\n*created and posted April 5, 2025*\n\n## Prompt #9 - Diverging {#prompt9}\n\nFor the [Diverging prompt last year](https://www.gregdubrow.io/posts/30-day-chart-challenge-2024/#prompt5) I looked at educational attainment by gender in Denmark. This year I'll do a similar chart, and we'll take a different look at the same data used in the Day 5 Ranking prompt. Here though, instead of arraying degrees and majors in terms of raw counts, we'll look at the percentage differences between gender by discipline and major.\n\nWe will go back to the UDDAKT60 table from Danmarks Statistik via the `danstat` package.\n\nIt's a bit of a long post because I'm walking though the process of building the nine discipline charts via a function. If you're most interested in the charts, scroll through the how-to parts.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(packcircles) # makes the circles!\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(ggrepel) # helps with label offsets\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# this table is UDDAKT60, set to all lower-case in the table_id call\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt60\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = \"*\"),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"køn\", values = c(\"M\", \"K\")),\n\t#list(code = \"alder\", values = c(\"TOT\")),\n\tlist(code = \"tid\", values = 2023))\n\n# fetch the data, use the janitor package to clean the names\nbacdegs1 <- get_data(\"uddakt60\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# build the main dataset for charting\nbacdegs <- bacdegs1 %>%\n\tselect(-fstatus) %>%\n\t# create categories for filtering - deg_group is category for all, discipline, or major \n\t# deg_name is major, deg_field is discipline, \n\tmutate(deg_code = str_extract(uddannelse, \"^[^ ]+\")) %>%\n\tmutate(deg_name = sub(\"^\\\\S+\\\\s+\", '', uddannelse)) %>%\n\tmutate(deg_name = str_remove(deg_name, \", BACH\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \" BACH\")) %>%\n\tmutate(deg_group = case_when(\n\t\tdeg_code %in% c(\"H6020\", \"H6025\", \"H6030\", \"H6035\", \"H6039\",\n\t\t\t\t\"H6059\", \"H6075\", \"H6080\", \"H6090\") ~ \"Main\",\n\t\tdeg_code == \"H60\" ~ \"All\",\n\t\tTRUE ~ \"Sub\")) %>%\n\tmutate(deg_field =  case_when(\n\t\tstr_detect(deg_code, \"H6020\") ~ \"Education\",\n\t\tstr_detect(deg_code, \"H6025\") ~ \"Humanities\",\n\t\tstr_detect(deg_code, \"H6030\") ~ \"Arts\",\n\t\tstr_detect(deg_code, \"H6035\") ~ \"Science\",\n\t\tstr_detect(deg_code, \"H6039\") ~ \"Social Sciences\",\n\t\tstr_detect(deg_code, \"H6059\") ~ \"Technical sciences\",\n\t\tstr_detect(deg_code, \"H6075\") ~ \"Food/Biotech/Lab Tech\",\n\t\tstr_detect(deg_code, \"H6080\") ~ \"Agriculture Nature Environment\",\n\t\tstr_detect(deg_code, \"H6090\") ~ \"Health science\",\n\t\tTRUE ~ \"All\")) %>%\n\tmutate(deg_field = factor(deg_field,\n\t\tlevels = c(\"All\", \"Agriculture Nature Environment\", \"Arts\", \"Education\", \"Food/Biotech/Lab Tech\",\n\t\t\"Health science\", \"Humanities\", \"Science\", \"Social Sciences\", \"Technical sciences\"))) %>%\n\trename(degs_n = indhold, sex = kon)\n\n## dataframe to create faint highlight lines in chart\nvlines_df <- data.frame(xintercept = seq(-100, 100, 20))\n\n```\n:::\n\n\n\nPutting this together I first built a chart at the discipline level, showing the percentage differences by gender on a diverging graph. It's a bit of a remix of last year's chart for the same prompt. The code for that is below as is the chart.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the first chart\"}\nbacdegs %>%\n\tfilter(deg_group == \"Main\") %>%\n\tselect(deg_field, sex, degs_n) %>%\n\tgroup_by(deg_field) %>%\n\tmutate(deg_field_tot = sum(degs_n)) %>%\n\tungroup() %>%\n\tgroup_by(deg_field, sex) %>%\n\tmutate(deg_sex_pct = round(degs_n /deg_field_tot, 3)) %>%\n\tmutate(deg_sex_pct = ifelse(sex == \"Men\", deg_sex_pct *-1, deg_sex_pct)) %>%\n\tmutate(deg_sex_pct2 = round(deg_sex_pct * 100, 1)) %>%\n\tungroup() %>%\n\tmutate(deg_field = fct_reorder(deg_field, desc(deg_field))) %>%\n\t{. ->> tmp} %>%\n\tggplot() +\n\tgeom_col(aes(x = -50, y = deg_field), width = 0.75, fill = \"#e0e0e0\") +\n\tgeom_col(aes(x = 50, y = deg_field), width = 0.75, fill = \"#e0e0e0\") +\n\tgeom_col(aes(x = deg_sex_pct2, y = deg_field, fill = sex, color = sex), width = 0.75) +\n\tscale_x_continuous(expand = c(0, 0),\n\t\tlabels = function(x) abs(x), breaks = seq(-100, 100, 20)) +\n\tgeom_vline(data = vlines_df, aes(xintercept = xintercept), color = \"#FFFFFF\", size = 0.1, alpha = 0.5) +\n\tcoord_cartesian(clip = \"off\") +\n\tscale_fill_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n\tscale_color_manual(values = c(\"white\", \"white\")) +\n\tgeom_text(data = subset(tmp, sex == \"Men\"),\n\t\taes(x = deg_sex_pct2, y = deg_field, label = paste0(abs(deg_sex_pct2), \"%\")),\n\t\tsize = 5, color = \"white\", position = position_dodge(width = .4), hjust = -0.09) +\n\tgeom_text(data = subset(tmp, sex == \"Women\"),\n\t\taes(x = deg_sex_pct2, y = deg_field, label = paste0(abs(deg_sex_pct2), \"%\")),\n\t\tsize = 5, color = \"white\", position = position_dodge(width = .4), hjust = 1.1) +\n\tgeom_text(aes(x = -100, y = deg_field, label = paste0(\"Total awarded = \", comma(deg_field_tot))),\n\t\tsize = 4, color = \"#3b3b3b\", hjust = -.1) +\n\tlabs(x = \"\", y = \"\",\n\t\ttitle = \"<span style = 'color: #5D3A9B;'>Women</span> earn more Bachelor's degrees than\n\t\t<span style = 'color: #E66100;'>men</span> in all disciplines except Science and Technical sciences\",\n\t\tsubtitle = glue::glue(\"*Total degrees awarded = 19,199:\n\t\t<span style = 'color: #E66100;'>Men = 8,694 (45%)</span>,\n\t\t<span style = 'color: #5D3A9B;'>Women = 10,505 (55%)</span>*\"),\n\t\tcaption = \"*Data from Danmarks Statistik table UDDAKT60 via danstat package*\") +\n\ttheme_minimal() +\n\ttheme(panel.grid = element_blank(),\n\t\tplot.title = element_markdown(size = 16),\n\t\tplot.subtitle = element_markdown(size = 12),\n\t\tplot.caption = element_markdown(),\n\t\tlegend.position = \"none\", legend.title = element_blank(),\n\t\taxis.text.y = element_text(size = 10))\nrm(tmp)\n```\n:::\n\n\n\n<p>\n\n![](images/prompt9_all_2025.jpg){fig-alt=\"diverging horizontal bar displaying bachelor degrees by sex 2023\"}\n\nThe next step is to repeat this chart for each discipline, showing the top 10 majors by overall degrees awarded. Rather than copy-paste-amend like in prompt 5, this time I set about doing it via a plot function. As you can see from the code for the first chart though, I wanted to add descriptive and informational text in the title and subtitle. It was a bit complicated to do this functionally and I'm sure it took me much longer to sort out the data structures and function mapping, but it worked. I'll walk through the steps here before displaying the charts. After the challenge I'll do a walk-through as a stand-alone post.\n\nFirst up is building dataframes for each discipline, each frame with consistent naming. I went about it this way to avoid errors in filtering when running the plot function across disciplines. I took a similar approach in my October 2024 post on [attendance at football (soccer) matches](https://www.gregdubrow.io/posts/if-you-sell-it-will-they-come/#attendance) around the world.\n\nSo first a function to build the dataframes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the data frames\"}\n## function for individual discipline tables\ndisc_top10 <- function(degfield, dfname = \"NA\") {\ndfout <- bacdegs %>%\n\tfilter(deg_group == \"Sub\") %>%\n\tfilter(deg_field == degfield) %>%\n\tselect(deg_field, deg_name, sex, degs_n) %>%\n\tmutate(degs_all_tot = sum(degs_n)) %>%\n# creates fields to use in plot dynamic subtitle\n\tgroup_by(sex) %>%\n\tmutate(degs_all_sex_tot = sum(degs_n)) %>%\n\tmutate(degs_all_sex_pct = round(degs_all_sex_tot / degs_all_tot, 3) * 100) %>%\n\tmutate(degs_all_sex_pct = paste0(degs_all_sex_pct, \"%\")) %>%\n\tungroup() %>%\n\tgroup_by(deg_name) %>%\n\tmutate(deg_name_tot = sum(degs_n)) %>%\n\tungroup() %>%\n\tarrange(desc(deg_name_tot), deg_name) %>%\n\tmutate(rank=row_number()) %>%\n\tgroup_by(deg_name, sex) %>%\n\tmutate(deg_sex_pct = round(degs_n /deg_name_tot, 3)) %>%\n\tmutate(deg_sex_pct = ifelse(sex == \"Men\", deg_sex_pct *-1, deg_sex_pct)) %>%\n\tmutate(deg_sex_pct2 = round(deg_sex_pct * 100, 1)) %>%\n\tungroup() %>%\n\t# more fields to use in plot dynamic subtitle \n\tmutate(deg_all_men_tot = ifelse(sex == \"Men\", degs_all_sex_tot, NA)) %>%\n\tmutate(deg_all_women_tot = ifelse(sex == \"Women\", degs_all_sex_tot, NA)) %>%\n\tmutate(deg_all_men_pct = ifelse(sex == \"Men\", degs_all_sex_pct, NA)) %>%\n\tmutate(deg_all_women_pct = ifelse(sex == \"Women\", degs_all_sex_pct, NA)) %>%\n\tmutate(deg_field_men_pct = ifelse(sex == \"Men\", paste0(abs(deg_sex_pct2), \"%\"), NA)) %>%\n\tmutate(deg_field_women_pct = ifelse(sex == \"Women\", paste0(deg_sex_pct2, \"%\"), NA))  %>%\n\tgroup_by(deg_name) %>%\n\tfill(deg_all_men_tot) %>%\n\tfill(deg_all_women_tot, .direction = \"up\") %>%\n\tfill(deg_all_men_pct) %>%\n\tfill(deg_all_women_pct, .direction = \"up\") %>%\n\tfill(deg_field_men_pct) %>%\n\tfill(deg_field_women_pct, .direction = \"up\") %>%\n\tungroup()\n# uses the second input to name the dataframe and put it in the global environment\nassign(str_c(dfname, \"_pcts\"), dfout, envir=.GlobalEnv)\n}\n```\n:::\n\n\n\nTo run the function once it's `disc_top10(\"Science\", \"Science\")`. The first input is the discipline name, the 2nd is for the dataframe name.\n\nBut how do we map it across the disciplines? Well, we need a list of disciplines, and we do that by creating a list of fields.\n\n`degfields <- unique(bacdegs$deg_field)`\n\nNow we map it over the function, passing each mapping component to the .x sign.\n\n`map(degfields, ~disc_top10(degfield = .x, dfname = .x))`\n\nOk, let's build the plot function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for the plot function\"}\n## plot function\nmajorplot <- function(plotdf, degfield, plotname = \"NA\") {\n\n\t## for faint highlight lines in chart\n\tvlines_df <- data.frame(xintercept = seq(-100, 100, 20))\n\n\t#create plot\n\tplotout <- plotdf %>%\n\t\tfilter(deg_field == degfield) %>%\n\t\tfilter(rank < 21) %>%\n\t\t# to get top 10 for plot sorted in order of total degrees in major\n\t\tarrange(desc(deg_name_tot)) %>%\n\t\tmutate(deg_name = fct_reorder(deg_name, deg_name_tot)) %>%\n\t\t# not used, but this orders top 10 for plot in degree name order\n\t# mutate(deg_name = fct_reorder(deg_name, desc(deg_name))) %>%\n\t\tggplot() +\n\t# makes the grey bars\n\tgeom_col(aes(x = -50, y = deg_name), width = 0.75, fill = \"#e0e0e0\") +\n\tgeom_col(aes(x = 50, y = deg_name), width = 0.75, fill = \"#e0e0e0\") +\n\t\t# makes the bars for each gender, fill colors in the scale_fill_manual below\n\tgeom_col(aes(x = deg_sex_pct2, y = deg_name, fill = sex, color = sex), width = 0.75) +\n\tscale_x_continuous(expand = c(0, 0),\n\t\t\t\t\t\t\t\t\t\t labels = function(x) abs(x), breaks = seq(-100, 100, 20)) +\n\tscale_fill_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n\t# adds faint guide lines for the bars\n\tgeom_vline(data = vlines_df, aes(xintercept = xintercept), color = \"#FFFFFF\", size = 0.1, alpha = 0.5) +\n\tcoord_cartesian(clip = \"off\") +\n\tscale_color_manual(values = c(\"white\", \"white\")) +\n\t# adds text labels for each major's percent of men & women\n\tgeom_text(data = subset(plotdf, sex == \"Men\" & rank < 21),\n\t\taes(x = deg_sex_pct2, y = deg_name, label = paste0(abs(deg_sex_pct2), \"%\")),\n\t\tsize = 5, color = \"white\", position = position_dodge(width = .4), hjust = -0.09) +\n\tgeom_text(data = subset(plotdf, sex == \"Women\" & rank < 21),\n\t\taes(x = deg_sex_pct2, y = deg_name, label = paste0(abs(deg_sex_pct2), \"%\")),\n\t\tsize = 5, color = \"white\", position = position_dodge(width = .4), hjust = 1.1) +\n\t# inserts the total number of degrees for each discipline into the bars to the \n\t\t# left or right of the percentage bars\n\tgeom_text(data = subset(plotdf, sex == \"Men\" & rank < 21 & deg_sex_pct > -0.85),\n\t\taes(x = -100, y = deg_name, label = paste0(\"Total awarded = \", comma(deg_name_tot))),\n\t\tsize = 3.5, color = \"#3b3b3b\", hjust = -.1) +\n\tgeom_text(data = subset(plotdf, sex == \"Men\" & rank < 21 & deg_sex_pct < -0.85),\n\t\taes(x = 80, y = deg_name, label = paste0(\"Total awarded = \", comma(deg_name_tot))),\n\t\tsize = 3.5, color = \"#3b3b3b\", hjust = .5) +\n\tlabs(x = \"\", y = \"\",\n\t\tcaption = \"*Data from Danmarks Statistik table UDDAKT60 via danstat package*\",\n\t\t# uses html tags for color and fields from the input df to make the title\n\t\t  # specific to the discipline\n\t\tsubtitle = glue::glue(\"*Total degrees awarded in {degfield} = {comma(plotdf$degs_all_tot)}:\n\t\t\t<span style = 'color: #E66100;'>Men =\n\t\t\t{comma(plotdf$deg_all_men_tot)} ({plotdf$deg_all_men_pct})</span>,\n\t\t\t<span style = 'color: #5D3A9B;'>Women =\n\t\t\t{comma(plotdf$deg_all_women_tot)} ({plotdf$deg_all_women_pct})</span>.\n\t\t\tOnly top 10 majors displayed.*\")) +\n\ttheme_minimal() +\n\ttheme(panel.grid = element_blank(),\n\t\t\tplot.title = element_markdown(size = 16, hjust = 0),\n\t\t\tplot.subtitle = element_markdown(size = 12, hjust = 0),\n\t\t\tplot.caption = element_markdown(),\n\t\t\tlegend.position = \"none\", legend.title = element_blank(),\n\t\t\taxis.text.y = element_text(size = 10))\n\t# to create individual plot names and place plots in the global environment\n\tassign(str_c(plotname, \"_plot\"), plotout, envir=.GlobalEnv)\n\t# outputs plots \n\treturn(plotout)\n}\n\n```\n:::\n\n\n\nThe function takes three inputs - the dataframe to run it on, the filter for the discipline in the plot, and the output lot name. The 2nd & 3rd input are the same. To map it over the nine disciplines we need the list of dataframes and the list of disciplines. The code below shows how to build those\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"false\"}\n# create list of data frames to mutate function over\ndf_list <- list(mget(ls(pattern = \"local\")))[[1]]\ndf_list = mget(ls(pattern = \"_pcts\"))\n\n# for degree fields to loop over in function, need a character vector of just major names\n# first a df of just the field names\nbacdegs_maj <- bacdegs %>%\n\tfilter(deg_group == \"Sub\") %>%\n\tmutate(deg_fieldc = as.character(deg_field)) %>%\n\tselect(deg_fieldc)\n\n# then output names to character vector, making sure to sort so that the filter matches to \n # the \ndegfieldsc <- (unique(bacdegs_maj$deg_fieldc)) %>%\n\tstr_sort()\n\n```\n:::\n\n\n\nNow we're ready to build the charts. Because of the way the input dataframes were built we'll have title and subtitle text specific to each discipline. Here's the mapping call:\n\n`map2(df_list, degfieldsc, ~majorplot(plotdf = .x, degfield = .y, plotname = .y))`\n\nThat outputs nine plots that only need minor customization for the explanatory title. Everything else was taken care of in the functions. Because Education and the Food Science disciplines only have one major each, no additional charts for them. The gender difference is in the main chart.\n\nI'll display the seven annotated charts in the tabset below, showing the customization for the Humanities discipline. They are lightboxed, so click on the image to enlarge it, and click `esc` or outside the image to restore it to the page.\n\n::: {.panel-tabset group=\"disciplne\"}\n# Agriculture, Nature, & Environment\n\n![](images/prompt9_ag_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Arts\n\n![](images/prompt9_art_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Health Sciences\n\n![](images/prompt9_health_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Humanities\n\n![](images/prompt9_hum_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"false\"}\nHumanities_plot +\n\tlabs(title = \"Humanities degrees mostly went to <span style = 'color: #5D3A9B;'>women</span>.\n\t\t\t By major, <span style = 'color: #E66100;'>men</span> only earned more degrees in History\")\n\n```\n:::\n\n\n\n# Science\n\n![](images/prompt9_sci_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Social Science\n\n![](images/prompt9_socsci_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n\n# Technical Science\n\n![](images/prompt9_techsci_2025.jpg){fig-alt=\"horizontal bar graph displaying Bachelors degrees awarded by field & sex\"}\n:::\n\nThe overarching take-away is one of some noticeable difference or divergence by gender in many disciplines and majors. To be honest, I was surprised at the extent and size of some differences. I remember seeing it in some colleges and majors at UC Berkeley, but even in the so-called \"male\" majors women were becoming more and more evenly represented.\n\nThe next step for this subject would be to look at some of the more gendered majors and examine whether or not the differences have held steady over time, and if anything explains the change or stasis. Maybe after the challenge or for one of the challenge time-series prompts.\n\n*created and posted April 6, 2025*\n\n## Prompt #13 - Clusters {#prompt13}\n\nFor this \"back to the future\" post, a prompt coming between 9 (posted on April 6) and 14 (posted on April 18) but posted after April 18, let's take a look at R&D expenses by source and research field in Denmark. The prompt is \"clusters\", so I'm clustering research activity by the general field and the sector doing the work.\n\nAs always for this year's challenge, the data is from Danmarks Statistik via the `danstat` package. This time we're using table `RDCE05`, which is Expenses to R&D by sector and field of research and development. I'll mention it more than once, but all expense figures are in millions of Danish kroner. So 1,500 DKK here means 1.5 billion. As of the date of posting, one US dollar gets you about 6.57 kroner. That's about half a kroner lower than this time last year.\n\nIt's also worth mentioning at least once that the unit of analysis is research *expenses*, not funding. Though you could argue that expenses are a proxy for funding, because the money has to come from somewhere. Expenses as reported here means money spent on any and all R&D activity and the people who do it. The funding sources are irrelevant.\n\nI would love to dig in a bit deeper and connect funding sources, the sectors that get funding, and for which fields. But that means at the very least connecting a number of tables or having micro-data access.\n\nI won't spend any time explaining the research fields and sectors. You can get a detailed look at how Danmarks Statistik [describes the data is here](https://www.dst.dk/en/Statistik/dokumentation/documentationofstatistics/research-and-development-in-the-public-sector/statistical-presentation). The research fields follow the rubric laid out in the [OECD's Frascati Manual](https://en.wikipedia.org/wiki/Frascati_Manual), with the fields themselves [enumerated here](https://en.wikipedia.org/wiki/Fields_of_Science_and_Technology).\n\nDo keep in mind that science is interdisciplinary. So data science work, for example, might be in the Engineering and Tech field per the Frascati Manual. But it's quite likely that data science work is happening in medical or social sciences. It's hard to know how every activity is being classified without access to microdata and then being able to tease out interdisciplinary overlaps.\n\nFor the plot itself, I took inspiration for the scatterplot from [Nicola Rennie's cluster chart](https://github.com/nrennie/30DayChartChallenge/blob/main/2025/README.md#day-13-clusters-made-with-r), modifying the colors and other aesthetics a bit. But the code structure starts with Nicola's work, and I learned a bit about some good coding practice and tips. Which is the point of an exercise like this, right?\n\nLet's start by getting and cleaning the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\n#package and process for getting & cleaning data\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(gt) # for tables\nlibrary(ggiraph) # interactive plot with tooltip\nlibrary(ggtext) # add markdown to plot labels\nlibrary(scales) # better number formatting\n\nsource(\"~/Data/r/basic functions.R\")\n\n# RDCE05\ntable_meta <- danstat::get_table_metadata(table_id = \"rdce05\", variables_only = TRUE)\ntable_meta_dk <- danstat::get_table_metadata(table_id = \"rdce05\", variables_only = TRUE, language = \"da\")\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"sektor\", values = \"*\"),\n\tlist(code = \"videnhoved\", values = \"*\"),\n\tlist(code = \"tid\", values = c(2017, 2023)))\n\nr_and_d1 <- get_data(\"rdce05\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\nr_and_d_main <- r_and_d1 %>%\n\tmutate(sektor = str_remove(sektor, \" sector\")) %>%\n\tmutate(sektor = case_when(\n\t\tsektor == \"Total source of funding\" ~ \"Total funding\",\n\t\tsektor == \"Business enterprise\" ~ \"Business\",\n\t\tTRUE ~ sektor)) %>%\n\tmutate(videnhoved = case_when(\n\t\tvidenhoved == \"Agricultural and veterinary sciences\" ~ \"Agri & veterinary sci\",\n\t\tvidenhoved == \"Engineering and technology\" ~ \"Eng & tech\",\n\t\tvidenhoved == \"Humanities and the arts\" ~ \"Humanities & arts\",\n\t\tvidenhoved == \"Medical and health sciences\" ~ \"Medical & health sci\",\n\t\tTRUE ~ videnhoved)) %>%\n\tselect(sector = sektor, field = videnhoved, year = tid, dkk_million = indhold)\n\n```\n:::\n\n\n\n\n\nBefore the main plot, let's get a lay of the land for R&D expenses. Note the `pctchange()` function. It's one I have among a bunch of basic functions I created and load into every project using `source(\"~/Data/r/basic functions.R\")` just after loading packages. The function itself is simple, just `(x - lag(x)) / lag(x)`. But having it as a function saves me from having to redo the formula every time I use it.\n\nThe first table shows expenses for R&D by field of research in Denmark in 2017 & 2023. Below that we see expenses by sector. All values in millions of Danish kroner (DKK).\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the 1st table\"}\n\n# arrange the data\nr_and_d_main %>%\n\tfilter(sector == \"Total funding\") %>%\n\tgroup_by(field) %>%\n\tmutate(pct_chg_funding = pctchange(dkk_million)) %>%\n\tungroup() %>%\n\tpivot_wider(names_from = year, values_from = c(dkk_million, pct_chg_funding)) %>%\n\tmutate(pct_chg_2023 = round(pct_chg_funding_2023, 3)) %>%\n\tselect(field, dkk_million_2017, dkk_million_2023, pct_chg_2023) %>%\n\tarrange(field) %>%\n\t# build the table\n\tgt() %>%\n\tcols_label(\n\t\tfield = \"Research area\",\n\t\tdkk_million_2017 = \"2017\",\n\t\tdkk_million_2023 = \"2023\",\n\t\tpct_chg_2023 = \"% change 2017-2023\") %>%\n\ttab_style(\n\t\tstyle = cell_text(align = \"center\"),\n\t\tlocations = cells_column_labels(\n\t\t\tcolumns = c(dkk_million_2017, dkk_million_2023, pct_chg_2023))) %>%\n\tfmt_number(columns = c(dkk_million_2017, dkk_million_2023),\n\t\tsep_mark = \",\", decimals = 0) %>%\n\tfmt_percent(columns = pct_chg_2023, decimals = 1) %>%\n\topt_align_table_header(align = \"left\") %>%\n\topt_stylize(style = 5)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"mqnkgqxdvu\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#mqnkgqxdvu table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#mqnkgqxdvu thead, #mqnkgqxdvu tbody, #mqnkgqxdvu tfoot, #mqnkgqxdvu tr, #mqnkgqxdvu td, #mqnkgqxdvu th {\n  border-style: none;\n}\n\n#mqnkgqxdvu p {\n  margin: 0;\n  padding: 0;\n}\n\n#mqnkgqxdvu .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: #D5D5D5;\n  border-right-style: solid;\n  border-right-width: 3px;\n  border-right-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: solid;\n  border-left-width: 3px;\n  border-left-color: #D5D5D5;\n}\n\n#mqnkgqxdvu .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#mqnkgqxdvu .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#mqnkgqxdvu .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#mqnkgqxdvu .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mqnkgqxdvu .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#mqnkgqxdvu .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mqnkgqxdvu .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #004D80;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#mqnkgqxdvu .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #004D80;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#mqnkgqxdvu .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#mqnkgqxdvu .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#mqnkgqxdvu .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#mqnkgqxdvu .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#mqnkgqxdvu .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#mqnkgqxdvu .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  vertical-align: middle;\n}\n\n#mqnkgqxdvu .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#mqnkgqxdvu .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#mqnkgqxdvu .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: solid;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: solid;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#mqnkgqxdvu .gt_stub {\n  color: #FFFFFF;\n  background-color: #929292;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D5D5D5;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqnkgqxdvu .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#mqnkgqxdvu .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#mqnkgqxdvu .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#mqnkgqxdvu .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqnkgqxdvu .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D5D5D5;\n}\n\n#mqnkgqxdvu .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#mqnkgqxdvu .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#mqnkgqxdvu .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #929292;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqnkgqxdvu .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D5D5D5;\n}\n\n#mqnkgqxdvu .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D5D5D5;\n}\n\n#mqnkgqxdvu .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#mqnkgqxdvu .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#mqnkgqxdvu .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mqnkgqxdvu .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqnkgqxdvu .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mqnkgqxdvu .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mqnkgqxdvu .gt_left {\n  text-align: left;\n}\n\n#mqnkgqxdvu .gt_center {\n  text-align: center;\n}\n\n#mqnkgqxdvu .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#mqnkgqxdvu .gt_font_normal {\n  font-weight: normal;\n}\n\n#mqnkgqxdvu .gt_font_bold {\n  font-weight: bold;\n}\n\n#mqnkgqxdvu .gt_font_italic {\n  font-style: italic;\n}\n\n#mqnkgqxdvu .gt_super {\n  font-size: 65%;\n}\n\n#mqnkgqxdvu .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#mqnkgqxdvu .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#mqnkgqxdvu .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#mqnkgqxdvu .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#mqnkgqxdvu .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#mqnkgqxdvu .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#mqnkgqxdvu .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#mqnkgqxdvu .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#mqnkgqxdvu div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"field\">Research area</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"dkk_million_2017\">2017</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"dkk_million_2023\">2023</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"pct_chg_2023\">% change 2017-2023</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"field\" class=\"gt_row gt_left\">Agri &amp; veterinary sci</td>\n<td headers=\"dkk_million_2017\" class=\"gt_row gt_right\">1,747</td>\n<td headers=\"dkk_million_2023\" class=\"gt_row gt_right\">2,968</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right\">69.9%</td></tr>\n    <tr><td headers=\"field\" class=\"gt_row gt_left gt_striped\">Eng &amp; tech</td>\n<td headers=\"dkk_million_2017\" class=\"gt_row gt_right gt_striped\">25,651</td>\n<td headers=\"dkk_million_2023\" class=\"gt_row gt_right gt_striped\">27,440</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right gt_striped\">7.0%</td></tr>\n    <tr><td headers=\"field\" class=\"gt_row gt_left\">Humanities &amp; arts</td>\n<td headers=\"dkk_million_2017\" class=\"gt_row gt_right\">2,039</td>\n<td headers=\"dkk_million_2023\" class=\"gt_row gt_right\">1,985</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right\">−2.6%</td></tr>\n    <tr><td headers=\"field\" class=\"gt_row gt_left gt_striped\">Medical &amp; health sci</td>\n<td headers=\"dkk_million_2017\" class=\"gt_row gt_right gt_striped\">20,416</td>\n<td headers=\"dkk_million_2023\" class=\"gt_row gt_right gt_striped\">34,213</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right gt_striped\">67.6%</td></tr>\n    <tr><td headers=\"field\" class=\"gt_row gt_left\">Natural sciences</td>\n<td headers=\"dkk_million_2017\" class=\"gt_row gt_right\">11,033</td>\n<td headers=\"dkk_million_2023\" class=\"gt_row gt_right\">14,473</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right\">31.2%</td></tr>\n    <tr><td headers=\"field\" class=\"gt_row gt_left gt_striped\">Social sciences</td>\n<td headers=\"dkk_million_2017\" class=\"gt_row gt_right gt_striped\">3,397</td>\n<td headers=\"dkk_million_2023\" class=\"gt_row gt_right gt_striped\">4,561</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right gt_striped\">34.3%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"lrmeuvshlz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#lrmeuvshlz table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#lrmeuvshlz thead, #lrmeuvshlz tbody, #lrmeuvshlz tfoot, #lrmeuvshlz tr, #lrmeuvshlz td, #lrmeuvshlz th {\n  border-style: none;\n}\n\n#lrmeuvshlz p {\n  margin: 0;\n  padding: 0;\n}\n\n#lrmeuvshlz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: #D5D5D5;\n  border-right-style: solid;\n  border-right-width: 3px;\n  border-right-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: solid;\n  border-left-width: 3px;\n  border-left-color: #D5D5D5;\n}\n\n#lrmeuvshlz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#lrmeuvshlz .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#lrmeuvshlz .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#lrmeuvshlz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lrmeuvshlz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#lrmeuvshlz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lrmeuvshlz .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #004D80;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#lrmeuvshlz .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #004D80;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#lrmeuvshlz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#lrmeuvshlz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#lrmeuvshlz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#lrmeuvshlz .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#lrmeuvshlz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#lrmeuvshlz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  vertical-align: middle;\n}\n\n#lrmeuvshlz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#lrmeuvshlz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#lrmeuvshlz .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: solid;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: solid;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#lrmeuvshlz .gt_stub {\n  color: #FFFFFF;\n  background-color: #929292;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D5D5D5;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lrmeuvshlz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#lrmeuvshlz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#lrmeuvshlz .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#lrmeuvshlz .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lrmeuvshlz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D5D5D5;\n}\n\n#lrmeuvshlz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#lrmeuvshlz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#lrmeuvshlz .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #929292;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lrmeuvshlz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D5D5D5;\n}\n\n#lrmeuvshlz .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D5D5D5;\n}\n\n#lrmeuvshlz .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#lrmeuvshlz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#lrmeuvshlz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lrmeuvshlz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lrmeuvshlz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lrmeuvshlz .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lrmeuvshlz .gt_left {\n  text-align: left;\n}\n\n#lrmeuvshlz .gt_center {\n  text-align: center;\n}\n\n#lrmeuvshlz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#lrmeuvshlz .gt_font_normal {\n  font-weight: normal;\n}\n\n#lrmeuvshlz .gt_font_bold {\n  font-weight: bold;\n}\n\n#lrmeuvshlz .gt_font_italic {\n  font-style: italic;\n}\n\n#lrmeuvshlz .gt_super {\n  font-size: 65%;\n}\n\n#lrmeuvshlz .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#lrmeuvshlz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#lrmeuvshlz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#lrmeuvshlz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#lrmeuvshlz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#lrmeuvshlz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#lrmeuvshlz .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#lrmeuvshlz .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#lrmeuvshlz div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sector\">Sector</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"funding_year_2017\">2017</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"funding_year_2023\">2023</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"text-align: center;\" scope=\"col\" id=\"pct_chg_2023\">% change 2017 to 2023</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">Business</td>\n<td headers=\"funding_year_2017\" class=\"gt_row gt_right\">40,757</td>\n<td headers=\"funding_year_2023\" class=\"gt_row gt_right\">53,338</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right\">30.9%</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left gt_striped\">Government</td>\n<td headers=\"funding_year_2017\" class=\"gt_row gt_right gt_striped\">1,973</td>\n<td headers=\"funding_year_2023\" class=\"gt_row gt_right gt_striped\">2,157</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right gt_striped\">9.3%</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left\">Higher education</td>\n<td headers=\"funding_year_2017\" class=\"gt_row gt_right\">21,355</td>\n<td headers=\"funding_year_2023\" class=\"gt_row gt_right\">29,821</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right\">39.6%</td></tr>\n    <tr><td headers=\"sector\" class=\"gt_row gt_left gt_striped\">Private non-profit</td>\n<td headers=\"funding_year_2017\" class=\"gt_row gt_right gt_striped\">198</td>\n<td headers=\"funding_year_2023\" class=\"gt_row gt_right gt_striped\">325</td>\n<td headers=\"pct_chg_2023\" class=\"gt_row gt_right gt_striped\">64.1%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\nAgriculture/Veterinary & Medical/Health sciences had biggest increases in R&D expenses from 2017-2023. Engineering/Tech & Medical had highest R&D expenses in 2017, but was overtaken by Medical & Health Sciences in 2023. Again, however, given how prevalent data science technologies are in medical sciences and other fields, it's entirely possible that there's lots of data science going on in the medical fields that might have been classified as Engineering & Information Technology in prior years.\n\nThe Private non-profit sector had biggest increase in R&D expenses 2017-2023, though Business sector by far has the highest R&D expenses.\n\nMy initial reaction to this was surprise, but that's due to my skewed perspective of R&D in the US; I am so steeped in the story of federally-sponsored research and how it grew out of WWII research funding. Billions of dollars in basic and applied research is indeed funded by the federal government (and some from foundations) and carried out via contracts with universities. I assumed the federal government provided far more than the business sector. But surprise, per this [Brookings Institute report](https://www.brookings.edu/articles/rd-for-the-public-good-ways-to-strengthen-societal-innovation-in-the-united-states/) since the mid-1980s the business sector has been funding more R&D in the US than the federal government.\n\nThe story here in Denmark is not that different.\n\nSo let's look at percent change by share of expenses in sector and the fields of research in which the sectors spend funds.\n\nFirst we'll do some data prep to get a dataframe to use for plotting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the scatterplot data\"}\n## first make colors for geom_points\nbg_col <- \"grey97\"\ntext_col <- \"black\"\nhighlight_col <- \"#0072B2\"\nhighlight_col2 <- \"#CC79A7\"\n\n# create the dataframe\nr_and_d_plotdf <-\nr_and_d_main %>%\n\tfilter(!sector == \"Total funding\") %>%\n\tgroup_by(sector, field) %>%\n\tmutate(pct_chg_funding = pctchange(dkk_million)) %>%\n\tungroup() %>%\n\tpivot_wider(names_from = year, values_from = c(dkk_million, pct_chg_funding)) %>%\n\tselect(-pct_chg_funding_2017) %>%\n\tmutate(dkk_million_2023_c = formatC(dkk_million_2023, format = \"d\", big.mark = \",\")) %>%\n\tmutate(dkk_million_2023_c = paste0(dkk_million_2023_c, \" mill DKK\")) %>%\n\tgroup_by(sector) %>%\n\tmutate(sector_funding  = sum(dkk_million_2023)) %>%\n\tmutate(sector_field_funding_pct  = dkk_million_2023 / sum(sector_funding)) %>%\n\tungroup() %>%\n\tmutate(sector_funding_pct  = sector_funding / sum(dkk_million_2023)) %>%\n\tmutate(sector_short = case_when(\n\t\tsector == \"Government\" ~ \"Gov't\",\n\t\tsector == \"Higher education\" ~ \"Higher ed\",\n\t\tsector == \"Private non-profit\" ~ \"NGO\",\n\t\tTRUE ~ sector)) %>%\n\tmutate(sector_field = paste0(sector_short, \"/\", field)) %>%\n\tfilter(!is.na(pct_chg_funding_2023)) %>%\n\tfilter(dkk_million_2017 > 0) %>%\n\tmutate(col = case_when(\n\t\tpct_chg_funding_2023 > 0 ~ highlight_col2,\n\t\tpct_chg_funding_2023 == 0 ~ \"grey60\",\n\t\tpct_chg_funding_2023 < 0 ~ highlight_col))\n\n```\n:::\n\n\n\nNow we build the plot. I wanted to add hover-over tool-tips so I'm using the [`ggiraph`](https://davidgohel.github.io/ggiraph/index.html) package. The only real coding difference from a static scatterplot is using the `geom_point_interactive` function. After we create the plot as an object, we call back to it using the `ggiraph::girafe` function to render it.\n\nWhen you hover over the dots you'll see the sector/field combination and the amount of expenses they had in 2023, in millions of Danish kroner (DKK). Also note that hovering over say \"Gov't / Eng & tech\" not only brings up the tool-tip with 2023 expenses, it also highlights all Government dots, so you can put the Engineering & Tech expenses in contrast with and comparison to other government R&D expenses. Note again, that expenses is essentially a proxy for funding, regardless of funding source.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"girafe html-widget html-fill-item\" id=\"htmlwidget-fc53b3b4f4565a30e0bd\" style=\"width:100%;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-fc53b3b4f4565a30e0bd\">{\"x\":{\"html\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' class='ggiraph-svg' role='graphics-document' id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78' viewBox='0 0 504 360'>\\n <defs id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_defs'>\\n  <clipPath id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_c1'>\\n   <rect x='0' y='0' width='504' height='360'/>\\n  <\\/clipPath>\\n <\\/defs>\\n <g id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_rootg' class='ggiraph-svg-rootg'>\\n  <g clip-path='url(#svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_c1)'>\\n   <rect x='0' y='0' width='504' height='360' fill='#FFFFFF' fill-opacity='1' stroke='#FFFFFF' stroke-opacity='1' stroke-width='0.75' stroke-linejoin='round' stroke-linecap='round' class='ggiraph-svg-bg'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e1' cx='108.59' cy='219.13' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Business/Natural sciences; 7,469 mill DKK' data-id='Business'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e2' cx='253.47' cy='235.26' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Business/Eng &amp;amp; tech; 22,530 mill DKK' data-id='Business'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e3' cx='246.71' cy='173.22' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Business/Medical &amp;amp; health sci; 21,827 mill DKK' data-id='Business'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e4' cx='49.33' cy='110.13' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Business/Agri &amp;amp; veterinary sci; 1,309 mill DKK' data-id='Business'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e5' cx='37.77' cy='291.55' r='2.67pt' fill='#0072B2' fill-opacity='1' stroke='#0072B2' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Business/Social sciences; 107 mill DKK' data-id='Business'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e6' cx='37.67' cy='291.26' r='2.67pt' fill='#0072B2' fill-opacity='1' stroke='#0072B2' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Business/Humanities &amp;amp; arts; 96 mill DKK' data-id='Business'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e7' cx='110.24' cy='205.21' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gov&amp;#39;t/Natural sciences; 309 mill DKK' data-id='Government'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e8' cx='60.77' cy='76.9' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gov&amp;#39;t/Eng &amp;amp; tech; 101 mill DKK' data-id='Government'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e9' cx='287.22' cy='236.36' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gov&amp;#39;t/Medical &amp;amp; health sci; 1,053 mill DKK' data-id='Government'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e10' cx='121.66' cy='255.73' r='2.67pt' fill='#0072B2' fill-opacity='1' stroke='#0072B2' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gov&amp;#39;t/Social sciences; 357 mill DKK' data-id='Government'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e11' cx='102.39' cy='231.18' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Gov&amp;#39;t/Humanities &amp;amp; arts; 276 mill DKK' data-id='Government'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e12' cx='151.95' cy='206.47' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Higher ed/Natural sciences; 6,696 mill DKK' data-id='Higher education'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e13' cx='119.47' cy='224.15' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Higher ed/Eng &amp;amp; tech; 4,808 mill DKK' data-id='Higher education'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e14' cx='227.57' cy='192.68' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Higher ed/Medical &amp;amp; health sci; 11,091 mill DKK' data-id='Higher education'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e15' cx='64.22' cy='215.07' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Higher ed/Agri &amp;amp; veterinary sci; 1,597 mill DKK' data-id='Higher education'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e16' cx='105.86' cy='195.63' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Higher ed/Social sciences; 4,017 mill DKK' data-id='Higher education'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e17' cx='64.48' cy='234.21' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='Higher ed/Humanities &amp;amp; arts; 1,612 mill DKK' data-id='Higher education'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e18' cx='36.74' cy='321.29' r='2.67pt' fill='#0072B2' fill-opacity='1' stroke='#0072B2' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='NGO/Natural sciences; 0 mill DKK' data-id='Private non-profit'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e19' cx='421.95' cy='205.25' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='NGO/Medical &amp;amp; health sci; 244 mill DKK' data-id='Private non-profit'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e20' cx='161.46' cy='38.71' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='NGO/Social sciences; 79 mill DKK' data-id='Private non-profit'/>\\n   <circle id='svg_8c085ecb_9ba2_4617_9ea8_52306f615b78_e21' cx='39.9' cy='156.75' r='2.67pt' fill='#CC79A7' fill-opacity='1' stroke='#CC79A7' stroke-opacity='1' stroke-width='0.71' stroke-linejoin='round' stroke-linecap='round' title='NGO/Humanities &amp;amp; arts; 2 mill DKK' data-id='Private non-profit'/>\\n   <line x1='36.13' y1='239.02' x2='498.52' y2='239.02' stroke='#B3B3B3' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <line x1='108.59' y1='325.4' x2='108.59' y2='33.34' stroke='#B3B3B3' stroke-opacity='1' stroke-width='1.07' stroke-linejoin='round' stroke-linecap='butt'/>\\n   <text x='295.52' y='106.38' font-size='6.4pt' font-family='Helvetica' fill='#7F7F7F' fill-opacity='1'>Above median in expense<\\/text>\\n   <text x='283.91' y='118.67' font-size='6.4pt' font-family='Helvetica' fill='#7F7F7F' fill-opacity='1'>share, expenses increased from<\\/text>\\n   <text x='324.19' y='130.96' font-size='6.4pt' font-family='Helvetica' fill='#7F7F7F' fill-opacity='1'>2017-2023<\\/text>\\n   <text x='35.13' y='253.43' font-size='4.27pt' font-family='Helvetica' fill='#7F7F7F' fill-opacity='1'>Below median in expense<\\/text>\\n   <text x='32.61' y='261.63' font-size='4.27pt' font-family='Helvetica' fill='#7F7F7F' fill-opacity='1'>share, expenses decreased<\\/text>\\n   <text x='47.46' y='269.82' font-size='4.27pt' font-family='Helvetica' fill='#7F7F7F' fill-opacity='1'>from 2017-2023<\\/text>\\n   <text x='13.86' y='323.44' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>-100%<\\/text>\\n   <text x='22.53' y='241.17' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>0%<\\/text>\\n   <text x='15.86' y='158.9' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>100%<\\/text>\\n   <text x='15.86' y='76.63' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>200%<\\/text>\\n   <text x='32.41' y='334.64' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>0%<\\/text>\\n   <text x='186.33' y='334.64' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>5%<\\/text>\\n   <text x='338.59' y='334.64' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>10%<\\/text>\\n   <text x='217.3' y='345.68' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>Sector/field % of all expenses in 2023<\\/text>\\n   <text transform='translate(9.79,223.72) rotate(-90.00)' font-size='4.5pt' font-family='Helvetica' fill='#999999' fill-opacity='1'>Sector/field % change 2017-2023<\\/text>\\n   <text x='36.13' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>Expenses<\\/text>\\n   <text x='73.49' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>include<\\/text>\\n   <text x='101.08' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>all<\\/text>\\n   <text x='111.31' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>R&amp;D<\\/text>\\n   <text x='130.42' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>activity<\\/text>\\n   <text x='157.11' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>&amp;<\\/text>\\n   <text x='164.67' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>personnel,<\\/text>\\n   <text x='204.26' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>regardless<\\/text>\\n   <text x='243.85' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>of<\\/text>\\n   <text x='252.75' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>funding<\\/text>\\n   <text x='281.22' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>source.<\\/text>\\n   <text x='309.69' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>Hover<\\/text>\\n   <text x='333.26' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>over<\\/text>\\n   <text x='351.05' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>for<\\/text>\\n   <text x='362.61' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>sector/field<\\/text>\\n   <text x='403.53' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>&amp;<\\/text>\\n   <text x='411.09' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>2023<\\/text>\\n   <text x='431.12' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>expenses<\\/text>\\n   <text x='467.6' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>in<\\/text>\\n   <text x='476.05' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>millions<\\/text>\\n   <text x='504.96' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>of<\\/text>\\n   <text x='513.86' y='26.09' font-size='6pt' font-style='italic' font-family='Helvetica' fill='#666666' fill-opacity='1'>DKK.<\\/text>\\n   <text x='36.13' y='12.66' font-size='7.5pt' font-family='Helvetica' fill='#666666' fill-opacity='1'>Which combination of sector and field of study spent the most on R&amp;D?<\\/text>\\n   <text x='348.23' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>Data<\\/text>\\n   <text x='360.19' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>from<\\/text>\\n   <text x='371.57' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>Danmarks<\\/text>\\n   <text x='395.73' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>Statistik<\\/text>\\n   <text x='414.62' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>table<\\/text>\\n   <text x='426.84' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>STATUSV2<\\/text>\\n   <text x='454.07' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>via<\\/text>\\n   <text x='461.84' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>danstat<\\/text>\\n   <text x='479.63' y='353.41' font-size='3.75pt' font-style='italic' font-family='Helvetica' fill='#999999' fill-opacity='1'>package<\\/text>\\n  <\\/g>\\n <\\/g>\\n<\\/svg>\",\"js\":null,\"uid\":\"svg_8c085ecb_9ba2_4617_9ea8_52306f615b78\",\"ratio\":1.4,\"settings\":{\"tooltip\":{\"css\":\".tooltip_SVGID_ { padding:5px;background:black;color:white;border-radius:2px;text-align:left; ; position:absolute;pointer-events:none;z-index:999;}\",\"placement\":\"doc\",\"opacity\":0.9,\"offx\":10,\"offy\":10,\"use_cursor_pos\":true,\"use_fill\":false,\"use_stroke\":false,\"delay_over\":200,\"delay_out\":500},\"hover\":{\"css\":\".hover_data_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_data_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_data_SVGID_ { fill:orange;stroke:black; }\\nline.hover_data_SVGID_, polyline.hover_data_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_data_SVGID_, polygon.hover_data_SVGID_, path.hover_data_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_data_SVGID_ { stroke:orange; }\",\"reactive\":true,\"nearest_distance\":null},\"hover_inv\":{\"css\":\"\"},\"hover_key\":{\"css\":\".hover_key_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_key_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_key_SVGID_ { fill:orange;stroke:black; }\\nline.hover_key_SVGID_, polyline.hover_key_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_key_SVGID_, polygon.hover_key_SVGID_, path.hover_key_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_key_SVGID_ { stroke:orange; }\",\"reactive\":true},\"hover_theme\":{\"css\":\".hover_theme_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_theme_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_theme_SVGID_ { fill:orange;stroke:black; }\\nline.hover_theme_SVGID_, polyline.hover_theme_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_theme_SVGID_, polygon.hover_theme_SVGID_, path.hover_theme_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_theme_SVGID_ { stroke:orange; }\",\"reactive\":true},\"select\":{\"css\":\".select_data_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_data_SVGID_ { stroke:none;fill:red; }\\ncircle.select_data_SVGID_ { fill:red;stroke:black; }\\nline.select_data_SVGID_, polyline.select_data_SVGID_ { fill:none;stroke:red; }\\nrect.select_data_SVGID_, polygon.select_data_SVGID_, path.select_data_SVGID_ { fill:red;stroke:none; }\\nimage.select_data_SVGID_ { stroke:red; }\",\"type\":\"multiple\",\"only_shiny\":true,\"selected\":[]},\"select_inv\":{\"css\":\"\"},\"select_key\":{\"css\":\".select_key_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_key_SVGID_ { stroke:none;fill:red; }\\ncircle.select_key_SVGID_ { fill:red;stroke:black; }\\nline.select_key_SVGID_, polyline.select_key_SVGID_ { fill:none;stroke:red; }\\nrect.select_key_SVGID_, polygon.select_key_SVGID_, path.select_key_SVGID_ { fill:red;stroke:none; }\\nimage.select_key_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"select_theme\":{\"css\":\".select_theme_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_theme_SVGID_ { stroke:none;fill:red; }\\ncircle.select_theme_SVGID_ { fill:red;stroke:black; }\\nline.select_theme_SVGID_, polyline.select_theme_SVGID_ { fill:none;stroke:red; }\\nrect.select_theme_SVGID_, polygon.select_theme_SVGID_, path.select_theme_SVGID_ { fill:red;stroke:none; }\\nimage.select_theme_SVGID_ { stroke:red; }\",\"type\":\"single\",\"only_shiny\":true,\"selected\":[]},\"zoom\":{\"min\":1,\"max\":1,\"duration\":300},\"toolbar\":{\"position\":\"topright\",\"pngname\":\"diagram\",\"tooltips\":null,\"fixed\":false,\"hidden\":[],\"delay_over\":200,\"delay_out\":500},\"sizing\":{\"rescale\":true,\"width\":1}}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nIf you start with some of the outliers along the x axis (sector/field combo percentage of all expenses) you notice that most of the outliers are in the medical sciences field, across sectors. Which makes sense from the tables that showed us how much funding medical sciences gets overall relative to other fields. So voila, a cluster!\n\nAs you hover over the dots, what other patterns or clusters do you see?\n\n*created and posted April 21, 2025*\n\n## Prompt #14 - Kinship {#prompt14}\n\nFull disclosure...depending on when you read this, you may or may not see any posts between this one and prompt 9. As you can see by the \"created and posted\" date, if/when I've backfilled some prompts between 9 and here, this was the next post I completed after 9. Life gets in the way sometimes.\n\nAnyway, I knew when the prompts came out that for kinship that I'd want to make a sankey diagram to look at educational pathways depending on parent education. A sankey is a form of network graph, and I wanted to see the connection, or network effect, of parent education on their children's educational attainment.\n\n[StatBank's](https://www.statbank.dk/statbank5a/default.asp?w=1728) education section does have some tables for parent `->` child education, but they aren't as disaggregated as I'd like. So to see educational outcomes by parent educational attainment you have to choose whether to look at secondary outcomes or higher ed outcomes. We're going here with higher ed, so it's table *STATUSV2: 25-45 year-olds, by status for higher education, age and parents attainment*.\n\nSlight aside...there is micro-data that can answer the question as detailed as I would like. The [EduQuant project](https://www.economics.ku.dk/research/externally-funded-research_new/uddankvant/), located in the Economic Department at Københavns Universitet and funded by the Danish Education Ministry, has access to that data and has produced some work on [social mobility and education](https://researchprofiles.ku.dk/en/persons/kristian-bernt-karlson/publications/).\n\nThere are a few ways to do sankeys in r. After some trial-and-error, I settled on using the [`networkD3` package](https://christophergandrud.github.io/networkD3/). A big reason being that the data comes aggregated, and some other packages like `ggsankey` and `ggalluvial` weren't handling the data as well as `networkD3`.\n\nTo get the final result I was helped by [this post from Louise Sinks](https://lsinks.github.io/posts/2023-08-28-TidyTuesday-Refugees/TidyTuesday34-refugees.html) and [this video from the UK's NHS R community](https://youtu.be/3OvsW8OI1wo?feature=shared).\n\nLet's get started...first loading some packages and fetching and cleaning the data. The data cleaning is mainly to make the parent education levels easier to read, and to create age groups. I didn't use the age groups for this chart, but I think I will for the \"complicated\" prompt.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(infer) # tidy statistical inference\nlibrary(scales)\nlibrary(networkD3) # for Sankey plots\nlibrary(htmlwidgets) # html widgets helps to handle the networkD3 objects\nlibrary(htmltools) # for formatting html code\nlibrary(gt)\n\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\ntable_meta <- danstat::get_table_metadata(table_id = \"statusv2\", variables_only = TRUE)\ntable_meta_dk <- danstat::get_table_metadata(table_id = \"statusv2\", variables_only = TRUE, language = \"da\")\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"statusvid\", values = \"*\"),\n\tlist(code = \"alder1\", values = \"*\"),\n\tlist(code = \"forudd1\", values = \"*\"),\n\tlist(code = \"tid\", values = 2023))\n\n# fetch the data\ned_attain1 <- get_data(\"statusv2\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# create a main data frame with cleaned up educational levels and renaming the variables\ned_attain_main <- ed_attain1 %>%\n\t# let's make the Total values easier to read\n\tmutate(statusvid =\n\t\t\tifelse(statusvid == \"Educational graduation statement, total\", \"Total\", statusvid)) %>%\n\tmutate(alder1 =\n\t\t\tifelse(alder1 == \"Age, total\", \"Total\", alder1)) %>%\n\t# let's make the parent ed values a bit easier to read and understand\n\tmutate(forudd1 =\n\t\t\tcase_when(forudd1 == \"H10 Primary education\" ~ \"Primary\",\n\t\t\t\tforudd1 == \"H20 Upper secondary education\" ~\n\t\t\t\t\t\"HS-Academic\",\n\t\t\t\tforudd1 == \"H30 Vocational Education and Training (VET)\" ~\n\t\t\t\t\t\"HS-Vocational\",\n\t\t\t\tforudd1 == \"H40 Short cycle higher education\" ~\n\t\t\t\t\t\"Short-cycle college\",\n\t\t\t\tforudd1 == \"H50 Vocational bachelors educations\" ~\n\t\t\t\t\t\"Bachelor-Vocational\",\n\t\t\t\tforudd1 == \"H60 Bachelors programs\" ~\n\t\t\t\t\t\"Bachelor-Academic\",\n\t\t\t\tforudd1 == \"H70 Masters programs\" ~ \"Masters\",\n\t\t\t\tforudd1 == \"H80 PhD programs\" ~ \"PhD\",\n\t\t\t\tforudd1 == \"H90 Not stated\" ~ \"Not stated\",\n\t\t\t\tTRUE ~ forudd1)) %>%\n\tmutate(statusvid = ifelse(\n\t\tstatusvid == \"No registrated education\", \"No registered education\", statusvid)) %>%\n\t# create age groups in case I want to disaggregate that way\n\tmutate(child_age_group =\n\t\t\tcase_when(\n\t\t\t\talder1 %in% c(\"25 years\", \"26 years\", \"27 years\", \"28 years\", \"29 years\") ~ \"25-29\",\n\t\t\t\talder1 %in% c(\"30 years\", \"31 years\", \"32 years\", \"33 years\", \"34 years\") ~ \"30-34\",\n\t\t\t\talder1 %in% c(\"35 years\", \"36 years\", \"37 years\", \"38 years\", \"39 years\") ~ \"35-39\",\n\t\t\t\talder1 %in% c(\"40 years\", \"41 years\", \"42 years\",\n\t\t\t\t\t\"43 years\", \"44 years\", \"45 years\") ~ \"40-45\",\n\t\t\t\tTRUE ~ alder1)) %>%\n\tselect(parent_ed = forudd1, child_age = alder1, child_age_group, child_ed = statusvid, N = indhold)\n\n```\n:::\n\n\n\n\n\nBefore we get to the sankey diagram, first a quick table so we can see the breakdown of parent educational attainment and children's higher education status, independent of each other.\n\n::: {layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the descriptive tables\"}\ned_attain_main %>%\n\tfilter(!parent_ed == \"Total\") %>%\n\tfilter(child_age == \"Total\") %>%\n\tfilter(child_ed == \"Total\") %>%\n\tselect(parent_ed, N) %>%\n\tmutate(pct = N/ sum(N)) %>%\n\tgt() %>%\n\tcols_label(parent_ed = \"Parent education level\") %>%\n\tfmt_number(columns = N, sep_mark = \",\", decimals = 0) %>%\n\tfmt_percent(columns = pct, decimals = 1) %>%\n\topt_stylize(style = 5)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ttuuwqarvk\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ttuuwqarvk table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ttuuwqarvk thead, #ttuuwqarvk tbody, #ttuuwqarvk tfoot, #ttuuwqarvk tr, #ttuuwqarvk td, #ttuuwqarvk th {\n  border-style: none;\n}\n\n#ttuuwqarvk p {\n  margin: 0;\n  padding: 0;\n}\n\n#ttuuwqarvk .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: #D5D5D5;\n  border-right-style: solid;\n  border-right-width: 3px;\n  border-right-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: solid;\n  border-left-width: 3px;\n  border-left-color: #D5D5D5;\n}\n\n#ttuuwqarvk .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ttuuwqarvk .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ttuuwqarvk .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ttuuwqarvk .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ttuuwqarvk .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#ttuuwqarvk .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ttuuwqarvk .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #004D80;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ttuuwqarvk .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #004D80;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ttuuwqarvk .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ttuuwqarvk .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ttuuwqarvk .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ttuuwqarvk .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ttuuwqarvk .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ttuuwqarvk .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  vertical-align: middle;\n}\n\n#ttuuwqarvk .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ttuuwqarvk .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ttuuwqarvk .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: solid;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: solid;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ttuuwqarvk .gt_stub {\n  color: #FFFFFF;\n  background-color: #929292;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D5D5D5;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ttuuwqarvk .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ttuuwqarvk .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ttuuwqarvk .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ttuuwqarvk .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ttuuwqarvk .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D5D5D5;\n}\n\n#ttuuwqarvk .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ttuuwqarvk .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#ttuuwqarvk .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #929292;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ttuuwqarvk .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D5D5D5;\n}\n\n#ttuuwqarvk .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D5D5D5;\n}\n\n#ttuuwqarvk .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#ttuuwqarvk .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#ttuuwqarvk .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ttuuwqarvk .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ttuuwqarvk .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ttuuwqarvk .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ttuuwqarvk .gt_left {\n  text-align: left;\n}\n\n#ttuuwqarvk .gt_center {\n  text-align: center;\n}\n\n#ttuuwqarvk .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ttuuwqarvk .gt_font_normal {\n  font-weight: normal;\n}\n\n#ttuuwqarvk .gt_font_bold {\n  font-weight: bold;\n}\n\n#ttuuwqarvk .gt_font_italic {\n  font-style: italic;\n}\n\n#ttuuwqarvk .gt_super {\n  font-size: 65%;\n}\n\n#ttuuwqarvk .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ttuuwqarvk .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ttuuwqarvk .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ttuuwqarvk .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ttuuwqarvk .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ttuuwqarvk .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ttuuwqarvk .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#ttuuwqarvk .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#ttuuwqarvk div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"parent_ed\">Parent education level</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"N\">N</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"pct\">pct</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left\">Primary</td>\n<td headers=\"N\" class=\"gt_row gt_right\">177,985</td>\n<td headers=\"pct\" class=\"gt_row gt_right\">11.3%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left gt_striped\">HS-Academic</td>\n<td headers=\"N\" class=\"gt_row gt_right gt_striped\">32,585</td>\n<td headers=\"pct\" class=\"gt_row gt_right gt_striped\">2.1%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left\">HS-Vocational</td>\n<td headers=\"N\" class=\"gt_row gt_right\">562,666</td>\n<td headers=\"pct\" class=\"gt_row gt_right\">35.6%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left gt_striped\">Qualifying educ paths</td>\n<td headers=\"N\" class=\"gt_row gt_right gt_striped\">587</td>\n<td headers=\"pct\" class=\"gt_row gt_right gt_striped\">0.0%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left\">Short-cycle coll</td>\n<td headers=\"N\" class=\"gt_row gt_right\">75,482</td>\n<td headers=\"pct\" class=\"gt_row gt_right\">4.8%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left gt_striped\">Bach-Vocational</td>\n<td headers=\"N\" class=\"gt_row gt_right gt_striped\">282,343</td>\n<td headers=\"pct\" class=\"gt_row gt_right gt_striped\">17.9%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left\">Bach-Academic</td>\n<td headers=\"N\" class=\"gt_row gt_right\">12,126</td>\n<td headers=\"pct\" class=\"gt_row gt_right\">0.8%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left gt_striped\">Masters</td>\n<td headers=\"N\" class=\"gt_row gt_right gt_striped\">124,083</td>\n<td headers=\"pct\" class=\"gt_row gt_right gt_striped\">7.9%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left\">PhD</td>\n<td headers=\"N\" class=\"gt_row gt_right\">10,408</td>\n<td headers=\"pct\" class=\"gt_row gt_right\">0.7%</td></tr>\n    <tr><td headers=\"parent_ed\" class=\"gt_row gt_left gt_striped\">Not stated</td>\n<td headers=\"N\" class=\"gt_row gt_right gt_striped\">302,241</td>\n<td headers=\"pct\" class=\"gt_row gt_right gt_striped\">19.1%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"aiidevkljh\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#aiidevkljh table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#aiidevkljh thead, #aiidevkljh tbody, #aiidevkljh tfoot, #aiidevkljh tr, #aiidevkljh td, #aiidevkljh th {\n  border-style: none;\n}\n\n#aiidevkljh p {\n  margin: 0;\n  padding: 0;\n}\n\n#aiidevkljh .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: #D5D5D5;\n  border-right-style: solid;\n  border-right-width: 3px;\n  border-right-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: solid;\n  border-left-width: 3px;\n  border-left-color: #D5D5D5;\n}\n\n#aiidevkljh .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#aiidevkljh .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#aiidevkljh .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#aiidevkljh .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#aiidevkljh .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#aiidevkljh .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#aiidevkljh .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #004D80;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#aiidevkljh .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #004D80;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#aiidevkljh .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#aiidevkljh .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#aiidevkljh .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#aiidevkljh .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#aiidevkljh .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#aiidevkljh .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n  vertical-align: middle;\n}\n\n#aiidevkljh .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#aiidevkljh .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#aiidevkljh .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D5D5D5;\n  border-left-style: solid;\n  border-left-width: 1px;\n  border-left-color: #D5D5D5;\n  border-right-style: solid;\n  border-right-width: 1px;\n  border-right-color: #D5D5D5;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#aiidevkljh .gt_stub {\n  color: #FFFFFF;\n  background-color: #929292;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D5D5D5;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiidevkljh .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#aiidevkljh .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#aiidevkljh .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#aiidevkljh .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #5F5F5F;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiidevkljh .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D5D5D5;\n}\n\n#aiidevkljh .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#aiidevkljh .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#aiidevkljh .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #929292;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiidevkljh .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D5D5D5;\n}\n\n#aiidevkljh .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D5D5D5;\n}\n\n#aiidevkljh .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#aiidevkljh .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D5D5D5;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D5D5D5;\n}\n\n#aiidevkljh .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#aiidevkljh .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiidevkljh .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#aiidevkljh .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aiidevkljh .gt_left {\n  text-align: left;\n}\n\n#aiidevkljh .gt_center {\n  text-align: center;\n}\n\n#aiidevkljh .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#aiidevkljh .gt_font_normal {\n  font-weight: normal;\n}\n\n#aiidevkljh .gt_font_bold {\n  font-weight: bold;\n}\n\n#aiidevkljh .gt_font_italic {\n  font-style: italic;\n}\n\n#aiidevkljh .gt_super {\n  font-size: 65%;\n}\n\n#aiidevkljh .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#aiidevkljh .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#aiidevkljh .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#aiidevkljh .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#aiidevkljh .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#aiidevkljh .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#aiidevkljh .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#aiidevkljh .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#aiidevkljh div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"child_ed\">Higher ed status</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"N\">N</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"pct\">pct</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"child_ed\" class=\"gt_row gt_left\">Completed education</td>\n<td headers=\"N\" class=\"gt_row gt_right\">826,652</td>\n<td headers=\"pct\" class=\"gt_row gt_right\">52.3%</td></tr>\n    <tr><td headers=\"child_ed\" class=\"gt_row gt_left gt_striped\">Undergoing education</td>\n<td headers=\"N\" class=\"gt_row gt_right gt_striped\">51,141</td>\n<td headers=\"pct\" class=\"gt_row gt_right gt_striped\">3.2%</td></tr>\n    <tr><td headers=\"child_ed\" class=\"gt_row gt_left\">Discontinued education</td>\n<td headers=\"N\" class=\"gt_row gt_right\">78,037</td>\n<td headers=\"pct\" class=\"gt_row gt_right\">4.9%</td></tr>\n    <tr><td headers=\"child_ed\" class=\"gt_row gt_left gt_striped\">No registered education</td>\n<td headers=\"N\" class=\"gt_row gt_right gt_striped\">624,676</td>\n<td headers=\"pct\" class=\"gt_row gt_right gt_striped\">39.5%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\nOf the 1,580,506 people in this data sample, more than half have completed some form of higher education. About half of the parents of the entire pool completed a vocational high school or college degree. There is no education status for almost 20% of parents.\n\nTo make the plot you need to data frames, one for the nodes and one with the data. The nodes frame contains all the unique values of parent and child educational attainment, or for this chart, the nodes. The `sankey_plot_id` frame has the frequencies and parent-to-child paths we need for the sankey band widths. Make sure to render them each as a `data.frame`, as that's the format needed for the sankey functions to work.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the sankey plot dfs\"}\n# make the nodes data frame\nnodes_df <- as.data.frame(ed_attain_allage %>%\n\tselect(parent_ed, child_ed) %>%\n\tpivot_longer(c(\"parent_ed\", \"child_ed\"),\n\tnames_to = \"col_name\", values_to = \"name_match\") %>%\n\t# this removes dupes keeps only name match\n\t# may need to clean names for labels to look nice\n\tselect(\"name_match\") %>%\n\tdistinct())\n\n# create ID df for order of nodes from ed_path_freqs & nodes; -1 ensures 0 index\nsankey_plot_id <- as.data.frame(ed_attain_allage %>%\n  mutate(IDIn = match(parent_ed, nodes_df$name_match) -1,\n  \t\t\t IDOut = match(child_ed, nodes_df$name_match)-1))\n\n```\n:::\n\n\n\nNow we make the plot. We call the links from the df with the frequencies and the nodes fro the nodes df. Font size and family can be changed, as can the node widths and other aesthetic features. The `sinksRight` call places the data labels on the right side node, the end stage, outside the graph. There is no way to put the left-side labels outside the graph. Changing the size accommodates a title and caption added using `htmlwidgets`. Louise Sinks explained in her post that leaving the plot in native size from the `sankeyNetwork` call could truncate parts of the plot if you add a title.\n\nOne important thing it took some searching to solve was the [order of the nodes](https://stackoverflow.com/a/46521992/10226848). You can see in the data cleaning that I set them up as factors with the levels I wanted them ordered. It worked in the `gt` tables but initially not in the sankey. It turns out you need to add `iterations = 0` to keep the auto-positioning from running.\n\nIf you hover over the node bands of the chart, you can see the total number for that path.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the sankey plot\"}\n# create the plot as an object\nedattain_sankey <-\nsankeyNetwork(\n\tLinks = sankey_plot_id, Nodes = nodes_df, \n\tSource = \"IDIn\", Target = \"IDOut\",\n\t# \"Freq\" from freq df, \"name\" from nodes_df \n\tValue = \"N\", NodeID = \"name_match\", \n\tsinksRight = FALSE, iterations = 0, \n\twidth = 600,  height = 400,\n\tfontSize = 16, fontFamily = \"Arial\", nodeWidth = 20)\n\n## add title and caption to plot object\nedattain_sankey <-\n  htmlwidgets::prependContent(\n  \tedattain_sankey, htmltools::tags$h4(\"Higher education pathways for people depending on parent's educational attainment\"))\nedattain_sankey <-\n  htmlwidgets::appendContent(\n  \tedattain_sankey, htmltools::tags$em(\"Data from Danmarks Statistik table STATUSV2 via danstat package\"))\n\nedattain_sankey\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<h4>Higher education pathways for people depending on parent's educational attainment</h4>\n<div id=\"htmlwidget-f1f55caae068fbfc48e3\" style=\"width:100%;height:433px;\" class=\"sankeyNetwork html-widget\"></div>\n<em>Data from Danmarks Statistik table STATUSV2 via danstat package</em>\n<script type=\"application/json\" data-for=\"htmlwidget-f1f55caae068fbfc48e3\">{\"x\":{\"links\":{\"source\":[0,2,3,4,5,6,7,8,9,0,2,3,4,5,6,7,8,9,0,2,3,4,5,6,7,8,9,0,2,3,4,5,6,7,8,9],\"target\":[1,1,1,1,1,1,1,1,1,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],\"value\":[46572,16158,237502,42090,184619,8238,96503,8509,186166,4527,1491,17886,3279,13071,785,6133,688,3248,9516,2500,32888,4887,16824,772,6472,413,3719,117370,12436,274390,25226,67829,2331,14975,798,109108]},\"nodes\":{\"name\":[\"Primary\",\"Completed education\",\"HS-Academic\",\"HS-Vocational\",\"Short-cycle college\",\"Bachelor-Vocational\",\"Bachelor-Academic\",\"Masters\",\"PhD\",\"Not stated\",\"Undergoing education\",\"Discontinued education\",\"No registered education\"],\"group\":[\"Primary\",\"Completed education\",\"HS-Academic\",\"HS-Vocational\",\"Short-cycle college\",\"Bachelor-Vocational\",\"Bachelor-Academic\",\"Masters\",\"PhD\",\"Not stated\",\"Undergoing education\",\"Discontinued education\",\"No registered education\"]},\"options\":{\"NodeID\":\"name_match\",\"NodeGroup\":\"name_match\",\"LinkGroup\":null,\"colourScale\":\"d3.scaleOrdinal(d3.schemeCategory20);\",\"fontSize\":16,\"fontFamily\":\"Arial\",\"nodeWidth\":20,\"nodePadding\":10,\"units\":\"\",\"margin\":{\"top\":null,\"right\":null,\"bottom\":null,\"left\":null},\"iterations\":0,\"sinksRight\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nSo what do we see? Well for parents who stopped out at the primary level, most of their kids are not recorded as having registered for higher education. Same for parents who stopped out at a vocational secondary diploma. We also see a lot of parents without any educational attainment recorded. But most of their kids have either completed higher education or started but then discontinued.\n\nSome of this could be an artifact of the Danish personal registry system not having complete parental education records for the upper end of the 25-45 age pool here, or for parents of immigrant or 1st generation born in Denmark. Some of it could be a product of the older students here being less likely to complete higher education, something we've seen in earlier posts.\n\nI'll break down by age groups in the \"complicated\" prompt. Sadly we don't have a table that shows both parent education and parent or child national origin status. I'd love to have access to micro-data to answer these more detailed questions; that would mean working for StatBank, the Education Ministry, or the EduQuant project (if it gets new funding). A man can dream...\n\n*created and posted April 18, 2025*\n\n## Prompt #15 - Complicated {#prompt15}\n\nI took complicated to mean trying to visualize multiple dimensions. As I mentioned in prompt 14 I wanted to look at higher education completion by parent educational attainment, but broken down a bit more by age groups.\n\nThe chart for this prompt will be a waffle, which I did last year for [prompts 3 & 4](https://www.gregdubrow.io/posts/30-day-chart-challenge-2024/#prompts3and4). We'll use the [`waffle` package](https://github.com/hrbrmstr/waffle) which has a built-in geom to make waffles. Well, not make actual waffles, but a waffle plot. Sorry if this is making you hungry for waffles.\n\nWe'll use the same data as prompt 14, so no need to redo the code to get it. We can get straight to making the charts. There was a bit of complication in making the charts, as I'll explain.\n\nWe do need to create a dataframe to make the plot, and that's where the first complication came in. Because of rounding, some plots went to 101, some stopped at 99. So I needed to do a bit of cleaning to make each plot even out at 100. I suppose I could have done a more nuanced rounding with an `ifelse` but I likely still would have had to examine the plot and check the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the waffle plot data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(waffle) # to make the waffle plots\nlibrary(patchwork) # stitching together the final plots\n\n# using the ed_attain_main df from prompt 14\ned_attain_waffle <- ed_attain_main %>%\n\tfilter(!parent_ed == \"Total\") %>%\n\tfilter(!parent_ed == \"Qualifying educ paths\") %>%\n\tfilter(!child_ed == \"Total\") %>%\n\tfilter(!child_age_group == \"Total\") %>%\n\tgroup_by(child_age_group, parent_ed) %>%\n\tmutate(age_grp_par_ed_sum = sum(N)) %>%\n\tungroup() %>%\n\tgroup_by(child_age_group, parent_ed, child_ed) %>%\n\tmutate(age_par_ed_child_ed_sum = sum(N)) %>%\n\tungroup() %>%\n\tmutate(age_par_ed_child_ed_pct = age_par_ed_child_ed_sum / age_grp_par_ed_sum) %>%\n\tmutate(age_par_ed_child_ed_pct2 = round(age_par_ed_child_ed_pct, 2) * 100) %>%\n\tdistinct(parent_ed, child_age_group, child_ed, .keep_all = TRUE) %>%\n\tselect(-child_age, -N) %>%\n\tmutate(parent_ed = factor(parent_ed,\n\t\tlevels = c(\"Primary\", \"HS-Vocational\", \"HS-Academic\", \"Short-cycle coll\",\n\t\t\t\"Bach-Vocational\", \"Bach-Academic\", \"Masters\", \"PhD\", \"Not stated\"))) %>%\n\tmutate(child_ed = factor(child_ed,\n\t\tlevels = c(\"Completed education\", \"Undergoing education\", \"Discontinued education\",\n\t\t\t\"No registered education\"))) %>%\n\t# clean up pct vals to make charts even out\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"HS-Vocational\" & child_ed == \"Completed education\" & child_age_group == \"25-29\",\n\t\t\t\t40, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Short-cycle coll\" & child_ed == \"No registered education\"\n\t\t\t\t& child_age_group == \"25-29\", 31, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Masters\" & child_ed == \"Completed education\" & child_age_group == \"25-29\",\n\t\t69, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"HS-Academic\" & child_ed == \"Discontinued education\"\n\t\t\t\t& child_age_group == \"30-34\", 9, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Short-cycle coll\" & child_ed == \"Completed education\"\n\t\t\t\t& child_age_group == \"30-34\", 60, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"PhD\" & child_ed == \"Discontinued education\"\n\t\t\t\t& child_age_group == \"30-34\", 4, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Primary\" & child_ed == \"No registered education\"\n\t\t\t\t& child_age_group == \"35-39\", 68, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"HS-Academic\" & child_ed == \"No registered education\"\n\t\t\t\t& child_age_group == \"35-39\", 39, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Short-cycle coll\" & child_ed == \"Discontinued education\"\n\t\t\t\t& child_age_group == \"35-39\", 7, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Bach-Vocational\" & child_ed == \"Discontinued education\"\n\t\t\t\t& child_age_group == \"35-39\", 5, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Primary\" & child_ed == \"No registered education\"\n\t\t\t\t& child_age_group == \"40-45\", 67, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"HS-Academic\" & child_ed == \"No registered education\"\n\t\t\t\t& child_age_group == \"40-45\", 39, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Bach-Vocational\" & child_ed == \"Undergoing education\"\n\t\t\t\t& child_age_group == \"40-45\", 1, age_par_ed_child_ed_pct2)) %>%\n\tmutate(age_par_ed_child_ed_pct2 =\n\t\t\tifelse(parent_ed == \"Not stated\" & child_ed == \"Undergoing education\"\n\t\t\t\t& child_age_group == \"40-45\", 1, age_par_ed_child_ed_pct2))\n\n```\n:::\n\n\n\nIf we are making more than one plot with the same variables, do we copy-paste-amend the code?\n\nNot if we can help it.\n\nLet's make the basic plot into a function to limit the amount of overall code and chance for error. What we'll do here is add a filter expression to the function call.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the plot function\"}\nwaffleplot <- function(plotdf, filter_expr) {\n\t\n\t# Convert the string expression to an actual R expression\n\tfilter_expr <- rlang::parse_expr(filter_expr)\n\t# Filter the data\n\tfiltered_df <- plotdf %>% filter(!!filter_expr)\n\t\n\t# Create the plot\n\tggplot(filtered_df, (aes(fill = child_ed, values = age_par_ed_child_ed_pct2))) +\n\t\tgeom_waffle(na.rm=TRUE, n_rows=10, flip=TRUE, size = 0.33, colour = \"white\") +\n\t\tfacet_wrap(~parent_ed, nrow=1,strip.position = \"bottom\", scales = \"free_x\") +\n\t\tscale_x_discrete(labels = ) +\n\t\tscale_y_continuous(labels = function(x) x * 10, # make this multipler the same as n_rows\n\t\t\texpand = c(0,0)) +\n\t\tscale_fill_brewer(palette = \"Set2\") +\n\t\ttheme_minimal() +\n\t\ttheme(legend.position = \"bottom\", legend.justification = \"left\",\n\t\t\tlegend.spacing.x = unit(0, 'cm'),\n\t\t\tlegend.key.width = unit(1, 'cm'), legend.margin=margin(-10, 0, 0, 0),\n\t\t\tlegend.title = element_text(size = 8), legend.text = element_text(size = 8),\n\t\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank()) +\n\t\tguides(fill = guide_legend(label.position = \"bottom\",\n\t\t\ttitle = \"Higher education completion status\", title.position = \"top\"))\n}\n\n```\n:::\n\n\n\nNow that we have the function, it's easy to call. In this case we pass the data frame and age group filter. I suppose I could have added the dataframe name in the function, but since I may want to reuse the function I kept some things as generic as possible.\n\nCalling the function is simple: `waffleplot(ed_attain_waffle, \"child_age_group == '25-29'\")`. As you can see in the code below, we'll change the age group for each call, creating a plot object each time that we can edit before stitching together for the final plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the plots\"}\n# make each individual plot\nplot_2529 <- waffleplot(ed_attain_waffle, \"child_age_group == '25-29'\")\nplot_3034 <- waffleplot(ed_attain_waffle, \"child_age_group == '30-34'\")\nplot_3539 <- waffleplot(ed_attain_waffle, \"child_age_group == '35-39'\")\nplot_4045 <- waffleplot(ed_attain_waffle, \"child_age_group == '40-45'\")\n\n### add subtitles to the plots with age-group displayed\nplot_2529 <-\nplot_2529 +\n\tlabs(subtitle = \"Age group 25-29\")\n\nplot_3034 <-\n\tplot_3034 +\n\tlabs(subtitle = \"Age group 30-34\")\n\nplot_3539 <-\nplot_3539 +\n\tlabs(subtitle = \"Age group 35-39\")\n\nplot_4045 <-\nplot_4045 +\n\tlabs(subtitle = \"Age group 40-45\")\n\n# usepatchwork to stitch the plots together and add general annotations.\nplot_2529 + plot_3034 +  plot_3539 + plot_4045 +\n\tplot_annotation(\n\t\ttitle = \"In Denmark, regardless of age, the likelihood of completing higher education increases as level of parent education increases.\",\n\t\tsubtitle = \"Higher education completion status for people ages 25-45, by age group and parent educational attainment, 2023. Each block = 1 %\",\n\t\tcaption = \"Data from Danmarks Statistik table STATUSV2 via danstat package\")\n\n```\n:::\n\n\n\n![](images/prompt15_2025.jpg){fig-alt=\"waffle plot displaying higher ed completion by age group and parent education\"}\n\nOne complication I could not adequately solve is the size of the x-axis labels. There's something in the `facet_wrap` call to put together the parent ed levels that does not allow me to change the size the way I could in a stand-alone plot. Not sure why, so we'll have to live with the truncated axis labels. Otherwise I'm happy with the output.\n\nAlso, for the legend, there was no way I know of to include it in only one plot that didn't change the proportions of that plot relative to the others, throwing off the symmetry in the stitched-together plots. So the legend is in every plot. I don't think it's possible to include it as an annotation or extra object in the stitched plot, but maybe there's a hack I don't know of in `patchwork`.\n\nA few things jump out here.\n\n-   First, the pattern is the same regardless of age. If your parents have higher levels of education, you are more likely to complete higher education. I know from my career doing higher ed policy analysis in the US, that the pattern is the same there.\n-   Not surprisingly the younger age group, 25-29, includes more people who are still in the proces of finishing their college education (the orange blocks).\n-   The discontinued rates (blue blocks) seemed similar-ish across age-groups, so the likelihood of stopping out does not look to be affected by parental education level.\n\nOf course if this were a more in-depth report there'd be some descriptive tables to set the stage. And again, if I had access to the micro-data I'd be running regression models to explain factors leading to higher completion rates.\n\n*created and posted April 20, 2025*\n\n## Prompt #19 - Smooth {#prompt19}\n\nFor this very-out-of-prompt-order post (being posted after the prompt that should come after this one) I'm revisiting [prompt 9, \"diverging\"](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt9), to look at academic Bachelor degrees awarded by sex (as a percentage of the whole) but adding a time-series element to it as the theme for the week is time series. The \"smooth\" aspect will be either normalization or smoothing lines.\n\nAs in prompt 9 we're using the `UDDAKT60` table from Danmarks Statistik StatBank via the `danstat` package. The fetching & cleaning is slightly different; this time I'm fetching all available years, 2005 to 2024.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(patchwork) # to join plots\nlibrary(ggtext) # enhancements for text in ggplot\nlibrary(ggrepel)\nlibrary(scales)\n\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# make sure numbers don't present in scientific notation\noptions(scipen=999)\n\n# UDDAKT60\ntable_meta <- danstat::get_table_metadata(table_id = \"uddakt60\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = \"*\"),\n\tlist(code = \"fstatus\", values = c(\"F\")),\n\tlist(code = \"køn\", values = \"*\"),\n\t#list(code = \"alder\", values = c(\"TOT\")),\n\tlist(code = \"tid\", values = \"*\"))\n\nbacdegs1 <- get_data(\"uddakt60\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n## the main cleaned dataset\nbacdegs_main <- bacdegs1 %>%\n\tmutate(kon = ifelse(kon == \"Sex, total\", \"Total\", kon)) %>%\n\tmutate(deg_code = str_extract(uddannelse, \"^[^ ]+\")) %>%\n\tmutate(deg_name = sub(\"^\\\\S+\\\\s+\", '', uddannelse)) %>%\n\tmutate(deg_name = str_remove(deg_name, \", BACH\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \" BACH\")) %>%\n\tmutate(deg_group = case_when(\n\t\tdeg_code %in% c(\"H6020\", \"H6025\", \"H6030\", \"H6035\", \"H6039\",\n\t\t\t\"H6059\", \"H6075\", \"H6080\", \"H6090\") ~ \"Main\",\n\t\tdeg_code == \"H60\" ~ \"All\",\n\t\tTRUE ~ \"Sub\")) %>%\n\tmutate(deg_field =  case_when(\n\t\tstr_detect(deg_code, \"H6020\") ~ \"Education\",\n\t\tstr_detect(deg_code, \"H6025\") ~ \"Humanities\",\n\t\tstr_detect(deg_code, \"H6030\") ~ \"Arts\",\n\t\tstr_detect(deg_code, \"H6035\") ~ \"Science\",\n\t\tstr_detect(deg_code, \"H6039\") ~ \"Social Sciences\",\n\t\tstr_detect(deg_code, \"H6059\") ~ \"Technical sciences\",\n\t\tstr_detect(deg_code, \"H6075\") ~ \"Food/Biotech/Lab Tech\",\n\t\tstr_detect(deg_code, \"H6080\") ~ \"Agriculture/Nature/Environment\",\n\t\tstr_detect(deg_code, \"H6090\") ~ \"Health science\",\n\t\tTRUE ~ \"All\")) %>%\n\tselect(deg_code:deg_field, year = tid, sex = kon, degs_n = indhold)\n\n```\n:::\n\n\n\nWe'll start with two charts; first, the number of degrees earned each year, along with a 3-year moving average smoothing line. Then one showing the year-to-year percent change along with a line showing the average percent change. The 3-year average is computed using the `rollmean` function in the [`zoo` package](https://cran.r-project.org/web/packages/zoo/index.html).\n\nThe percent changes are computed using my custom `pctchange` function loaded with the call `source(\"~/Data/r/basic functions.R\")` when I load packages at the top of a script.\n\nWe can make one dataframe to do both charts, so I'll just create it as it's own object.\n\nI had planned on doing a chart normalizing the degrees awarded to 100 starting in 2005. But it didn't really show that much different than the total degrees chart. Though I decided against using the chart, I kept the process for creating the variable in the script for future use.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the next df\"}\n# create percent change and norm to 100 varaibles\nbacdegs_all <-\nbacdegs_main %>%\n\tfilter(deg_name == \"Bachelors programs\") %>%\n\tfilter(sex == \"Total\") %>%\n\tselect(year, degs_n) %>%\n\t# creates the 3-year rolling average\n\tmutate(degs_3yr = zoo::rollmean(degs_n, k = 3, fill = NA)) %>%\n\t# percent change variables\n\tmutate(pct_chg_degs = pctchange(degs_n)) %>%\n\tmutate(pct_chg_degs2 = ifelse(year > 2005,\n\t\tround(pct_chg_degs * 100, 3), pct_chg_degs)) %>%\n\tmutate(pct_chg_degs2 = ifelse(is.na(pct_chg_degs2), 0, pct_chg_degs2)) %>%\n\t# norming to 100 variables\n\tmutate(cum_change = cumsum(pct_chg_degs2)) %>%\n\tmutate(norm100 = cum_change + 100)\n\n```\n:::\n\n\n\nWe have the dataframe, let's make the charts. Notice for both charts I used some `html` styling in the subtitle to use them as legends. For the percent-change chart I'm using not only `html` styling in the caption but including a dynamic call to the dataframe to include the value of the mean percent change in the caption and the `geom_hline`. We're using `patchwork` to join the plots into one image.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the 1st 2 charts\"}\n# line plot with all degs & 3 year average\nalldegs_plot <- \nbacdegs_all %>%\n\tggplot(aes(x = year)) +\n\tgeom_line(aes(y = degs_n), color = \"#80B1D3\", size = 1 ) +\n\tgeom_line(aes(y = degs_3yr), color = \"#FDB462\", linetype = 2, size = 1) +\n\tscale_x_continuous(breaks = c(2005, 2008, 2010, 2012, 2014, 2016, 2018, 2020, 2022, 2024))+\n\tscale_y_continuous(limits = c(8000, 21000),\n\t\tlabels = label_comma()) +\n\ttheme_minimal() +\n\tlabs(x = \"\", y = \"\",\n\t\ttitle = \"The number of academic bachelor's degrees awarded increased by 77% from 2005-2024\",\n\t\tsubtitle = \"<span style = 'color: #80B1D3;'> Blue line is total degrees awarded.</span>\n\t\t<span style = 'color: #FDB462;'> Orange dotted line is 3-year rolling average.</span> \",\n\t\tcaption = \"*Data from Danmarks Statistik table UDDAKT60 via danstat package*\") +\n\ttheme(\n\t\tpanel.background = element_rect(fill = \"grey95\", colour = \"grey95\"),\n\t\tplot.title = element_markdown(size = 14, color = \"grey35\"),\n\t\tplot.subtitle = element_markdown(size = 11),\n\t\tplot.caption = element_markdown(size = 7),\n\t\taxis.text.x = element_text(size = 7, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 7, color = \"grey50\"),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\n# percent changes\npctchange_plot <-\nbacdegs_all %>%\n\tggplot(aes(x = year, y = pct_chg_degs)) +\n\tgeom_line(color = \"#80B1D3\", size = 1) +\n\tgeom_hline(aes(yintercept = mean(pct_chg_degs, na.rm = TRUE)),\n\t\tcolor=\"#FDB462\") +\n\tscale_x_continuous(\n\t\tbreaks = c(2005, 2008, 2010, 2012, 2014, 2016, 2018, 2020, 2022, 2024)) +\n\tscale_y_continuous(\n\t\tlimits = c(-.2, .2), \n\t\tbreaks = c(-.2, -.15, -.10, -.05, 0, .05, .10, .15, .2),\n\t\tlabels = label_percent()) +\n\ttheme_minimal() +\n\tlabs(x = \"\", y = \"\",\n\t\ttitle = \"The percent change in number of academic bachelor's degrees awarded has fluctuated year-to-year \n\t\tfrom 2005 to 2024\",\n\t\tsubtitle = glue::glue(\"<span style = 'color: #80B1D3;'> Blue line is annual % change in \n\t\tdegrees awarded starting in 2005.</span> \n\t\t<span style = 'color: #FDB462;'> Average year-to-year change is \n\t\t{round(mean(bacdegs_all$pct_chg_degs, na.rm = TRUE) *100, 2)}% </span> \"),\n\t\tcaption = \"*Data from Danmarks Statistik table UDDAKT60 via danstat package*\") +\n\ttheme(\n\t\tpanel.background = element_rect(fill = \"grey95\", colour = \"grey95\"),\n\t\tplot.title = element_markdown(size = 14, color = \"grey35\"),\n\t\tplot.subtitle = element_markdown(size = 11),\n\t\tplot.caption = element_markdown(size = 8),\n\t\taxis.text.x = element_text(size = 9, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 9, color = \"grey50\"),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\nalldegs_plot + pctchange_plot\n```\n:::\n\n\n\n![](images/prompt19_1&2_2025.jpg){fig-alt=\"line charts displaying degrees over time and percent change in degrees year to year\"}\n\nThe number of Bachelor's degrees awarded increased by 77% during the period covered here, albeit with some larger fluctuations in a few years. The 3-year average smoothing line doesn't deviate too far from the general trend line. The percent-change chart shows the fluctuations year to year, though the changes are perhaps magnified a bit by the y-axis scale. With wider limits that line would be more flat.\n\nFor the next chart I'll present degrees by sex in each major discipline. The code for that one is below. We'll modify the main dataframe and pass right into the `ggplot()` calls, no need to create a separate object.\n\nKeep an eye out for what I noticed while doing these charts the first time...look at the trend for \"Technical Sciences. We'll talk about that next.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the 1st deg by sex chart\"}\nbacdegs_main %>%\n\tfilter(!deg_name == \"Bachelors programs\") %>%\n\tfilter(deg_group == \"Main\") %>%\n\tfilter(!sex == \"Total\") %>%\n\tselect(year, deg_field, sex, degs_n) %>%\n\tgroup_by(year, deg_field) %>%\n\tmutate(pct_sex_field = degs_n / sum(degs_n)) %>%\n\tungroup() %>%\n\tggplot(aes(x = year, y = pct_sex_field, color = sex)) +\n\tgeom_point() +\n\tgeom_smooth() +\n\t# for sex men (orange) & women (purple) colors\n\tscale_color_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n\tscale_x_continuous(breaks =\n\t\t\tc(2005, 2008, 2010, 2012, 2014, 2016, 2018, 2020, 2022, 2024)) +\n\tscale_y_continuous(labels = label_percent()) +\n\tlabs(x = \"\", y = \"\") +\n\tfacet_wrap(~ deg_field, scales = \"free_x\") +\n\ttheme(\n\t\tlegend.position = \"none\",\n\t\tpanel.background = element_rect(fill = \"white\", colour = \"grey95\"),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n\t\tplot.title = element_markdown(size = 14, color = \"grey35\"),\n\t\tplot.subtitle = element_markdown(size = 11),\n\t\tplot.caption = element_markdown(size = 8),\n\t\taxis.text.x = element_text(size = 9, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 9, color = \"grey50\"))\n\n```\n:::\n\n\n\n![](images/prompt19_3_2025.jpg){fig-alt=\"dot charts with smoothing lines displaying percent in degrees awarded by sex and academic discipline from 2005-2024\"}\n\nBecause the degree percentages by sex don't really change too much year-to-year the smoothing lines don't really show much. Where there is fluctuation and thus a smoothing line that runs between more spread out points, it's mostly in disciplines with lower numbers of degrees awarded, so prone highlighting the the more noticeable fluctuations.\n\nWhile making them I noticed a weird trend in the \"Technical Sciences\" discipline. It starts at near zero degrees awarded, and the first year the discipline has more degrees, the gendered nature appears. In prompt 9 I noticed the gender divide in lots of disciplines for year 2023, so one of the things I had wanted to examine at some point is the trend in gender splits over time.\n\nSo let's dig a bit deeper into the Technical Sciences discipline and look at total degrees awarded by sex.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the 2nd deg by sex chart\"}\nbacdegs_main %>%\n\tfilter(!deg_name == \"Bachelors programs\") %>%\n\tfilter(deg_group == \"Sub\") %>%\n\tfilter(!sex == \"Total\") %>%\n\tfilter(deg_field == \"Technical sciences\") %>%\n\tselect(year, deg_name, sex, degs_n) %>%\n\tggplot(aes(x = year, y = degs_n, color = sex)) +\n\tgeom_point() +\n\tgeom_smooth() +\n\tlabs(x = \"\", y = \"\") +\n\tscale_color_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n\tscale_x_continuous(breaks =\n\t\t\tc(2005, 2008, 2010, 2012, 2014, 2016, 2018, 2020, 2022, 2024)) +\n\tfacet_wrap(~ deg_name, scales = \"free\") +\n\ttheme(\n\t\tlegend.position = \"none\",\n\t\tpanel.background = element_rect(fill = \"white\", colour = \"grey95\"),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n\t\tplot.title = element_markdown(size = 14, color = \"grey35\"),\n\t\tplot.subtitle = element_markdown(size = 11),\n\t\tplot.caption = element_markdown(size = 8),\n\t\taxis.text.x = element_text(size = 9, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 9, color = \"grey50\"))\n\n```\n:::\n\n\n\n![](images/prompt19_4_2025.jpg){fig-alt=\"dot charts with smoothing lines displaying percent in degrees awarded by sex and major in technical sciences from 2005-2024\"}\n\nFirst we see that all degrees were nearly at zero in 2005, so I'm guessing this discipline was newly classified in the Danish education system around then. I'm sure computer science and engineering degrees were awarded before 2005, but I'm not sure what the broader discipline category was before 2005.\n\nMostly what we notice is that the Electronics & IT major and the Engineering major are responsible for most of the gender split. Electronics & IT is by far the largest major and the gender split is quite stark. Women earn as many or more degrees in some fields, but not enough to make up for the split in Electronics & IT.\n\nThe smoothing lines show us the predicted smoother pass through the trends.\n\nNow that I have a framework for the trends in degrees by sex, I can see doing a longer-form post and looking at majors in all disciplines.\n\n*created and posted April 23, 2025*\n\n## Prompt #20 - Urbanization {#prompt20}\n\nLet's look at educational attainment for people aged 15-69 by municipal group from 2008 to 2023. Given the prompt is \"urbanization\" within the theme of \"time series\", my main questions here are:\n\n-   To what extent the share of people living in the larger municipal areas grew between 2008 and 2023? (the years available on StatsBank)\n\n-   Did the percentages of educational attainment change by municipal group over time?\n\nThe age range available is 15-69. I won't disaggregate by age in this analysis. That would be interesting but I'm trying to keep this somewhat simple.\n\nFirst, a quick primer on civic administrative divisions in Denmark, so we understand what the groups mean.\n\nMunicipalities (kommuner) are incorporated entities for the purposes of budgets, schools, and other services. There are often smaller towns and villages with their own names within a municipality.\n\nFor the purposes of this grouping, Danmarks Statistik has sorted municipalities into five groups. They do not correspond to the Regions, which are administrative units above the level of municipality. A municipality will often have separately named towns, villages or neighborhoods within it, for example Bellinge is a village that is part of the Odense kommune.\n\nThe five municipal groups in these charts are:\n\n-   Capital municipalities (Hovedstadskommuner) is Copenhagen and the surrounding municipalities within roughly 45 minutes to an hour drive, as far south as Dragør just south of the airport, north almost to Helsingør, and west to Tastrup.\n\n-   The Metropolitan municipalities (Storbykommuner) are the three next biggest cities, Århus, Aalborg, and Odense.\n\n-   Provincial Municipalities (Provinsbykommuner) are smaller municipalities roughly more than an hour outside of Copenhagen and the metropolitan kommunes, for example Helsingør, Roskilde, and Viborg.\n\n-   Commuter Municipalities (Oplandskommuner) are on the outskirts of the metropolitan and provincial municipalities, like Fredensborg, Holbæk, and Nyborg.\n\n-   Rural municipalities (Landkommuner) are further away from the Commuter or Provincial municipalities.\n\nYou can find the groups and smaller municipalities within [at this documentation page](https://www.dst.dk/da/Statistik/dokumentation/nomenklaturer/kommunegrupper)\n\nThe data is from Statistiks Danmark via the `danstat` package. We'll be using table LABY19, Educational attainment by municipality groups.\n\nThe first step is of course to get and clean the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(tidyverse) # to do tidyverse things\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(waffle) # to make waffles\nlibrary(gt)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(ggtext)\n\n\nsource(\"~/Data/r/basic functions.R\")\n\n# LABY19: Educational attainment (15-69 years) (number) by municipality groups,\n# highest education completed and age\ntable_meta <- danstat::get_table_metadata(table_id = \"laby19\", variables_only = TRUE)\ntable_meta_dk <- danstat::get_table_metadata(table_id = \"laby19\", variables_only = TRUE, language = \"da\")\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"komgrp\", values = c(1, 2, 3, 4, 5)),\n\tlist(code = \"hfudd2\", values = c(\"TOT\", \"H10\", \"H20\", \"H30\", \"H35\",\n\t\t\"H40\", \"H50\", \"H60\", \"H70\", \"H80\", \"H90\")),\n\tlist(code = \"alder\", values = \"TOT\"),\n\tlist(code = \"tid\", values = \"*\"))\n\ned_urban1 <- get_data(\"laby19\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\ned_urban_main <- ed_urban1 %>%\n\tmutate(komgrp = str_remove(komgrp, \" municipalities\")) %>%\n\tmutate(alder = ifelse(alder == \"Age, total\", \"Total\", alder)) %>%\n\tmutate(hfudd2 = case_when(\n\t\thfudd2 == \"H10 Primary education\" ~ \"Primary\",\n\t\thfudd2 == \"H20 Upper secondary education\" ~\n\t\t\t\"HS-Academic\",\n\t\thfudd2 == \"H30 Vocational Education and Training (VET)\" ~\n\t\t\t\"HS-Vocational\",\n\t\thfudd2 == \"H35 Qualifying educational programs\" ~\n\t\t\t\"Qualifying educ paths\",\n\t\thfudd2 == \"H40 Short cycle higher education\" ~\n\t\t\t\"Short-cycle coll\",\n\t\thfudd2 == \"H50 Vocational bachelors educations\" ~\n\t\t\t\"Bach-Vocational\",\n\t\thfudd2 == \"H60 Bachelors programs\" ~\n\t\t\t\"Bach-Academic\",\n\t\thfudd2 == \"H70 Masters programs\" ~ \"Masters\",\n\t\thfudd2 == \"H80 PhD programs\" ~ \"PhD\",\n\t\thfudd2 == \"H90 Not stated\" ~ \"Not stated\",\n\t\tTRUE ~ hfudd2)) %>%\n\t\tmutate(hfudd2 = factor(hfudd2,\n\t\tlevels = c(\"Primary\", \"HS-Vocational\", \"HS-Academic\", \"Short-cycle coll\",\n\t\t\t\"Qualifying educ paths\", \"Bach-Vocational\", \"Bach-Academic\",\n\t\t\t\"Masters\", \"PhD\", \"Not stated\", \"Total\"))) %>%\n\t\tmutate(komgrp = factor(komgrp,\n\t\tlevels = c(\"Capital\", \"Metropolitan\", \"Commuter\", \"Provincial\", \"Rural\"))) %>%\n\tselect(muni_grp = komgrp, ed_highest = hfudd2, age = alder, year = tid, N = indhold)\n\n```\n:::\n\n\n\nNow that we have a general data frame to work with, let's see if there's been a change in the percentage of people aged 15-69 living in each of the groups from 2008 onward.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making chart 1\"}\n# stacked bar chart x axis is year, y is pct, fill is municipal group\ned_urban_main %>%\n\tfilter(ed_highest == \"Total\") %>%\n\tselect(muni_grp, year, N) %>%\n\tgroup_by(year) %>%\n\tmutate(muni_grp_pct = N /sum(N)) %>%\n\tungroup() %>%\n\tselect(-N) %>%\n\tarrange(year, muni_grp) %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = year, y = muni_grp_pct, fill = muni_grp)) +\n\tgeom_bar(position = \"stack\", stat = \"identity\") +\n\tscale_fill_brewer(palette = \"Set3\") +\n\tgeom_text(aes(label = scales::percent(round(muni_grp_pct, 3))),\n\t\tposition = position_stack(vjust = 0.5),\n\t\tcolor = \"grey20\", size = 5) +\n\tscale_y_continuous(limits = c(0, 1),\n\t\tlabels = label_percent()) +\n\tscale_x_continuous(breaks = c(2008, 2011, 2013, 2015, 2017, 2019, 2021, 2023))+\n\tcoord_cartesian(expand = FALSE, clip = \"off\") +\n\tlabs(x = \"\", y = \"\") +\n\ttheme(\n\t\tplot.title = element_markdown(size = 16), plot.subtitle = element_markdown(size = 12),\n\t\tplot.caption = element_markdown(size = 8),\n\t\tlegend.position = \"bottom\", legend.justification = \"left\",\n\t\tlegend.spacing.x = unit(0, 'cm'),\n\t\tlegend.key.width = unit(1, 'cm'), legend.margin=margin(-12, 0, 0, 0),\n\t\tlegend.title = element_text(size = 8), legend.text = element_text(size = 8),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank()) +\n\tguides(fill = guide_legend(label.position = \"bottom\",\n\t\ttitle = \"Municipality group\", title.position = \"top\"))\nrm(tmp)\n\n```\n:::\n\n\n\n![](images/prompt20_1_2025.jpg){fig-alt=\"stacked bar chart showing percent of people ages 15-69 in denmark by municipal group\"}\n\nAs we can see...share of people in the capital and bigger municipalties has been increasing, with provincial staying roughly the same, commuter declining slightly, and rural declining by 3 percentage points.\n\nSo there has been a trend towards more urbanization.\n\nSlight aside... Using a stacked bar chart like this does bring up a data visualization conundrum that I want to highlight by showing the first almost finished version\n\n![](images/prompt20_no_2025.jpg){fig-alt=\"stacked bar chart showing percent of people ages 15-69 in denmark by municipal group\"}\n\nNote how if you just look at the size of the bars within the bars and don't pay attention to the percent labels, your eyes might lead you to believe that Metropolitan (yellow) and Provincial (orange) are shrinking, because the top line angles downward.\n\nI solved that problem by adding `fct_rev` to the municipal group variable in the first `aes()`. I had ordered them as factors in the main dataset, and the ggplot honored that. But it didn't look right. So reversing them kept the visual inference mostly the same as the data. Though you could sort of be led to believe that the provincial group (now yellow) is decreasing, not growing as it actually is.\n\nThe lesson here is be careful about your choice of visualization, and that it communicates exactly what you want it to, keeping in mind some people make inference by color, shape, and size, and some people go right to the numbers in the labels.\n\nNext is the change in ed attainment by municipal group. Here we'll facet out by municipal group, keeping year as the x axis. The image is \"lightboxed\" so click on it to enlarge. Hit `esc` to restore the screen.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making chart 2\"}\n# stacked bar chart x axis is year, y is pct, fill is ed attainment, facet my muni groups\n\ned_urban_main %>%\n\tfilter(!ed_highest == \"Total\") %>%\n\tselect(muni_grp, ed_highest, year, N) %>%\n\tarrange(year, muni_grp, ed_highest) %>%\n\tgroup_by(year, muni_grp) %>%\n\tmutate(muni_year_N = sum(N)) %>%\n\tmutate(muni_ed_pct = N /sum(N)) %>%\n\tungroup() %>%\n\tselect(-N) %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = year, y = muni_ed_pct, fill = fct_rev(ed_highest))) +\n\tgeom_bar(position = \"stack\", stat = \"identity\") +\n\tscale_fill_manual(values = c(\n\t\t\"#BC80BD\", \"#D9D9D9\",\t\"#FCCDE5\", \"#B3DE69\", \"#FDB462\",\n\t\t\"#80B1D3\", \"#FB8072\", \"#BEBADA\", \"#FFFFB3\", \"#8DD3C7\")) +\n\tgeom_text(\n\t\tdata = subset(tmp, year %in% c(2008, 2015, 2023) & muni_ed_pct > 0.01),\n\t\taes(label = scales::percent(muni_ed_pct, accuracy = 1)),\n\t\tposition = position_stack(vjust = .5),\n\t\tcolor = \"grey20\", size = 3) +\n\tscale_y_continuous(labels = label_percent()) +\n\tscale_x_continuous(breaks = c(2008, 2011, 2013, 2015, 2017, 2019, 2021, 2023))+\n\tcoord_cartesian(expand = FALSE, clip = \"off\") +\n\tfacet_wrap(~muni_grp, scales = \"free\") +\n\tlabs(x = \"\", y = \"\",\n\t\ttitle = \"Danes in all municipal groups are earning higher levels of education over time.\n\t\tThe Capital & Metropolitan groups have higher percentages of people with Bachelor & Master's degrees.\",\n\t\tsubtitle = \"Percentage of people ages 15-69 by municipal group in Denmark, 2008-2023.\",\n\t\tcaption = \"*Data from Danmarks Statistik table LABY19 via danstat package*\") +\n\ttheme(\n\t\tplot.title = element_markdown(size = 14), plot.subtitle = element_markdown(size = 11),\n\t\tplot.caption = element_markdown(size = 8),\n\t\taxis.text.x = element_text(size = 7, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 7, color = \"grey50\"),\n\t\tstrip.background.x = element_rect(fill = \"grey90\", color = \"grey95\"),\n\t\tlegend.position = \"bottom\", legend.justification = \"left\",\n\t\tlegend.spacing.x = unit(0, 'cm'),\n\t\tlegend.key.width = unit(1, 'cm'), legend.margin=margin(-12, 0, 0, 0),\n\t\tlegend.title = element_text(size = 8), legend.text = element_text(size = 8),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank()) +\n\tguides(fill = guide_legend(label.position = \"bottom\", nrow = 1, reverse=T,\n\t\ttitle = \"Highest level of education attained\", title.position = \"top\"))\nrm(tmp)\n```\n:::\n\n\n\n![](images/prompt20_2_2025.jpg){fig-alt=\"stacked bar chart showing percent of people ages 15-69 in denmark by educatonal attainment and municipal group\"}\n\nHere we see more people in all municipal groups attaining higher levels of education over time; the percentage of people stopping out after primary level is decreasing in all municipal groups. We also see a greater percentage of people with Bachelor's and Master's degrees in the Capital and Metropolitan regions.\n\nOr in relation to today's prompt - not only are more people gravitating to the larger urban areas or Copenhagen, Århus, Odense & Aalborg, those that do tend to have higher levels education.\n\nOn a general visualization choice note, I'm not sure if these stacked bars were the way to go. Waffles might have been the better choice, but I had just done waffles in [prompt 15](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt15) so wanted something different here.\n\nSince I had been falling behind in getting charts posted, I wanted to keep this analysis simple. Because age is available (in groups of 5 years) I could go back and see if there's a difference in age composition that might explain changes to the educational attainment mix over time. Especially because we know from [prompt 2](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt2) that Danes are earning higher levels of education over time.\n\nPerhaps a deeper dive project after the chart challenge is over.\n\n*created and posted April 22, 2025*\n\n## Prompt #23 - Log Scale {#prompt23}\n\nFor this prompt I'm revisiting [prompt 3, circular](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt3), to once again look at earnings. I'll expand on that analysis to look across time, since the week's theme is time series. I'll also compare by sex and dig a bit deeper into education level to disaggregate by field or discipline where available.\n\nBecause the prompt is log, what I'll do is run one chart with a log10 transformation and one without, to see if there's a change to the slope.\n\nCircling back to what we saw in [prompt 9](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt9) and [prompt 19](https://www.gregdubrow.io/posts/30-day-chart-challenge-2025/#prompt19), I'm especially interested in seeing if the gendered nature of degree types at the academic bachelor level, where men earn far more of the technical and science degrees, has an effect on earnings.\n\nSo as not to bury the lede, the answer to whether there is a gender pay gap is (sadly) yes. As we'll see, it does vary by worker type (salaried or hourly) and by education level. There were too many layers as is so I did not further disaggregate by worker level (managers, line-staff, trainees, etc). And I couldn't disaggrgate by age because that isn't available with education level. However, we do see in the screenshot below, created on [the StatBank website using Table LIGELI3](https://www.statbank.dk/statbank5a/SelectVarVal/Define.asp?MainTable=LIGELI3&PLanguage=1&PXSId=0&wsid=cftree), that age is a factor in and of itself, though the effect varies by age group.\n\n![](images/LIGELI3_gender%20pay%20gap.png){fig-alt=\"table from danmarks statstik statbank showing gender pay gap\"} But for now let's get back to the log scale prompt we're here to work on.\n\nFirst we get the data. As in prompt 3, the income field we're getting is `MDRSNIT`, standardized monthly earnings. You can read more about the different income variables on pages 8 & 9 in [this pdf document.](https://www.dst.dk/Site/Dst/SingleFiles/GetArchiveFile.aspx?fi=903848007114&fo=0&ext=kvaldel)\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for getting and cleaning data\"}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\nlibrary(tidyverse) # to do tidyverse things\nlibrary(danstat) # package to get Danish statistics via api\nlibrary(waffle) # to make waffles\nlibrary(gt)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(ggtext)\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# lons11\ntable_meta <- danstat::get_table_metadata(table_id = \"lons11\", variables_only = TRUE)\n\n# create variable list using the ID value in the variable\nvariables_ed <- list(\n\tlist(code = \"uddannelse\", values = \"*\"),\n\tlist(code = \"sektor\", values = c(1000, 1016, 1020, 1025, 1046)),\n\tlist(code = \"lønmål\", values = \"MDRSNIT\"), # avg monthly\n\tlist(code = \"køn\", values = \"*\"),\n\tlist(code = \"afloen\", values = c(\"TIME\", \"FAST\")),\n\tlist(code = \"tid\", values = \"*\"))\n\n# get the data from API\nsal1 <- get_data(\"lons11\", variables_ed, language = \"en\") %>%\n\tas_tibble() %>%\n\tclean_names()\n\n# main df to work from clean up some fields, make filtering variables\nsal_main <- sal1 %>%\n\tmutate(income = as.numeric(indhold)) %>%\n\tmutate(income = round(income, 2)) %>%\n\tmutate(kon = ifelse(kon == \"Men and women, total\", \"Total\", kon)) %>%\n\tmutate(afloen = ifelse(\n\t\tafloen == \"Fixed salary-earners\", \"Salaried\", \"Hourly\")) %>%\n\tmutate(sector = case_when(\n\t\tsektor == \"Corporations and organizations\" ~ \"Private sector\",\n\t\tsektor == \"Government including social security funds\" ~ \"Gov't - National\",\n\t\tsektor == \"Municipal government\" ~ \"Gov't - Municipal\",\n\t\tsektor == \"Regional government\" ~ \"Gov't - Regional\",\n\t\tTRUE ~ sektor)) %>%\n\tmutate(sector =\n\t\t\tfactor(sector,\n\t\t\t\tlevels = c(\"All sectors\", \"Gov't - Municipal\", \"Gov't - Regional\",\n\t\t\t\t\t\"Gov't - National\", \"Private sector\"))) %>%\n\tmutate(ed_level =\n\t\t\tcase_when(\n\t\t\t\tstr_detect(uddannelse, \"H10\") ~ \"Primary\",\n\t\t\t\tstr_detect(uddannelse, \"H20\") ~ \"HS-Academic\",\n\t\t\t\tstr_detect(uddannelse, \"H30\") ~ \"HS-Vocational\",\n\t\t\t\tstr_detect(uddannelse, \"H35\") ~ \"Qualifying Programs\",\n\t\t\t\tstr_detect(uddannelse, \"H40\") ~ \"Short-cycle college\",\n\t\t\t\tstr_detect(uddannelse, \"H50\") ~ \"Bachelor-Vocational\",\n\t\t\t\tstr_detect(uddannelse, \"H60\") ~ \"Bachelor-Academic\",\n\t\t\t\tstr_detect(uddannelse, \"H70\") ~ \"Masters\",\n\t\t\t\tstr_detect(uddannelse, \"H80\") ~ \"PhD\",\n\t\t\t\tstr_detect(uddannelse, \"H90\") ~ \"Not stated\",\n\t\t\t\tuddannelse == \"Total\" ~ \"Total\")) %>%\n\tmutate(ed_level =\n\t\t\tfactor(ed_level,\n\t\t\t\tlevels = c(\"Primary\", \"HS-Academic\", \"HS-Vocational\",\n\t\t\t\t\t\"Qualifying Programs\", \"Short-cycle college\",\n\t\t\t\t\t\"Bachelor-Vocational\", \"Bachelor-Academic\",\n\t\t\t\t\t\"Masters\", \"PhD\", \"Not stated\", \"Total\"))) %>%\n\t## clean up the degree names\n\tmutate(deg_code = str_extract(uddannelse, \"^[^ ]+\")) %>%\n\tmutate(deg_name = sub(\"^\\\\S+\\\\s+\", '', uddannelse)) %>%\n\tmutate(deg_name = str_remove(deg_name, \", BACH\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \" BACH\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \", SCE\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \", VBE\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \", MASTER\")) %>%\n\tmutate(deg_name = str_replace(\n\t\tdeg_name, \"Educational, PhD\", \"Education\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \", PhD\")) %>%\n\tmutate(deg_name = str_remove(deg_name, \" PhD\")) %>%\n\tmutate(deg_name = str_replace(deg_name, \" \\\\s*\\\\([^\\\\)]+\\\\)\", \"\")) %>%\n\tmutate(deg_name = str_replace(\n\t\tdeg_name, \"Upper secondary education\", \"Upper secondary\")) %>%\n\tmutate(deg_name = str_replace(\n\t\tdeg_name, \"upper secondary education\", \"upper secondary\")) %>%\n\tmutate(deg_name = str_replace(\n\t\tdeg_name, \"The technology area, \", \"Technology-\")) %>%\n\tmutate(deg_name = str_replace(\n\t\tdeg_name, \"in general\", \"general\")) %>%\n\tmutate(deg_name = ifelse(uddannelse ==\n\t\t\"H2010 Upper secondary education, General (stx, hf, student courses)\",\n\t\t\"Upper secondary, stx, hf\", deg_name)) %>%\n\tmutate(deg_name = ifelse(uddannelse ==\n\t\t\"H2020 Upper secondary education, General (hhx, htx)\",\n\t\"Upper secondary, hhx, htx\", deg_name)) %>%\n\tmutate(deg_name = str_replace(\n\t\tdeg_name, \"Educational\", \"Education\")) %>%\n\tmutate(deg_name = ifelse(\n\t\tdeg_code %in% c(\"H5097\",\"H6097\",\"H7097\",\"H8097\"),\n\t\t\"Not specified\", deg_name)) %>%\n\tmutate(deg_name = case_when(\n\t\tdeg_code == \"H1010\" ~ \"up to 6th grade\",\n\t\tdeg_code == \"H1020\" ~ \"7th-9th grade\",\n\t\tdeg_code == \"H1030\" ~ \"10th grade\",\n\t\tTRUE ~ deg_name)) %>%\n\tmutate(deg_name = str_replace(deg_name,\n\t\"Food, biotechnology and laboratory technology\",\n\t\"Food/Biotech/Lab Tech\")) %>%\n\tmutate(deg_name = str_replace(deg_name,\n\t\t\"educations\", \"education\")) %>%\n\t# create top-line degree level\n\tmutate(deg_level = case_when(\n\t\tdeg_code %in%\n\t\t\tc(\"H10\", \"H20\", \"H30\", \"H35\", \"H40\", \"H50\", \"H60\", \"H70\", \"H80\") ~ \"Top level\",\n\t\tdeg_code == \"Total\" ~ \"Total\",\n\t\tTRUE ~ \"Sub level\")) %>%\n\tselect(year = tid, income, afloen, sector, sex = kon, ed_level,\n\t\tdeg_code, deg_level, deg_name)\n\n```\n:::\n\n\n\nOk, now we do charts. First up is income for the entire population. There will be a chart each for regular scale and log10, stitched together with `patchwork`. The log10 transformation is done in `ggplot` with the `scale_y_log10` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the 1st charts\"}\n# all income, facet by worker type.\nplot_income_all <-\n\tsal_main %>%\n\tfilter(sector == \"All sectors\") %>%\n\tfilter(sex == \"Total\") %>%\n\tfilter(ed_level == \"Total\") %>%\n\tselect(year, income, afloen) %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = year)) +\n\tgeom_line(aes(y = income), size = 2, color = \"#1F78B4\") +\n\tgeom_text(\n\t\tdata = subset(tmp, year %in% c(2015, 2019, 2023)),\n\t\taes(y = income, label = scales::comma(round(income, 0))),\n\t\tcolor = \"#1F78B4\", vjust = 2) +\n\tscale_x_continuous(breaks = c(2015, 2017, 2019, 2021, 2023)) +\n\tscale_y_continuous(limits = c(20000, 60000),\n\t\tbreaks = pretty_breaks(),\n\t\tlabels = label_comma()) +\n\tlabs(x = \"\", y = \"\",\n\t\tsubtitle = \"Monthly standardized income by worker type, 2015-2023;\n\t\tin Danish kroner (DKK)\") +\n\tfacet_wrap(~ afloen) +\n\ttheme_minimal() +\n\ttheme(\n\t\tplot.title = element_markdown(size = 14),\n\t\tplot.subtitle = element_markdown(size = 12),\n\t\tplot.caption = element_markdown(size = 9),\n\t\taxis.text.x = element_text(size = 9, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 9, color = \"grey50\"),\n\t\tstrip.background.x = element_rect(fill = \"grey90\", color = \"grey95\"),\n\t\tstrip.text = element_text(size = 11),\n\t\tpanel.border = element_rect(color = \"grey50\", fill = NA, size = 1),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\n# log10 income\nplot_log_income_all <-\n\tsal_main %>%\n\tfilter(sector == \"All sectors\") %>%\n\tfilter(sex == \"Total\") %>%\n\tfilter(ed_level == \"Total\") %>%\n\tselect(year, income, afloen) %>%\n\tggplot(aes(x = year)) +\n\tgeom_line(aes(y = income), size = 2, color = \"#1F78B4\", alpha = .6) +\n\tgeom_text(\n\t\tdata = subset(tmp, year %in% c(2015, 2019, 2023)),\n\t\taes(y = income, label = scales::comma(round(income, 0))),\n\t\tcolor = \"#1F78B4\", vjust = 2) +\n\tscale_x_continuous(breaks = c(2015, 2017, 2019, 2021, 2023)) +\n\tlabs(x = \"\", y = \"\",\n\t\tsubtitle = \"Monthly standardized income by worker type with log10 axis transformation, 2015-2023;\n\t\tin Danish kroner (DKK)\",\n\t\tcaption = \"*Data from Danmarks Statistik table LØNS11 via danstat package*\") +\n\tscale_y_log10(limits = c(20000, 60000),\n\t\tbreaks = pretty_breaks(),\n\t\tlabels = label_comma()) +\n\tfacet_wrap(~ afloen) +\n\ttheme_minimal() +\n\ttheme(\n\t\tplot.title = element_markdown(size = 14),\n\t\tplot.subtitle = element_markdown(size = 12),\n\t\tplot.caption = element_markdown(size = 8),\n\t\taxis.text.x = element_text(size = 9, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 9, color = \"grey50\"),\n\t\tstrip.background.x = element_rect(fill = \"grey90\", color = \"grey95\"),\n\t\tstrip.text = element_text(size = 11),\n\t\tpanel.border = element_rect(color = \"grey50\", fill = NA, size = 1),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank())\n\nplot_income_all / plot_log_income_all +\n\tplot_annotation(\n\t\ttitle = \"Salaried workers have higher monthly earnings than salaried workers. Log10 axis transformation does not have much effect because increase in wages is steady.\")\n\n```\n:::\n\n\n\n![](images/prompt23_incall_2025.jpg){fig-alt=\"line graphs showing monthly income by salaried and hourly workers in denmark from 2015 to 2023. the bottom graphs have log10 transformations\"}\n\nThere's not much of an effect in changing the y axis to a log10 scale, mainly because the slopes aren't that positively or negatively steep at any point. We can see the gaps in ticks on the y axis as the log transforms those spaces.\n\nNow for some charts by sex. We'll do log10 one more time, but spoiler alert, again it won't matter much.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-fold=\"true\" code-summary=\"Show code for making the income charts by sex\"}\n# all income by sex, facet by worker type.\nplot_income_sex_all <-\n\tsal_main %>%\n\tfilter(sector == \"All sectors\") %>%\n\tfilter(!sex == \"Total\") %>%\n\tfilter(ed_level == \"Total\") %>%\n\tselect(year, income, sex, afloen) %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = year)) +\n\tgeom_line(\n\t\tdata = subset(tmp, sex == \"Men\"),\n\t\taes(y = income), size = 2, color = \"#5D3A9B\") +\n\tgeom_text(\n\t\tdata = subset(tmp, sex == \"Men\" & year == 2015),\n\t\taes(y = income, label = \"Men\"), color = \"#5D3A9B\", vjust = -1) +\n\tgeom_text(\n\t\tdata = subset(tmp, sex == \"Men\" & year %in% c(2015, 2019, 2023)),\n\t\taes(y = income, label = scales::comma(round(income, 0))),\n\t\tcolor = \"#5D3A9B\", vjust = 2) +\n\tgeom_line(\n\t\tdata = subset(tmp, sex == \"Women\"),\n\t\taes(y = income), size = 2, color = \"#E66100\") +\n\tgeom_text(\n\t\tdata = subset(tmp, sex == \"Women\" & year == 2015),\n\t\taes(y = income, label = \"Women\"), color = \"#E66100\", vjust = -1) +\n\tgeom_text(\n\t\tdata = subset(tmp, sex == \"Women\" & year %in% c(2015, 2019, 2023)),\n\t\taes(y = income, label = scales::comma(round(income, 0))),\n\t\tcolor = \"#E66100\", vjust = 2) +\n\tscale_x_continuous(breaks = c(2015, 2017, 2019, 2021, 2023)) +\n\tscale_y_continuous(limits = c(20000, 60000),\n\t\tbreaks = pretty_breaks(),\n\t\tlabels = label_comma()) +\n\tlabs(x = \"\", y = \"\",\n\t\tsubtitle = \"Monthly standardized income by sex and worker type, 2015-2023;\n\t\tin Danish kroner (DKK)\") +\n\tfacet_wrap(~ afloen) +\n\ttheme_minimal() +\n\ttheme(\n\t\tplot.title = element_markdown(size = 14),\n\t\tplot.subtitle = element_markdown(size = 12),\n\t\tplot.caption = element_markdown(size = 9),\n\t\taxis.text.x = element_text(size = 9, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 9, color = \"grey50\"),\n\t\tstrip.background.x = element_rect(fill = \"grey90\", color = \"grey95\"),\n\t\tstrip.text = element_text(size = 11),\n\t\tpanel.border = element_rect(color = \"grey50\", fill = NA, size = 1),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank())\nrm(tmp)\n\n# log10 income\nplot_log_income_sex_all <-\n\tsal_main %>%\n\tfilter(sector == \"All sectors\") %>%\n\tfilter(!sex == \"Total\") %>%\n\tfilter(ed_level == \"Total\") %>%\n\tselect(year, income, sex, afloen) %>%\n\t{. ->> tmp} %>%\n\tggplot(aes(x = year)) +\n\tgeom_line(\n\t\tdata = subset(tmp, sex == \"Men\"),\n\t\taes(y = income), size = 2, color = \"#5D3A9B\", alpha = .6) +\n\tgeom_text(\n\t\tdata = subset(tmp, sex == \"Men\" & year == 2015),\n\t\taes(y = income, label = \"Men\"), color = \"#5D3A9B\", vjust = -1) +\n\tgeom_text(\n\t\tdata = subset(tmp, sex == \"Men\" & year %in% c(2015, 2019, 2023)),\n\t\taes(y = income, label = scales::comma(round(income, 0))),\n\t\tcolor = \"#5D3A9B\", vjust = 2) +\n\tgeom_line(\n\t\tdata = subset(tmp, sex == \"Women\"),\n\t\taes(y = income), size = 2, color = \"#E66100\", alpha = .6) +\n\tgeom_text(\n\t\tdata = subset(tmp, sex == \"Women\" & year == 2015),\n\t\taes(y = income, label = \"Women\"), color = \"#E66100\", vjust = -1) +\n\tgeom_text(\n\t\tdata = subset(tmp, sex == \"Women\" & year %in% c(2015, 2019, 2023)),\n\t\taes(y = income, label = scales::comma(round(income, 0))),\n\t\tcolor = \"#E66100\", vjust = 2) +\n\tscale_x_continuous(breaks = c(2015, 2017, 2019, 2021, 2023)) +\n\tscale_y_log10(limits = c(20000, 60000),\n\t\tbreaks = pretty_breaks(),\n\t\tlabels = label_comma()) +\n\tlabs(x = \"\", y = \"\",\n\t\tsubtitle = \"Monthly standardized income by sex & worker type with log10 axis transformation, 2015-2023;\n\t\tin Danish kroner (DKK)\",\n\t\tcaption = \"*Data from Danmarks Statistik table LØNS11 via danstat package*\") +\n\tfacet_wrap(~ afloen) +\n\ttheme_minimal() +\n\ttheme(\n\t\tplot.title = element_markdown(size = 14),\n\t\tplot.subtitle = element_markdown(size = 12),\n\t\tplot.caption = element_markdown(size = 8),\n\t\taxis.text.x = element_text(size = 9, color = \"grey50\"),\n\t\taxis.text.y = element_text(size = 9, color = \"grey50\"),\n\t\tstrip.background.x = element_rect(fill = \"grey90\", color = \"grey95\"),\n\t\tstrip.text = element_text(size = 11),\n\t\tpanel.border = element_rect(color = \"grey50\", fill = NA, size = 1),\n\t\tpanel.grid.major = element_blank(), panel.grid.minor = element_blank())\nrm(tmp)\n\nplot_income_sex_all / plot_log_income_sex_all +\n\tplot_annotation(\n\t\ttitle = \"Without controlling for education level or age, men earn higher monthly wages than women.\")\n\n```\n:::\n\n\n\n![](images/prompt23_inc_sex_2025.jpg){fig-alt=\"line graphs showing monthly income by sex and by salaried and hourly workers in denmark from 2015 to 2023. the bottom graphs have log10 transformations\"}\n\nWhat we see here is that gender pay gap I mentioned at the start. It occurs regardless of employee type (hourly or salaried).\n\nDisaggregating by education level will show us some interesting patterns. I won't show the full code here, as the only real difference is using a `facet_grid(afloen ~ ed_level, axes = \"all\", axis.labels = \"all_x\")` call to put the worker types in the rows and education level in the columns. I had to play around with the income labels depending on year, tweaking the `hjust` or `vjust` to get them to line up nicely. I also kept the panel background grey as I found it easier on the eye to scan the lines over grey than over white.\n\nBecause the log10 transformation didn't make a noticeable difference here any more than in the previous charts, I'm not including it here.\n\n![](images/prompt23_inc_sex_deg_2025.jpg){fig-alt=\"line graphs showing monthly income by sex, education level and by salaried and hourly workers in denmark from 2015 to 2023.\"}\n\nThe first thing we see confirms the table I showed at the top of this post - there is a persistent gender pay gap in Denmark. The gaps are not as stark among hourly workers, and at some educational attainment levels there is almost no gap at all. For salaried workers the closest to parity comes at the PhD level. The gap is widest for salaried workers for those with vocational Bachelors. Perhaps a call-back to prompt 6 where we saw who was earning SOSU degrees? It tended to be mostly women, and the earnings on a SOSU degree aren't very high.\n\nIt's a bit surprising at first glance, because salaries for so many jobs are negotiated by the unions that many Danes belong to. But digging deeper into the gaps in degree fields might explain it. So would adding age and if/how many children a woman has. Maybe the reduction in total pay that happens during maternity leave cuts the average earnings if enough women at similar life points stop out for leave? Also important is to look at job classification - manager, line staff, trainee, etc.\n\nAs this is already a very long post I won't dig deeper into job level, specific degree fields (humanities, sciences) within the degree levels (vocational or academic Bachelor, Masters, etc), but will get into that after the challenge is done.\n\n*created and posted April 25, 2025*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/d3-bundle-5.16.0/d3-bundle.min.js\"></script>\n<script src=\"../../site_libs/d3-lasso-0.0.5/d3-lasso.min.js\"></script>\n<script src=\"../../site_libs/save-svg-as-png-1.4.17/save-svg-as-png.min.js\"></script>\n<script src=\"../../site_libs/flatbush-4.4.0/flatbush.min.js\"></script>\n<link href=\"../../site_libs/ggiraphjs-0.8.10/ggiraphjs.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/ggiraphjs-0.8.10/ggiraphjs.min.js\"></script>\n<script src=\"../../site_libs/girafe-binding-0.8.13/girafe.js\"></script>\n<script src=\"../../site_libs/d3-4.9.1/d3.min.js\"></script>\n<script src=\"../../site_libs/sankey-1/sankey.js\"></script>\n<script src=\"../../site_libs/sankeyNetwork-binding-0.4.1/sankeyNetwork.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}