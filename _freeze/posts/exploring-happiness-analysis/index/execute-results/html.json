{
  "hash": "0d82dd5658d34bf45d5c04d4947587f7",
  "result": {
    "markdown": "---\ntitle: \"Exploring Happiness - Part 2...Analysis\"\nauthor: \"gregers kjerulf dubrow\"\ndate: '2023-11-17'\ncategories: [post, news, rstats, eda]\nimage: \"dalias_happy.jpeg\"\neditor: \n  mode: source\n---\n\n\n\n\n## *I accidentally pushed this to github way too early and it published, and now for some reason despite trying to delete I can't make it disappear from the blog. I'll finish the post soon, so until I can either delete or finish, consider this a work in progress*\n\nIn [Part 1](https://www.gregdubrow.io/posts/exploring-happiness-eda/) I did some exploratory data analysis on the [World Happiness Report](https://worldhappiness.report) data for Chapter 2 of the 2023 edition.\n\nThat post got me thinking a bit about being more deliberate about my own initial workflow. Some people have project templates, but I mostly just need a starter script template. So I added some lines to my template script to really ingrain the habit of using those packages for the EDA phase. It's below...feel free to borrow and of course modify to work\n\n\n::: {.cell ECHO='true'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"code for my r script template\"}\n### template for r analysis work. save as w/ appropriate name to project directory\n\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\n\n# EDA tools\nlibrary(DataExplorer)\nlibrary(explore)\nlibrary(skimr)\n\n# some custom functions\nsource(\"~/Data/r/basic functions.R\")\n\n# sets theme as default for all plots\ntheme_set(theme_light)\n\n## ggplot helpers - load if necessary\nlibrary(patchwork) # to stitch together plots\nlibrary(ggtext) # helper functions for ggplot text\nlibrary(ggrepel) # helper functions for ggplot text\n\n\n### load data\n\n\n### clean data, redo as necesary after running basic EDA\n\n\n\n### EDA with DataExplorer, explore, skimr\n\n## DataExplorer summary of completes, missings\neda1 <- introduce(DATA)\nview(eda1)\n\n## explorer summary\nwhr23_fig2_1 %>%\n\tdescribe_tbl()\n\n## skimr summary\nDATA %>%\n\tselect() %>%\n\tskim()\n\n## go back and clean if issues seen here ##\n\n## dataexplorer plots\nplot_bar(DATA)\nplot_histogram(DATA, nrow = 5L)\n\n## dataexplorer correlations\nDATA %>%\n\tselect(or deselect as needed) %>%\n\tfilter(!is.na(if needed)) %>%\n\tplot_correlation(maxcat = 5L, type = \"continuous\", geom_text_args = list(\"size\" = 4))\n\n## dataexplorer scatterplots\nplot_scatterplot(\n\tDATA %>% select(), by = \"choose target for y axis\", nrow = 3L)\n\n## explorer shiny app\nexplore(DATA %>%\n\t\t\t\t\tselect())\n\n### continue with deeper analysis here or start new r script\n```\n:::\n\n\nBut let's get back to examining what makes people happy. By way of a quick recap:\n\n-   The WHR comes from an annual world-wide survey administered by [Gallup](https://www.gallup.com/178667/gallup-world-poll-work.aspx) and is published by the [Sustainable Development Solutions Network](https://www.unsdsn.org/).\n-   Data for Chapter 2 are made available every year, and include a 3-year rolling average of the ladder happiness score aggregated by country, other questions from the poll, and logged GDP for the country.\n\nThe EDA in part 1 showed:\n\n-   There are not many missing values in the data.\n-   All of the component variables except generosity have strong positive correlations with the happiness score.\n-   Perception of corruption has, as expected, a negative association with happiness.\n\nLeading me to want to explore relationship between the ladder score and components by country and region.\n\nBut first...I spaced on adding one varaible to the dataset, the GINI index, which measures *\"the extent to which the distribution of income (or, in some cases, consumption expenditure) among individuals or households within an economy deviates from a perfectly equal distribution....a Gini index of 0 represents perfect equality, while an index of 100 implies perfect inequality.\"* (from the [World Bank GINI data page](https://data.worldbank.org/indicator/SI.POV.GINI), click the `Details` tab)\n\nIt was referenced in the statistical appendix but was not included in the dataset made avaialble. The Chapter 2 authors used two GINI values:\n\n-   a GINI of household income as reported to the Gallup survey and imputed via a STATA function, and\n-   the World Bank's GINI value, taken as the mean of GINI values from 2000 to 2022 to account for the spotty nature of by-country GINI values.\n\nWe can't do the Gallup & STATA generated GINI because we can't get the data and I don't have STATA. So we'll get the World Bank values, and add that into the data already created. Then some quick EDA and the analysis we came here to do.\n\nWe'll start by loading the packages we'll use here, as well as the WHR data we already created.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(janitor) # tools for data cleaning\n\n# functions I use often enough to load them regularly...should probably write a personal package\nsource(\"~/Data/r/basic functions.R\")\n\n# load data \nwhr23_fig2_1a <- readRDS(\n\tfile = \"~/Data/r/World Happiness Report/data/whr23_fig2_1.rds\")\n```\n:::\n\n\nTo get the GINI values I went to the World Bank's GINI page and downloaded the latest spreadsheet. There are a couple of helpful `r` packages to get World Bank data; Vincent Arel-Bundock's(http://arelbundock.com) [WDI](https://github.com/vincentarelbundock/WDI) and the [Geospatial Science and Human Security at Oak Ridge National Lab's](https://www.ornl.gov/gshsd) [`wbstats`](https://gshs-ornl.github.io/wbstats/) but for now we'll just use the spreadsheet.\n\nI'll create a GINI average as per the WHR authors and I'll also extract the latest GINI value from the set. Not sure which is ultimately the nest to use. The data need a bit of cleaning to work for our purposes.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"code for loading GINI values\"}\nginis <- readxl::read_excel(\"~/Data/r/World Happiness Report/data/API_SI.POV.GINI_DS2_en_excel_v2_5994963.xlsx\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsheet = \"Data\") %>%\n\t# clean the country names\n\trename(country_name = `Country Name`, country_code = `Country Code`) %>%\n\t# select values from 2000 to 2022\n\tselect(country_name, country_code, `2000`:`2022`) %>%\n\t# get rid of some rows we don't need\n\tfilter(!grepl('dividend', country_name)) %>%\n\tfilter(!grepl('income', country_name)) %>%\n\t# work rowwise to get avg and latest from 2000 to 2022\n\trowwise() %>%\n\tmutate(gini_avg = mean(c_across(c(-country_name:-country_code)), na.rm = TRUE)) %>%\n\t# move average to front to get latest\n\tselect(country_name, country_code, gini_avg, everything()) %>%\n\t## does a coalesce to get last non-NA but reverse for all cols but name and code\n\tmutate(gini_latest = do.call(coalesce, rev(across(-country_name:-gini_avg)))) %>%\n\tungroup() %>%\n\t# clean up some country names to match with WHR data\n\tmutate(country_name =\n\t\t\t\t \tcase_when(country_name == \"Czechia\" ~ \"Czech Republic\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Congo, Dem. Rep.\" ~ \"Congo (Kinshasa)\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Congo, Rep.\" ~ \"Congo (Brazzaville)\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Cote d'Ivoire\" ~ \"Ivory Coast\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Egypt, Arab Rep.\" ~ \"Egypt\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Eswatini\" ~ \"Swaziland\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Gambia, The\" ~ \"Gambia\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Hong Kong SAR, China\" ~ \"Hong Kong S.A.R. of China\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Iran, Islamic Rep.\" ~ \"Iran\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Korea, Rep.\" ~ \"South Korea\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Kyrgyz Republic\" ~ \"Kyrgyzstan\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Lao PDR\" ~ \"Laos\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Russian Federation\" ~ \"Russia\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Slovak Republic\" ~ \"Slovakia\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Turkiye\" ~ \"Turkey\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Venezuela, RB\" ~ \"Venezuela\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Viet Nam\" ~ \"Vietnam\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"West Bank and Gaza\" ~ \"Palestinian Territories\",\n\t\t\t\t \t\t\t\t\t\tcountry_name == \"Yemen, Rep.\" ~ \"Yemen\",\n\t\t\t\t \t\t\t\t\t\tTRUE ~ country_name)) %>%\n\tselect(country_name, country_code, gini_avg, gini_latest)\n```\n:::\n\n\nNow let's add it to the data we already have...\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"code for joining GINI to WHR data\"}\nwhr23_fig2_1 <- whr23_fig2_1a %>%\n\tmerge(ginis, all = TRUE) %>%\n\tas_tibble() %>%\n\tselect(country_name, country_code, region, whr_year:lowerwhisker, logged_gdp_per_capita,\n\t\t\t\t gini_avg, gini_latest, everything()) %>%\n\t## fill in Taiwan, no longer in this set but still available \n\t### at https://pip.worldbank.org/country-profiles/TWN\n\tmutate(gini_avg = ifelse(\n\t\tcountry_name == \"Taiwan Province of China\", 32.09833333, gini_avg)) %>%\n\tmutate(gini_latest = ifelse(\n\t\tcountry_name == \"Taiwan Province of China\", 31.48, gini_latest)) %>%\n\tfilter(!is.na(ladder_score))\n```\n:::\n\n\n*N.B...yes, I use `merge()` and not `left/right/full_join()`...I learned SAS before SQL and old habits die hard (shrug emoji).*\n\n*N.B.2...Taiwan data is no longer avaialble in most WB sets, either in the spreadsheet or via the API the packages access. It is still at the WB's [Poverty & Inequality Platform](https://pip.worldbank.org/country-profiles/TWN) so I downloaded what I could and hard-coded. Why? Because I'm a little OCD when it comes to trying to minimize missing data.*\n\nAnyway...now we have to do some quick EDA on the GINI values in relation to the data we have. First the missing data...\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# EDA tools\nlibrary(DataExplorer) \nlibrary(explore)\nlibrary(skimr)\n\n# a quick skim \nwhr23_fig2_1 %>%\n\tselect(gini_avg, gini_latest) %>%\n\tskimr::skim()\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |Piped data |\n|Number of rows           |137        |\n|Number of columns        |2          |\n|_______________________  |           |\n|Column type frequency:   |           |\n|numeric                  |2          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|  mean|   sd|    p0|   p25|   p50|   p75| p100|hist  |\n|:-------------|---------:|-------------:|-----:|----:|-----:|-----:|-----:|-----:|----:|:-----|\n|gini_avg      |         7|          0.95| 38.09| 7.88| 24.79| 32.26| 36.68| 42.71| 62.4|▆▇▅▂▁ |\n|gini_latest   |         7|          0.95| 36.73| 7.60| 23.20| 31.54| 35.30| 40.88| 63.0|▃▇▃▁▁ |\n:::\n:::\n\n\nExcellent, only 7 missing.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}