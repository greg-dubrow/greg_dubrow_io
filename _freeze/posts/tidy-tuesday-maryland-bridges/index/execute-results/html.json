{
  "hash": "c26a569952316a9725c305d313bc91cc",
  "result": {
    "markdown": "---\ntitle: \"Tidy Tuesday, November 27, 2018 - Maryland Bridges\"\nauthor: \"gregers kjerulf dubrow\"\ndate: '2020-11-29'\ncategories: [post, tidy-tuesday, rstats]\nimage: \"fskbr.jpg\"\n---\n\n\n[![The Francis Scott Key Bridge in Baltimore](fskbr.jpg){fig-align=\"left\"} ](https://en.wikipedia.org/wiki/Francis_Scott_Key_Bridge_%28Baltimore%29#/media/File:Francis_Scott_Key_Bridge_Eastern_View.jpg)\n\n\nThis dataset was posted to the [#TidyTuesday repo](https://github.com/rfordatascience/tidytuesday) back in [November 2018](https://github.com/rfordatascience/tidytuesday/tree/master/data/2018/2018-11-27). I worked on it a bit then, but didn't properly finish it until March of 2020. With the blog finally set up figured I might as well post it as an entry.\n\n*Update for migration from Hugo to Quarto...now that code-fold is native to code chunks, I'll sometimes use if for long bits of code. Just click the down arrow to show code*\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# readin in data, create df for plots\nlibrary(tidytuesdayR) # to load tidytuesday data\nlibrary(tidyverse) # to do tidyverse things\nlibrary(tidylog) # to get a log of what's happening to the data\nlibrary(patchwork) # stitch plots together\nlibrary(gt) # lets make tables\nlibrary(RColorBrewer) # colors!\nlibrary(scales) # format chart output\n```\n:::\n\n\n### First let's read in the file from the raw data file on github\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt_balt_gh <-\nread_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018/2018-11-27/baltimore_bridges.csv\",\n         progress = show_progress())\n```\n:::\n\n\n### Organize and clean the data for analysis\n\n-   clean up some date and name issues\n-   a decade-built field, factored for sorting\n-   time since last inspection\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"show data cleaning code\"}\n# keeping the comparison date March 21 when I originally did analysis\ntoday <- as.Date(c(\"2020-03-21\"))\n#Sys.Date()\ntoday_yr <- as.numeric(format(today, format=\"%Y\"))\n\ntt_mdbrdf <- as.data.frame(tt_balt_gh) %>%\n  mutate(age = today_yr - yr_built) %>%\n  #  mutate(vehicles_n = as.numeric(str_remove(vehicles, \" vehicles\")))\n  ## not needed, avg_daily_traffic has same info\n  mutate(inspection_yr = inspection_yr + 2000) %>%\n  mutate(county = ifelse(county == \"Baltimore city\", \"Baltimore City\", county)) %>%\n  mutate(county = str_replace(county, \" County\", \"\")) %>%\n  mutate(bridge_condition = factor(bridge_condition, levels = c(\"Good\", \"Fair\", \"Poor\"))) %>%\n  mutate(decade_built = case_when(yr_built <= 1899 ~ \"pre 1900\", \n                                  yr_built >= 1900 & yr_built <1910 ~ \"1900-09\",\n                                  yr_built >= 1910 & yr_built <1920 ~ \"1910-19\",\n                                  yr_built >= 1920 & yr_built <1930 ~ \"1920-29\",\n                                  yr_built >= 1930 & yr_built <1940 ~ \"1930-39\",\n                                  yr_built >= 1940 & yr_built <1950 ~ \"1940-49\",\n                                  yr_built >= 1950 & yr_built <1960 ~ \"1950-59\",\n                                  yr_built >= 1960 & yr_built <1970 ~ \"1960-69\",\n                                  yr_built >= 1970 & yr_built <1980 ~ \"1970-79\",\n                                  yr_built >= 1980 & yr_built <1990 ~ \"1980-89\",\n                                  yr_built >= 1990 & yr_built <2000 ~ \"1990-99\",\n                                  yr_built >= 2000 & yr_built <2010 ~ \"2000-09\",\n                                  TRUE ~ \"2010-19\")) %>%\n  mutate(decade_built = factor(decade_built, levels = \n                                 c(\"pre 1900\", \"1900-09\", \"1910-19\", \"1920-29\", \"1930-39\",\n                                   \"1940-49\", \"1950-59\", \"1960-69\", \"1970-79\", \n                                   \"1980-89\", \"1990-99\", \"2000-09\", \"2010-19\"))) %>%\n  mutate(inspect_mmyy = ISOdate(year = inspection_yr, month = inspection_mo, day = \"01\")) %>%\n  mutate(inspect_mmyy = as.Date(inspect_mmyy, \"%m/%d/%y\")) %>%\n  mutate(inspect_days = today - inspect_mmyy) %>%\n  mutate(inspect_daysn = as.numeric(inspect_days)) %>%\n  mutate(inspect_years = inspect_daysn/ 365.25) %>%\n  mutate(inspect_months = inspect_daysn / 30.417)\n```\n:::\n\n\n### The first few charts look at bridges built by decade, the condition of all bridges by county, and how long since last inspection.\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code}\ntt_mdbrdf %>% \n  mutate(county = str_replace(county, \" County\", \"\")) %>%\n  count(decade_built) %>%\n  ggplot(aes(decade_built, n)) +\n  geom_bar(stat = \"identity\", fill = \"navy\") +\n  geom_text(aes(label = n), color = \"white\", vjust = 1.2) +\n  labs(title = \"Peak bridge-building years in Maryland were 1950s to 1990s\" ,\n        x = \"\", y = \"\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr01-1.png){width=100%}\n:::\n:::\n\n\nBaltimore City has the lowest percentage of bridges in good condition, Anne Arundel the most. Baltimore City & Harford County seems to have the largest percentage of bridges in poor condition.\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"show stacked bar chart code\"}\n## percent bridge condition by county\n# need to create df object to do subset label call in bar chart\nbrcondcty <- \ntt_mdbrdf %>%\n  count(county, bridge_condition) %>%\n  group_by(county) %>%\n  mutate(pct = n / sum(n)) %>%\n  ungroup() \n\nggplot(brcondcty, aes(x = county, y = pct, fill = bridge_condition)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(data = subset(brcondcty, bridge_condition != \"Poor\"), \n            aes(label = percent(pct)), position = \"stack\", \n            color= \"#585858\", vjust = 1, size = 3.5) +\n  scale_y_continuous(label = percent_format()) +\n  labs(title = \"Percent bridge condition by county\" , \n        x = \"\", y = \"\", fill = \"Bridge Condition\") +\n  scale_fill_brewer(type = \"seq\", palette = \"Blues\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr02-1.png){width=100%}\n:::\n:::\n\n\nGiven the condition percentages in Baltimore County & City and Harford County, it's no surprise that their bridges are older than in other counties.\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"show bar chart code\"}\n## median age of bridges by county\ntt_mdbrdf %>%\n  group_by(county) %>%\n  summarise(medage = median(age)) %>%\n  ungroup() %>%\n  ggplot(aes(x = county, y = medage)) +\n  geom_bar(stat = \"identity\", fill= \"navy\") +\n  geom_text(aes(label = round(medage, digits = 1)), \n            size = 5, color = \"white\", vjust = 1.6) +\n  ylim(0, 60) +\n  labs(title = \"Median bridge age by county\" , \n        x = \"\", y = \"\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr03-1.png){width=100%}\n:::\n:::\n\n\nIt's somewhat reassuring then that Baltimore City bridges at least have less time in months since last inspection than do the counties.\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"show bar chart code\"}\n## median months since last inspection by county\ntt_mdbrdf %>%\n  group_by(county) %>%\n  summarise(medinsp = median(inspect_months)) %>%\n  ungroup() %>%\n  ggplot(aes(x = county, y = medinsp)) +\n  geom_bar(stat = \"identity\", fill= \"navy\") +\n  geom_text(aes(label = round(medinsp, digits = 1)), \n            size = 5, color = \"white\", vjust = 1.6) +\n  ylim(0, 60) +\n  labs(title = \"Median months since last inspection, by county\",\n       subtitle = \"as of March 2020\",\n       x = \"\", y = \"\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr04-1.png){width=100%}\n:::\n:::\n\n\nIt might be the outliers pulling the smoothing line straight, but there doesn't seem to be too much of a relationship between age and time since last inspection.\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"show scatterplot code\"}\n## age by months since last inspection\ntt_mdbrdf %>%\n  ggplot(aes(inspect_months, age)) +\n  geom_point(color = \"navy\") +\n  geom_smooth() +\n  labs(x = \"Months since last inspection (as of March 2020)\",\n       y = \"Age _(in years)_\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr05-1.png){width=100%}\n:::\n:::\n\n\nAnd in fact, removing the outliers shows a slight relationship; the older bridges do seem to get inspected more frequently. In terms of a better visualization, looking at this again, I wonder if some jittering or another type of plot might have been more visually appealing, givne the clustering of most recent inspections.\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code}\n# same code as above but with outliers removed\ntt_mdbrdf %>%\n  filter(age <150, inspect_months <60) %>%\n  ggplot(aes(inspect_months, age)) +\n  geom_point(color = \"navy\") +\n  geom_smooth() +\n  labs(title = \"Months since inspection, outliers removed\", \n       x = \"Months since last inspection (as of March 2020)\",\n       y = \"Age _(in years)_\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr06-1.png){width=100%}\n:::\n:::\n\n\nNot sure if scatter-plot with colors by county is best way to go for this idea. Maybe a tree map?\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"show scatterplot code\"}\n# same but colors by county\ntt_mdbrdf %>%\n  ggplot(aes(inspect_months, age, color = county)) +\n  geom_point() +\n  scale_color_brewer(palette=\"Dark2\") +\n  labs(title = \"Months since last inspection (from current date)\", \n       x = \"Months since last inspection (from current date)\",\n       y = \"Age (in years)\") +\n  theme_minimal() +\n  theme(legend.position = c(.8, .95),\n        legend.justification = c(\"right\", \"top\"),\n        legend.box.just = \"right\",\n        legend.margin = margin(6, 6, 6, 6))\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr07-1.png){width=100%}\n:::\n:::\n\n\nFunky distributions here...Anne Arundel & Baltimore City have the highest median daily riders, but Howard County's upper quartile is way out there.\n\n*showing the code here to illustrate how I like to run the mean & interquartiles in the same code as rendering the plot.*\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code}\n# median & interquartiles of daily riders of bridges by county -\ntt_mdbrdf %>%\n  group_by(county) %>%\n  summarise(medtraf = median(avg_daily_traffic),\n            lq = quantile(avg_daily_traffic, 0.25),\n            uq = quantile(avg_daily_traffic, 0.75)) %>%\n  ungroup() %>%\n  ggplot(aes(county, medtraf)) +\n  geom_linerange(aes(ymin = lq, ymax = uq), size = 2, color = \"navy\") +\n  geom_point(size = 3, color = \"orange\", alpha = .8) +\n  geom_text(aes(label = comma(medtraf, digits = 0)), \n            size = 4, color = \"orange\", hjust = 1.2) +\n  geom_text(aes(y = uq, label = comma(uq, digits = 0)), \n            size = 4, color = \"navy\", hjust = 1.2) +\n  geom_text(aes(y = lq, label = comma(lq, digits = 0)), \n            size = 4, color = \"navy\", hjust = 1.2) +\n  scale_y_continuous(label = comma) +\n  labs(title = \"Median & interquartile ranges of average daily riders per bridge, by county\" , \n       x = \"\", y = \"\") +\n  theme_minimal() +\n  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr08-1.png){width=100%}\n:::\n:::\n\n\nAs with the other scatterplot with colors for county, might need a different way to see relationship between bridge age and daily traffic by county.\n\n\n::: {.cell fig.dpi='300'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"show scatterplot code\"}\n## age by avg daily riders by county\ntt_mdbrdf %>%\n  ggplot(aes(avg_daily_traffic, age, color = county)) +\n  geom_point() +\n  scale_color_brewer(palette=\"Dark2\") +\n  scale_x_continuous(labels = comma) +\n  labs(title = \"Average daily traffic per bridge, by county\" , \n        x = \"Average daily traffic\",\n       y = \"Age (in years)\") +\n  theme_minimal() +\n  theme(legend.position = c(.75, .95),\n        legend.justification = c(\"right\", \"top\"),\n        legend.box.just = \"right\",\n        legend.margin = margin(6, 6, 6, 6))\n```\n\n::: {.cell-output-display}\n![](images/tt_mdbr09-1.png){width=100%}\n:::\n:::\n\n\n*Cover image for post [(CC BY-SA 4.0)](https://creativecommons.org/licenses/by-sa/4.0/) from [Wikipedia](https://en.wikipedia.org/wiki/Francis_Scott_Key_Bridge_%28Baltimore%29#/media/File:Francis_Scott_Key_Bridge_Eastern_View.jpg)*\n\n*This post was last updated on 2023-05-14*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}