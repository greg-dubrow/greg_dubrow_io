---
title: "30 Day Chart Challenge 2024"
description: "Let's make some charts!"
author: "gregers kjerulf dubrow"
date: "today"
categories: [post, rstats, ggplot, dataviz, chartchallenge, tidytuesday]
image: "prompts.png"
toc: true
lightbox: true
editor: 
  mode: source
---

```{r setup}
#| include: false
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.path = "images/",
  out.width = "100%") 
```

![](prompts.png){width="75%" fig-align="left" fig-alt="image listing the prompts for the 30 day chart challenge 2024."}

## My Plan for the Challenge {#plan}

If you regularly scroll through dataviz social media you probably see lots of posts in April where people show off their work for the [30 Day Chart Challenge](https://github.com/30DayChartChallenge/Edition2024). I never participate in these chart or map challenges because usually they take me by surprise and it's alreayd a week in before I notice and then I figure I'm too late.

Well not this year. Even though I'm (checks calendar) *three weeks* late to the party, I'm going to try and add a few charts to the challenge. I figure it's a good way to keep me consistently creating new visualisations, using the prompts to spur me to think about different data sources and dataviz approaches. My plan is to:

-   Produce charts for as many prompts as possible, working in prompt-day order.
-   Post them to social media on my [Bluesky](https://bsky.app/profile/gregerskjerulf.bsky.social), [Mastodon](https://fosstodon.org/@Greg_Dubrow), [Twitter](https://twitter.com/greg_dubrow), and [LinkedIn](https://www.linkedin.com/in/dubrowg/) accounts.
-   Add them to this post, meaning the posting date will refresh to the date I've added the chart.So If I get to alot or even all of them, this will be a long post.

I may not get to every prompt, but I'll do what I can. So let's get going.

## Prompt #1 - Part-to-Whole {#prompt1}

I chose to interpret this prompt by doing a stacked bar chart displaying educational attainment as a proportion of populations by regions in the UK. It doubles as a late-to-the-party entry for the [January 23, 2024 Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2024/2024-01-23) challenge.

The original data is from the UK Office of National Statistics, in a report they produced looking at [educational attainment by socio-economic factors](https://www.ons.gov.uk/peoplepopulationandcommunity/educationandchildcare/articles/whydochildrenandyoungpeopleinsmallertownsdobetteracademicallythanthoseinlargertowns/2023-07-25).

My plan for this was to knock out the chart in about an hour, but I needed up having to do a bit more data transformation than I thought. I also had to read up a bit on UK education [levels](https://www.gov.uk/what-different-qualification-levels-mean/list-of-qualification-levels) and [stages](https://www.gov.uk/national-curriculum). In the end, it took a few hours to get it as I wanted.

First we'll get and clean the data...

```{r prompt1_1, message=FALSE, ECHO = TRUE, eval= TRUE}
#| warning: false
#| message: false 
#| error: false
#| echo: true
#| eval: true
#| code-overflow: scroll
#| code-fold: true
#| code-summary: "Show code for getting and cleaning data"

library(tidyverse) # to do tidyverse things
library(tidytuesdayR) #to get data from tidy tuesday repo
library(tidylog) # to get a log of what's happening to the data
library(janitor) # tools for data cleaning
library(ggtext) # to help make ggplot text look good

# load tidy tuesday data
ukeduc1 <- tt_load("2024-01-23")

# create tibble from csv, clean data, add some fields for the chart
ukeduc <- as_tibble(ukeduc1$english_education) %>%
	mutate(town11nm = ifelse(town11nm == "Outer london BUAs", "Outer London BUAs", town11nm)) %>%
	mutate(ttwa_classification = ifelse(
		town11nm %in% c("Inner London BUAs", "Outer London BUAs"), 
		"Majority conurbation", ttwa_classification)) %>%
	mutate(ttwa11nm = ifelse(
		town11nm %in% c("Inner London BUAs", "Outer London BUAs"), "London", ttwa11nm)) %>%
	mutate(ttwa11cd = ifelse(
		town11nm %in% c("Inner London BUAs", "Outer London BUAs"), "E30000234", ttwa11cd)) %>%
	mutate(across(26:29, ~ifelse(is.na(.),0,.))) %>%
	mutate(level_sum = rowSums(.[c(26:29)])) %>%
	# to get the number of students in the achievement groups we need to multiply the cohort
	# by the percentage and divide by 100 as in the original data they were displayed as 
	# full numbers, eg 17.2 instead of 0.172.
	mutate(highest_level_qualification_achieved_by_age_22_na = 100 - level_sum) %>%
	mutate(n_lesslev1_age22 =
			round(highest_level_qualification_achieved_by_age_22_less_than_level_1 * (ks4_2012_2013_counts/100) ,0)) %>%
	mutate(n_lev1to2_age22 =
			round(highest_level_qualification_achieved_by_age_22_level_1_to_level_2 * (ks4_2012_2013_counts/100) ,0)) %>%
	mutate(n_lev3to5_age22 =
			round(highest_level_qualification_achieved_by_age_22_level_3_to_level_5 * (ks4_2012_2013_counts/100) ,0)) %>%
	mutate(n_lev6plus_age22 =
			round(highest_level_qualification_achieved_by_age_22_level_6_or_above * (ks4_2012_2013_counts/100) ,0)) %>%
	mutate(n_lev_na_age22 =
			round(highest_level_qualification_achieved_by_age_22_na * (ks4_2012_2013_counts/100) ,0))
```

Ok, so we have data, let's make the chart. It's a horizontal bar chart showing the eudcational attainment at age 22 of a cohort of 15-16 year old students who sat for college qualifying exams (GCSEs) in the 2012-13 school year. Meaning the ending time point here is 2018-19. Attainment is plotted by level and by region. Because the original data is by town, we have to group by region to get what we want.

```{r prompt1_2, message=FALSE, ECHO = TRUE, eval= TRUE}
#| fig.width: 7.5
#| fig.height: 4.0
#| fig-dpi: 300
#| warning: false
#| message: false 
#| error: false
#| echo: true
#| eval: true
#| code-overflow: scroll
#| code-fold: true
#| code-summary: "Show code for making the chart"

# need to create cohort population by region
ukeduc %>%
	rename(region =rgn11nm ) %>%
	# group by regions and create region totals 
	group_by(region) %>%
	summarise(region_cohort = sum(ks4_2012_2013_counts),
					region_levless1_age22 = sum(n_lesslev1_age22),
					region_lev1to2_age22 = sum(n_lev1to2_age22),
					region_lev3to5_age22 = sum(n_lev3to5_age22),
					region_lev6plus_age22 = sum(n_lev6plus_age22),
					region_lev_na_age22 = sum(n_lev_na_age22)) %>%
	# pivot longer and make the education attainment field into factors. 
	# factor labels for the chart
	pivot_longer(cols = ends_with("age22"), 
						names_to = "ed_ettain_age22", 
						values_to = "ed_attain_n") %>%
	mutate(
		ed_ettain_age22 = 
			factor(ed_ettain_age22, 
					levels = c("region_lev_na_age22", "region_levless1_age22", "region_lev1to2_age22", 
							"region_lev3to5_age22",  "region_lev6plus_age22"), 
					labels = c("No data", "Level <1", "Level = 1-2", "Level = 3-5", "Level = 6+"))) %>%
	mutate(ed_attain_pct = ed_attain_n / region_cohort) %>%
	mutate(ed_attain_pct2 = round(ed_attain_pct*100, 1)) %>%
	ungroup() %>%
	mutate(region = factor(region)) %>%
	filter(!is.na(region)) %>%
	# pass this temporary set thru to the ggplot call
	{. ->> tmp} %>%
	ggplot(aes(ed_attain_pct, fct_rev(region), fill = fct_rev(ed_ettain_age22))) +
	geom_bar(stat = "identity") +
	scale_x_continuous(
		expand = c(0,0), 
		breaks = c(0, 0.25, 0.50, 0.75, 1), 
		labels = c("0", "25%", "50%", "75%", "100%")) +
	geom_text(data = subset(tmp, ed_attain_pct >0.025),
		aes(label = scales::percent(round(ed_attain_pct , 2))),
					position = position_stack(vjust = 0.5),
					color= "white", vjust = 0.5, size = 5) +
	labs(title = "Students in London most likely to have at least 4-year degree by Age 22",
		subtitle = "Sixth Year Educational Outcomes for Level 4 2012-13 Cohort by UK Region",
		caption = "*Tidy Tuesday data 01/23/2024, from UK Office of National Statistics*",
		x = "", y = "Region") +
	scale_fill_brewer(palette = "Set2") +
	theme_minimal() +
	theme(legend.position = "bottom", legend.spacing.x = unit(0, 'cm'), 
			legend.key.width = unit(1.5, 'cm'), legend.margin=margin(-10, 0, 0, 0),
			plot.title = element_text(hjust = 1), 
			plot.caption = element_markdown(),
			panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
	guides(fill = guide_legend(
		label.position = "bottom", reverse = TRUE, 
		title = "Cohort at Age 22", title.position = "top"))
```

We see from this chart that most in regions the rate of 4-year college degree completion (level 6+) was in the mid-high 20s, with students from the London region having the highest rate at 36%.
